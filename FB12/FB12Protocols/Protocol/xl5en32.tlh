// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (8d23794c).
//
// xl5en32.tlh
//
// C++ source equivalent of Win32 type library xl5en32.olb
// compiler-generated file created 09/13/00 at 11:42:04 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace XL95 {

//
// Forward references and typedefs
//

struct __declspec(uuid("00020856-0000-0000-c000-000000000046"))
/* dispinterface */ _Global;
struct __declspec(uuid("00020841-0000-0000-c000-000000000046"))
/* dispinterface */ Application;
struct __declspec(uuid("00020852-0000-0000-c000-000000000046"))
/* dispinterface */ Style;
struct __declspec(uuid("00020853-0000-0000-c000-000000000046"))
/* dispinterface */ Styles;
struct __declspec(uuid("0002085c-0000-0000-c000-000000000046"))
/* dispinterface */ Toolbar;
struct __declspec(uuid("0002085d-0000-0000-c000-000000000046"))
/* dispinterface */ Toolbars;
struct __declspec(uuid("0002085e-0000-0000-c000-000000000046"))
/* dispinterface */ ToolbarButton;
struct __declspec(uuid("0002085f-0000-0000-c000-000000000046"))
/* dispinterface */ ToolbarButtons;
struct __declspec(uuid("00020857-0000-0000-c000-000000000046"))
/* dispinterface */ AddIn;
struct __declspec(uuid("00020858-0000-0000-c000-000000000046"))
/* dispinterface */ AddIns;
struct __declspec(uuid("00020860-0000-0000-c000-000000000046"))
/* dispinterface */ Areas;
struct __declspec(uuid("00020846-0000-0000-c000-000000000046"))
/* dispinterface */ Range;
struct __declspec(uuid("00020861-0000-0000-c000-000000000046"))
/* dispinterface */ Workbook;
struct __declspec(uuid("00020862-0000-0000-c000-000000000046"))
/* dispinterface */ Workbooks;
struct __declspec(uuid("0002084c-0000-0000-c000-000000000046"))
/* dispinterface */ Sheets;
struct __declspec(uuid("00020850-0000-0000-c000-000000000046"))
/* dispinterface */ Worksheet;
struct __declspec(uuid("000209b1-0000-0000-c000-000000000046"))
/* dispinterface */ Worksheets;
struct __declspec(uuid("00020872-0000-0000-c000-000000000046"))
/* dispinterface */ PivotTable;
struct __declspec(uuid("00020873-0000-0000-c000-000000000046"))
/* dispinterface */ PivotTables;
struct __declspec(uuid("00020874-0000-0000-c000-000000000046"))
/* dispinterface */ PivotField;
struct __declspec(uuid("00020875-0000-0000-c000-000000000046"))
/* dispinterface */ PivotFields;
struct __declspec(uuid("00020876-0000-0000-c000-000000000046"))
/* dispinterface */ PivotItem;
struct __declspec(uuid("00020877-0000-0000-c000-000000000046"))
/* dispinterface */ PivotItems;
struct __declspec(uuid("00020897-0000-0000-c000-000000000046"))
/* dispinterface */ Scenario;
struct __declspec(uuid("00020896-0000-0000-c000-000000000046"))
/* dispinterface */ Scenarios;
struct __declspec(uuid("00020864-0000-0000-c000-000000000046"))
/* dispinterface */ MenuBar;
struct __declspec(uuid("00020863-0000-0000-c000-000000000046"))
/* dispinterface */ MenuBars;
struct __declspec(uuid("00020866-0000-0000-c000-000000000046"))
/* dispinterface */ Menu;
struct __declspec(uuid("00020865-0000-0000-c000-000000000046"))
/* dispinterface */ Menus;
struct __declspec(uuid("00020868-0000-0000-c000-000000000046"))
/* dispinterface */ MenuItem;
struct __declspec(uuid("00020867-0000-0000-c000-000000000046"))
/* dispinterface */ MenuItems;
struct __declspec(uuid("00020893-0000-0000-c000-000000000046"))
/* dispinterface */ Window;
struct __declspec(uuid("00020892-0000-0000-c000-000000000046"))
/* dispinterface */ Windows;
struct __declspec(uuid("00020895-0000-0000-c000-000000000046"))
/* dispinterface */ Pane;
struct __declspec(uuid("00020894-0000-0000-c000-000000000046"))
/* dispinterface */ Panes;
struct __declspec(uuid("000208b9-0000-0000-c000-000000000046"))
/* dispinterface */ Name;
struct __declspec(uuid("000208b8-0000-0000-c000-000000000046"))
/* dispinterface */ Names;
struct __declspec(uuid("0002086f-0000-0000-c000-000000000046"))
/* dispinterface */ DrawingObjects;
struct __declspec(uuid("00020898-0000-0000-c000-000000000046"))
/* dispinterface */ GroupObject;
struct __declspec(uuid("00020899-0000-0000-c000-000000000046"))
/* dispinterface */ GroupObjects;
struct __declspec(uuid("0002089a-0000-0000-c000-000000000046"))
/* dispinterface */ Line;
struct __declspec(uuid("0002089b-0000-0000-c000-000000000046"))
/* dispinterface */ Lines;
struct __declspec(uuid("0002089c-0000-0000-c000-000000000046"))
/* dispinterface */ Rectangle;
struct __declspec(uuid("0002089d-0000-0000-c000-000000000046"))
/* dispinterface */ Rectangles;
struct __declspec(uuid("0002089e-0000-0000-c000-000000000046"))
/* dispinterface */ Oval;
struct __declspec(uuid("0002089f-0000-0000-c000-000000000046"))
/* dispinterface */ Ovals;
struct __declspec(uuid("000208a0-0000-0000-c000-000000000046"))
/* dispinterface */ Arc;
struct __declspec(uuid("000208a1-0000-0000-c000-000000000046"))
/* dispinterface */ Arcs;
struct __declspec(uuid("000208a4-0000-0000-c000-000000000046"))
/* dispinterface */ TextBox;
struct __declspec(uuid("000208a5-0000-0000-c000-000000000046"))
/* dispinterface */ TextBoxes;
struct __declspec(uuid("000208a6-0000-0000-c000-000000000046"))
/* dispinterface */ Picture;
struct __declspec(uuid("000208a7-0000-0000-c000-000000000046"))
/* dispinterface */ Pictures;
struct __declspec(uuid("000208a2-0000-0000-c000-000000000046"))
/* dispinterface */ OLEObject;
struct __declspec(uuid("000208a3-0000-0000-c000-000000000046"))
/* dispinterface */ OLEObjects;
struct __declspec(uuid("000208cf-0000-0000-c000-000000000046"))
/* dispinterface */ ChartObject;
struct __declspec(uuid("000208d0-0000-0000-c000-000000000046"))
/* dispinterface */ ChartObjects;
struct __declspec(uuid("000208a8-0000-0000-c000-000000000046"))
/* dispinterface */ Drawing;
struct __declspec(uuid("000208a9-0000-0000-c000-000000000046"))
/* dispinterface */ Drawings;
struct __declspec(uuid("0002087d-0000-0000-c000-000000000046"))
/* dispinterface */ Button;
struct __declspec(uuid("0002087e-0000-0000-c000-000000000046"))
/* dispinterface */ Buttons;
struct __declspec(uuid("00020883-0000-0000-c000-000000000046"))
/* dispinterface */ EditBox;
struct __declspec(uuid("00020884-0000-0000-c000-000000000046"))
/* dispinterface */ EditBoxes;
struct __declspec(uuid("0002087f-0000-0000-c000-000000000046"))
/* dispinterface */ CheckBox;
struct __declspec(uuid("00020880-0000-0000-c000-000000000046"))
/* dispinterface */ CheckBoxes;
struct __declspec(uuid("00020881-0000-0000-c000-000000000046"))
/* dispinterface */ OptionButton;
struct __declspec(uuid("00020882-0000-0000-c000-000000000046"))
/* dispinterface */ OptionButtons;
struct __declspec(uuid("0002088d-0000-0000-c000-000000000046"))
/* dispinterface */ Spinner;
struct __declspec(uuid("0002088e-0000-0000-c000-000000000046"))
/* dispinterface */ Spinners;
struct __declspec(uuid("00020885-0000-0000-c000-000000000046"))
/* dispinterface */ ScrollBar;
struct __declspec(uuid("00020886-0000-0000-c000-000000000046"))
/* dispinterface */ ScrollBars;
struct __declspec(uuid("00020887-0000-0000-c000-000000000046"))
/* dispinterface */ ListBox;
struct __declspec(uuid("00020888-0000-0000-c000-000000000046"))
/* dispinterface */ ListBoxes;
struct __declspec(uuid("00020889-0000-0000-c000-000000000046"))
/* dispinterface */ GroupBox;
struct __declspec(uuid("0002088a-0000-0000-c000-000000000046"))
/* dispinterface */ GroupBoxes;
struct __declspec(uuid("0002088b-0000-0000-c000-000000000046"))
/* dispinterface */ DropDown;
struct __declspec(uuid("0002088c-0000-0000-c000-000000000046"))
/* dispinterface */ DropDowns;
struct __declspec(uuid("0002088f-0000-0000-c000-000000000046"))
/* dispinterface */ DialogFrame;
struct __declspec(uuid("00020890-0000-0000-c000-000000000046"))
/* dispinterface */ Label;
struct __declspec(uuid("00020891-0000-0000-c000-000000000046"))
/* dispinterface */ Labels;
struct __declspec(uuid("00020870-0000-0000-c000-000000000046"))
/* dispinterface */ Interior;
struct __declspec(uuid("0002087b-0000-0000-c000-000000000046"))
/* dispinterface */ SoundNote;
struct __declspec(uuid("00020878-0000-0000-c000-000000000046"))
/* dispinterface */ Characters;
struct __declspec(uuid("0002087a-0000-0000-c000-000000000046"))
/* dispinterface */ Dialog;
struct __declspec(uuid("00020879-0000-0000-c000-000000000046"))
/* dispinterface */ Dialogs;
struct __declspec(uuid("000208ab-0000-0000-c000-000000000046"))
/* dispinterface */ Outline;
struct __declspec(uuid("000208aa-0000-0000-c000-000000000046"))
/* dispinterface */ RoutingSlip;
struct __declspec(uuid("000209ad-0000-0000-c000-000000000046"))
/* dispinterface */ Module;
struct __declspec(uuid("000209ae-0000-0000-c000-000000000046"))
/* dispinterface */ Modules;
struct __declspec(uuid("000209af-0000-0000-c000-000000000046"))
/* dispinterface */ DialogSheet;
struct __declspec(uuid("000209b0-0000-0000-c000-000000000046"))
/* dispinterface */ DialogSheets;
struct __declspec(uuid("000208b4-0000-0000-c000-000000000046"))
/* dispinterface */ PageSetup;
struct __declspec(uuid("000208d1-0000-0000-c000-000000000046"))
/* dispinterface */ Mailer;
struct __declspec(uuid("0002084d-0000-0000-c000-000000000046"))
/* dispinterface */ Font;
struct __declspec(uuid("00020854-0000-0000-c000-000000000046"))
/* dispinterface */ Border;
struct __declspec(uuid("00020855-0000-0000-c000-000000000046"))
/* dispinterface */ Borders;
struct __declspec(uuid("000208c0-0000-0000-c000-000000000046"))
/* dispinterface */ Corners;
struct __declspec(uuid("000208c1-0000-0000-c000-000000000046"))
/* dispinterface */ SeriesLines;
struct __declspec(uuid("000208c2-0000-0000-c000-000000000046"))
/* dispinterface */ HiLoLines;
struct __declspec(uuid("000208c3-0000-0000-c000-000000000046"))
/* dispinterface */ Gridlines;
struct __declspec(uuid("000208c4-0000-0000-c000-000000000046"))
/* dispinterface */ DropLines;
struct __declspec(uuid("000208ce-0000-0000-c000-000000000046"))
/* dispinterface */ ErrorBars;
struct __declspec(uuid("000208c5-0000-0000-c000-000000000046"))
/* dispinterface */ UpBars;
struct __declspec(uuid("000208c6-0000-0000-c000-000000000046"))
/* dispinterface */ DownBars;
struct __declspec(uuid("00020849-0000-0000-c000-000000000046"))
/* dispinterface */ ChartTitle;
struct __declspec(uuid("0002084a-0000-0000-c000-000000000046"))
/* dispinterface */ AxisTitle;
struct __declspec(uuid("000208c7-0000-0000-c000-000000000046"))
/* dispinterface */ Floor;
struct __declspec(uuid("000208c8-0000-0000-c000-000000000046"))
/* dispinterface */ Walls;
struct __declspec(uuid("000208cb-0000-0000-c000-000000000046"))
/* dispinterface */ PlotArea;
struct __declspec(uuid("000208cc-0000-0000-c000-000000000046"))
/* dispinterface */ ChartArea;
struct __declspec(uuid("000208cd-0000-0000-c000-000000000046"))
/* dispinterface */ Legend;
struct __declspec(uuid("000208c9-0000-0000-c000-000000000046"))
/* dispinterface */ TickLabels;
struct __declspec(uuid("00020847-0000-0000-c000-000000000046"))
/* dispinterface */ Chart;
struct __declspec(uuid("0002086d-0000-0000-c000-000000000046"))
/* dispinterface */ Charts;
struct __declspec(uuid("00020859-0000-0000-c000-000000000046"))
/* dispinterface */ ChartGroup;
struct __declspec(uuid("0002085a-0000-0000-c000-000000000046"))
/* dispinterface */ ChartGroups;
struct __declspec(uuid("00020848-0000-0000-c000-000000000046"))
/* dispinterface */ Axis;
struct __declspec(uuid("0002085b-0000-0000-c000-000000000046"))
/* dispinterface */ Axes;
struct __declspec(uuid("000208b2-0000-0000-c000-000000000046"))
/* dispinterface */ DataLabel;
struct __declspec(uuid("000208b3-0000-0000-c000-000000000046"))
/* dispinterface */ DataLabels;
struct __declspec(uuid("0002086a-0000-0000-c000-000000000046"))
/* dispinterface */ Point;
struct __declspec(uuid("00020869-0000-0000-c000-000000000046"))
/* dispinterface */ Points;
struct __declspec(uuid("0002086b-0000-0000-c000-000000000046"))
/* dispinterface */ Series;
struct __declspec(uuid("0002086c-0000-0000-c000-000000000046"))
/* dispinterface */ SeriesCollection;
struct __declspec(uuid("000208ba-0000-0000-c000-000000000046"))
/* dispinterface */ LegendEntry;
struct __declspec(uuid("000208bb-0000-0000-c000-000000000046"))
/* dispinterface */ LegendEntries;
struct __declspec(uuid("000208bc-0000-0000-c000-000000000046"))
/* dispinterface */ LegendKey;
struct __declspec(uuid("000208be-0000-0000-c000-000000000046"))
/* dispinterface */ Trendline;
struct __declspec(uuid("000208bd-0000-0000-c000-000000000046"))
/* dispinterface */ Trendlines;
struct /* coclass */ _ExcelApplication;
struct __declspec(uuid("000208d4-0000-0000-c000-000000000046"))
/* dispinterface */ AutoCorrect;
struct /* coclass */ _ExcelSheet;
struct /* coclass */ _ExcelChart;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(_Global, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Application, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Style, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Styles, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Toolbar, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Toolbars, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ToolbarButton, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ToolbarButtons, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(AddIn, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(AddIns, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Areas, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Range, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Workbook, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Workbooks, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Sheets, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Worksheet, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Worksheets, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(PivotTable, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(PivotTables, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(PivotField, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(PivotFields, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(PivotItem, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(PivotItems, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Scenario, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Scenarios, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(MenuBar, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(MenuBars, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Menu, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Menus, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(MenuItem, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(MenuItems, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Window, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Windows, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Pane, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Panes, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Name, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Names, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DrawingObjects, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(GroupObject, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(GroupObjects, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Line, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Lines, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Rectangle, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Rectangles, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Oval, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Ovals, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Arc, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Arcs, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(TextBox, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(TextBoxes, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Picture, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Pictures, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(OLEObject, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(OLEObjects, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ChartObject, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ChartObjects, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Drawing, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Drawings, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Button, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Buttons, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(EditBox, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(EditBoxes, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(CheckBox, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(CheckBoxes, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(OptionButton, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(OptionButtons, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Spinner, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Spinners, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ScrollBar, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ScrollBars, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ListBox, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ListBoxes, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(GroupBox, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(GroupBoxes, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DropDown, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DropDowns, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DialogFrame, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Label, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Labels, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Interior, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(SoundNote, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Characters, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Dialog, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Dialogs, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Outline, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(RoutingSlip, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Module, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Modules, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DialogSheet, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DialogSheets, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(PageSetup, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Mailer, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Font, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Border, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Borders, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Corners, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(SeriesLines, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(HiLoLines, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Gridlines, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DropLines, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ErrorBars, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(UpBars, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DownBars, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ChartTitle, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(AxisTitle, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Floor, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Walls, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(PlotArea, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ChartArea, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Legend, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(TickLabels, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Chart, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Charts, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ChartGroup, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ChartGroups, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Axis, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Axes, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DataLabel, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DataLabels, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Point, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Points, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Series, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(SeriesCollection, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(LegendEntry, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(LegendEntries, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(LegendKey, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Trendline, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Trendlines, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(AutoCorrect, __uuidof(IDispatch));

//
// Type library items
//

enum Constants
{
    xlDialogSetBackgroundPicture = 492,
    xlDialogAutoCorrect = 485,
    xlDialogFileSharing = 481,
    xlDialogVbaMakeAddin = 478,
    xlDialogActiveCellFont = 476,
    xlDialogFindFile = 475,
    xlDialogProperties = 474,
    xlDialogSummaryInfo = 474,
    xlDialogScenarioMerge = 473,
    xlDialogStandardWidth = 472,
    xlDialogMailEditMailer = 470,
    xlDialogSeriesOrder = 466,
    xlDialogFormatChart = 465,
    xlDialogErrorbarY = 464,
    xlDialogErrorbarX = 463,
    xlDialogSeriesY = 462,
    xlDialogSeriesX = 461,
    xlDialogSeriesAxes = 460,
    xlDialogOptionsListsAdd = 458,
    xlDialogSaveCopyAs = 456,
    xlDialogFunctionWizard = 450,
    xlDialogFilter = 447,
    xlDialogPushbuttonProperties = 445,
    xlDialogOpenText = 441,
    xlDialogEditboxProperties = 438,
    xlDialogListboxProperties = 437,
    xlDialogLabelProperties = 436,
    xlDialogCheckboxProperties = 435,
    xlDialogPivotFieldUngroup = 434,
    xlDialogPivotFieldGroup = 433,
    xlDialogFormatCharttype = 423,
    xlDialogTextToColumns = 422,
    xlDialogPivotShowPages = 421,
    xlDialogScrollbarProperties = 420,
    xlDialogWorkbookProtect = 417,
    xlDialogWorkbookTabSplit = 415,
    xlDialogSubtotalCreate = 398,
    xlDialogTabOrder = 394,
    xlDialogChartAddData = 392,
    xlDialogAddChartAutoformat = 390,
    xlDialogGalleryCustom = 388,
    xlDialogWorkbookName = 386,
    xlDialogWorkbookUnhide = 384,
    xlDialogMacroOptions = 382,
    xlDialogFontProperties = 381,
    xlDialogInsertTitle = 380,
    xlDialogDataLabel = 379,
    xlDialogMailNextLetter = 378,
    xlDialogFilterAdvanced = 370,
    xlDialogOptionsGeneral = 356,
    xlDialogOptionsTransition = 355,
    xlDialogWorkbookInsert = 354,
    xlDialogChartTrend = 350,
    xlDialogGalleryDoughnut = 344,
    xlDialogInsertPicture = 342,
    xlDialogMailLogon = 339,
    xlDialogRoutingSlip = 336,
    xlDialogVbaProcedureDefinition = 330,
    xlDialogVbaInsertFile = 328,
    xlDialogOptionsChart = 325,
    xlDialogAttachToolbars = 323,
    xlDialogMenuEditor = 322,
    xlDialogAddinManager = 321,
    xlDialogOptionsView = 320,
    xlDialogOptionsEdit = 319,
    xlDialogOptionsCalculation = 318,
    xlDialogPivotFieldProperties = 313,
    xlDialogPivotTableWizard = 312,
    xlDialogScenarioSummary = 311,
    xlDialogScenarioEdit = 308,
    xlDialogScenarioAdd = 307,
    xlDialogScenarioCells = 305,
    xlDialogWorkbookNew = 302,
    xlDialogFillWorkgroup = 301,
    xlDialogPlacement = 300,
    xlDialogAssignToTool = 293,
    xlDialogChartWizard = 288,
    xlDialogSaveWorkspace = 285,
    xlDialogWorkbookOptions = 284,
    xlDialogWorkbookCopy = 283,
    xlDialogWorkbookMove = 282,
    xlDialogWorkbookAdd = 281,
    xlDialogCustomizeToolbar = 276,
    xlDialogGallery3dSurface = 273,
    xlDialogGallery3dBar = 272,
    xlDialogFormatAuto = 269,
    xlDialogMove = 262,
    xlDialogSize = 261,
    xlDialogInsertObject = 259,
    xlDialogZoom = 256,
    xlDialogEditionOptions = 251,
    xlDialogGalleryRadar = 249,
    xlDialogDefineStyle = 229,
    xlDialogEditSeries = 228,
    xlDialogFormatOverlay = 226,
    xlDialogFormatMain = 225,
    xlDialogEditColor = 223,
    xlDialogPrintPreview = 222,
    xlDialogShowToolbar = 220,
    xlDialogSubscribeTo = 218,
    xlDialogCreatePublisher = 217,
    xlDialogObjectProtection = 214,
    xlDialogAssignToObject = 213,
    xlDialogApplyStyle = 212,
    xlDialogSaveNewObject = 208,
    xlDialogObjectProperties = 207,
    xlDialogShowDetail = 204,
    xlDialogDemote = 203,
    xlDialogPromote = 202,
    xlDialogUpdateLink = 201,
    xlDialogFillGroup = 200,
    xlDialogWorkgroup = 199,
    xlDialogGoalSeek = 198,
    xlDialogView3d = 197,
    xlDialogGallery3dPie = 196,
    xlDialogGallery3dLine = 195,
    xlDialogGallery3dColumn = 194,
    xlDialogGallery3dArea = 193,
    xlDialogSortSpecial = 192,
    xlDialogConsolidate = 191,
    xlDialogStandardFont = 190,
    xlDialogSendMail = 189,
    xlDialogOpenMail = 188,
    xlDialogOverlayChartType = 186,
    xlDialogMainChartType = 185,
    xlDialogAppSize = 171,
    xlDialogAppMove = 170,
    xlDialogChangeLink = 166,
    xlDialogColorPalette = 161,
    xlDialogSetUpdateStatus = 159,
    xlDialogNote = 154,
    xlDialogFormatFont = 150,
    xlDialogCopyChart = 147,
    xlDialogSaveWorkbook = 145,
    xlDialogOutline = 142,
    xlDialogSplit = 137,
    xlDialogReplaceFont = 134,
    xlDialogApplyNames = 133,
    xlDialogSelectSpecial = 132,
    xlDialogFormulaReplace = 130,
    xlDialogFormatSize = 129,
    xlDialogFormatMove = 128,
    xlDialogRowHeight = 127,
    xlDialogNew = 119,
    xlDialogDeleteFormat = 111,
    xlDialogDeleteName = 110,
    xlDialogCopyPicture = 108,
    xlDialogActivate = 103,
    xlDialogWorkspace = 95,
    xlDialogUnhide = 94,
    xlDialogParse = 91,
    xlDialogFormatText = 89,
    xlDialogFormatLegend = 88,
    xlDialogScale = 87,
    xlDialogOverlay = 86,
    xlDialogMainChart = 85,
    xlDialogPatterns = 84,
    xlDialogAttachText = 80,
    xlDialogAxes = 78,
    xlDialogGridlines = 76,
    xlDialogCombination = 73,
    xlDialogGalleryScatter = 72,
    xlDialogGalleryPie = 71,
    xlDialogGalleryLine = 70,
    xlDialogGalleryColumn = 69,
    xlDialogGalleryBar = 68,
    xlDialogGalleryArea = 67,
    xlDialogFormulaFind = 64,
    xlDialogFormulaGoto = 63,
    xlDialogCreateNames = 62,
    xlDialogDefineName = 61,
    xlDialogInsert = 55,
    xlDialogEditDelete = 54,
    xlDialogPasteSpecial = 53,
    xlDialogClear = 52,
    xlDialogColumnWidth = 47,
    xlDialogCellProtection = 46,
    xlDialogBorder = 45,
    xlDialogStyle = 44,
    xlDialogAlignment = 43,
    xlDialogFormatNumber = 42,
    xlDialogTable = 41,
    xlDialogDataSeries = 40,
    xlDialogSort = 39,
    xlDialogDataDelete = 36,
    xlDialogExtract = 35,
    xlDialogCalculation = 32,
    xlDialogProtectDocument = 28,
    xlDialogDisplay = 27,
    xlDialogFont = 26,
    xlDialogSetPrintTitles = 23,
    xlDialogRun = 17,
    xlDialogWindowMove = 14,
    xlDialogWindowSize = 13,
    xlDialogArrangeAll = 12,
    xlDialogPrinterSetup = 9,
    xlDialogPrint = 8,
    xlDialogPageSetup = 7,
    xlDialogFileDelete = 6,
    xlDialogSaveAs = 5,
    xlDialogOpenLinks = 2,
    xlDialogOpen = 1,
    xlZero = 2,
    xlYes = 1,
    xlYearCode = 19,
    xlYear = 4,
    xlY = 1,
    xlXYScatter = -4169,
    xlX = -4168,
    xlWQ1 = 34,
    xlWPG = 3,
    xlWorksheetShort = 5,
    xlWorksheetCell = 3,
    xlWorksheet4 = 1,
    xlWorksheet = -4167,
    xlWorks2FarEast = 28,
    xlWorkbookTab = 6,
    xlWorkbook = 1,
    xlWMF = 2,
    xlWKS = 4,
    xlWK3FM3 = 32,
    xlWK3 = 15,
    xlWK1FMT = 30,
    xlWK1ALL = 31,
    xlWK1 = 5,
    xlWJ2WD1 = 14,
    xlWindows = 2,
    xlWide = 3,
    xlWhole = 1,
    xlWeekdayNameChars = 31,
    xlWeekday = 2,
    xlWatchPane = 11,
    xlWait = 2,
    xlVisible = 12,
    xlVeryHidden = 2,
    xlVertical = -4166,
    xlVarP = -4165,
    xlVar = -4164,
    xlValues = -4163,
    xlValue = 2,
    xlVALU = 8,
    xlUserResolution = 1,
    xlUpward = -4171,
    xlUpperCaseRowLetter = 6,
    xlUpperCaseColumnLetter = 7,
    xlUpdateSubscriber = 2,
    xlUpdateState = 1,
    xlUp = -4162,
    xlTriangle = 3,
    xlTransparent = 2,
    xlToRight = -4161,
    xlTopToBottom = 1,
    xlTop10Percent = 5,
    xlTop10Items = 3,
    xlTop = -4160,
    xlToolbarButton = 2,
    xlToolbar = 1,
    xlToLeft = -4159,
    xlTitleBar = 8,
    xlTimeSeparator = 18,
    xlTimeLeadingZero = 45,
    xlTiled = 1,
    xlTIF = 9,
    xlThousandsSeparator = 4,
    xlThin = 2,
    xlThick = 4,
    xlTextWindows = 20,
    xlTextValues = 2,
    xlTextPrinter = 36,
    xlTextMSDOS = 21,
    xlTextMac = 19,
    xlTextBox = 16,
    xlText = -4158,
    xlTemplate = 17,
    xlTableBody = 8,
    xlSyllabary = 1,
    xlSYLK = 2,
    xlSum = -4157,
    xlSubtract = 3,
    xlSubscribers = 6,
    xlSubscriber = 2,
    xlStrict = 2,
    xlStretch = 1,
    xlStError = 4,
    xlStDevP = -4156,
    xlStDev = -4155,
    xlStar = 5,
    xlStandardSummary = 1,
    xlStack = 2,
    xlSquare = 1,
    xlSortValues = 1,
    xlSortLabels = 2,
    xlSolid = 1,
    xlSingleQuote = 2,
    xlSingleAccounting = 4,
    xlSingle = 2,
    xlSimple = -4154,
    xlShowValue = 2,
    xlShowPercent = 3,
    xlShowLabelAndPercent = 5,
    xlShowLabel = 4,
    xlShort = 1,
    xlShared = 2,
    xlSeries = 3,
    xlSendPublisher = 2,
    xlSemiGray75 = 10,
    xlSemiautomatic = 2,
    xlSelect = 3,
    xlSecondCode = 24,
    xlSecondary = 2,
    xlScreenSize = 1,
    xlScreen = 1,
    xlScale = 3,
    xlRunningTotal = 5,
    xlRTF = 4,
    xlRowThenColumn = 1,
    xlRowSeparator = 15,
    xlRows = 1,
    xlRowItem = 4,
    xlRowHeader = -4153,
    xlRowField = 1,
    xlRoutingInProgress = 1,
    xlRoutingComplete = 2,
    xlRightBracket = 11,
    xlRightBrace = 13,
    xlRight = -4152,
    xlRelRowAbsColumn = 3,
    xlRelative = 4,
    xlReference = 4,
    xlReadWrite = 2,
    xlReadOnly = 3,
    xlRadar = -4151,
    xlR1C1 = -4150,
    xlPublishers = 5,
    xlPublisher = 1,
    xlProduct = -4149,
    xlPrinter = 2,
    xlPrimary = 1,
    xlPrevious = 2,
    xlPowerTalk = 2,
    xlPower = 4,
    xlPortrait = 1,
    xlPolynomial = 3,
    xlPlusValues = 2,
    xlPlus = 9,
    xlPLT = 12,
    xlPlotArea = 19,
    xlPlaceholders = 2,
    xlPivotTable = -4148,
    xlPie = 5,
    xlPicture = -4147,
    xlPICT = 1,
    xlPIC = 11,
    xlPercentOfTotal = 8,
    xlPercentOfRow = 6,
    xlPercentOfColumn = 7,
    xlPercentOf = 3,
    xlPercentDifferenceFrom = 4,
    xlPercent = 2,
    xlPCX = 10,
    xlPCT = 13,
    xlPart = 2,
    xlPaperUser = 256,
    xlPaperTabloid = 3,
    xlPaperStatement = 6,
    xlPaperQuarto = 15,
    xlPaperNote = 18,
    xlPaperLetterSmall = 2,
    xlPaperLetter = 1,
    xlPaperLegal = 5,
    xlPaperLedger = 4,
    xlPaperFolio = 14,
    xlPaperFanfoldUS = 39,
    xlPaperFanfoldStdGerman = 40,
    xlPaperFanfoldLegalGerman = 41,
    xlPaperExecutive = 7,
    xlPaperEsheet = 26,
    xlPaperEnvelopePersonal = 38,
    xlPaperEnvelopeMonarch = 37,
    xlPaperEnvelopeItaly = 36,
    xlPaperEnvelopeDL = 27,
    xlPaperEnvelopeC65 = 32,
    xlPaperEnvelopeC6 = 31,
    xlPaperEnvelopeC5 = 28,
    xlPaperEnvelopeC4 = 30,
    xlPaperEnvelopeC3 = 29,
    xlPaperEnvelopeB6 = 35,
    xlPaperEnvelopeB5 = 34,
    xlPaperEnvelopeB4 = 33,
    xlPaperEnvelope9 = 19,
    xlPaperEnvelope14 = 23,
    xlPaperEnvelope12 = 22,
    xlPaperEnvelope11 = 21,
    xlPaperEnvelope10 = 20,
    xlPaperDsheet = 25,
    xlPaperCsheet = 24,
    xlPaperB5 = 13,
    xlPaperB4 = 12,
    xlPaperA5 = 11,
    xlPaperA4Small = 10,
    xlPaperA4 = 9,
    xlPaperA3 = 8,
    xlPaper11x17 = 17,
    xlPaper10x14 = 16,
    xlPageItem = 6,
    xlPageHeader = 2,
    xlPageField = 3,
    xlOverThenDown = 2,
    xlOutside = 3,
    xlOtherSessionChanges = 3,
    xlOr = 2,
    xlOpenSource = 3,
    xlOpen = 2,
    xlOpaque = 3,
    xlOneAfterAnother = 1,
    xlOn = 1,
    xlOLELinks = 2,
    xlOLELink = 0,
    xlOLEEmbed = 1,
    xlOff = -4146,
    xlNumbers = 1,
    xlNumber = -4145,
    xlNotYetRouted = 0,
    xlNotPlotted = 1,
    xlNotes = -4144,
    xlNoShapeChanges = 2,
    xlNorthwestArrow = 1,
    xlNormal = -4143,
    xlNonEnglishFunctions = 34,
    xlNone = -4142,
    xlNoncurrencyDigits = 29,
    xlNoMailSystem = 0,
    xlNoDocuments = 3,
    xlNoDockingChanges = 3,
    xlNoChanges = 4,
    xlNoChange = 1,
    xlNoCap = 2,
    xlNoButtonChanges = 1,
    xlNo = 2,
    xlNextToAxis = 4,
    xlNext = 1,
    xlNarrow = 1,
    xlMultiply = 4,
    xlMSDOS = 3,
    xlMovingAvg = 6,
    xlMoveAndSize = 1,
    xlMove = 2,
    xlMonthNameChars = 30,
    xlMonthLeadingZero = 41,
    xlMonthCode = 20,
    xlMonth = 3,
    xlModule = -4141,
    xlMixed = 2,
    xlMinuteCode = 23,
    xlMinusValues = 3,
    xlMinimum = 2,
    xlMinimized = -4140,
    xlMin = -4139,
    xlMicrosoftWord = 1,
    xlMicrosoftSchedulePlus = 7,
    xlMicrosoftProject = 6,
    xlMicrosoftPowerPoint = 2,
    xlMicrosoftMail = 3,
    xlMicrosoftFoxPro = 5,
    xlMicrosoftAccess = 4,
    xlMetric = 35,
    xlMedium = -4138,
    xlMDY = 44,
    xlMaximum = 2,
    xlMaximized = -4137,
    xlMax = -4136,
    xlMAPI = 1,
    xlManualUpdate = 5,
    xlManual = -4135,
    xlMacrosheetCell = 7,
    xlMacintosh = 1,
    xlLowerCaseRowLetter = 8,
    xlLowerCaseColumnLetter = 9,
    xlLow = -4134,
    xlLotusHelp = 2,
    xlLong = 3,
    xlLogical = 4,
    xlLogarithmic = -4133,
    xlLocalSessionChanges = 2,
    xlLocalFormat2 = 16,
    xlLocalFormat1 = 15,
    xlListSeparator = 5,
    xlList3 = 12,
    xlList2 = 11,
    xlList1 = 10,
    xlLinearTrend = 9,
    xlLinear = -4132,
    xlLine = 4,
    xlLightVertical = 12,
    xlLightUp = 14,
    xlLightHorizontal = 11,
    xlLightDown = 13,
    xlLegend = 24,
    xlLeftToRight = 2,
    xlLeftBracket = 10,
    xlLeftBrace = 12,
    xlLeft = -4131,
    xlLastCell = 11,
    xlLast = 1,
    xlLandscape = 2,
    xlJustify = -4130,
    xlIntlMacro = 25,
    xlIntlAddIn = 26,
    xlInterrupt = 1,
    xlInterpolated = 3,
    xlInteger = 2,
    xlInside = 2,
    xlInfo = -4129,
    xlIndex = 9,
    xlImmediatePane = 12,
    xlIcons = 1,
    xlIBeam = 3,
    xlHourCode = 22,
    xlHorizontal = -4128,
    xlHigh = -4127,
    xlHide = 3,
    xlHidden = 0,
    xlHGL = 6,
    xlHairline = 1,
    xlGuess = 0,
    xlGrowthTrend = 10,
    xlGrowth = 2,
    xlGridline = 22,
    xlGrid = 15,
    xlGray8 = 18,
    xlGray75 = -4126,
    xlGray50 = -4125,
    xlGray25 = -4124,
    xlGray16 = 17,
    xlGeneralFormatName = 26,
    xlGeneral = 1,
    xlFunction = 1,
    xlFullPage = 3,
    xlFreeFloating = 3,
    xlFormulas = -4123,
    xlFormula = 5,
    xlFormats = -4122,
    xlFloor = 23,
    xlFloating = 5,
    xlFixedWidth = 2,
    xlFixedValue = 1,
    xlFitToPage = 2,
    xlFirst = 0,
    xlFilterInPlace = 1,
    xlFilterCopy = 2,
    xlFillYears = 8,
    xlFillWeekdays = 6,
    xlFillValues = 4,
    xlFillSeries = 2,
    xlFillMonths = 7,
    xlFillFormats = 3,
    xlFillDefault = 0,
    xlFillDays = 5,
    xlFillCopy = 1,
    xlFill = 5,
    xlExternal = 2,
    xlExtended = 3,
    xlExponential = 5,
    xlExclusive = 3,
    xlExcelMenus = 1,
    xlExcelLinks = 1,
    xlExcel4Workbook = 35,
    xlExcel4MacroSheet = 3,
    xlExcel4IntlMacroSheet = 4,
    xlExcel4 = 33,
    xlExcel3 = 29,
    xlExcel2FarEast = 27,
    xlExcel2 = 16,
    xlErrValue = 2015,
    xlErrRef = 2023,
    xlErrors = 16,
    xlErrorHandler = 2,
    xlErrNum = 2036,
    xlErrNull = 2000,
    xlErrName = 2029,
    xlErrNA = 2042,
    xlErrDiv0 = 2007,
    xlEPS = 8,
    xlEntireChart = 20,
    xlEditionDate = 2,
    xlDXF = 5,
    xlDRW = 4,
    xlDrawingObject = 14,
    xlDownward = -4170,
    xlDownThenOver = 1,
    xlDown = -4121,
    xlDoughnut = -4120,
    xlDoubleQuote = 1,
    xlDoubleOpen = 4,
    xlDoubleClosed = 5,
    xlDoubleAccounting = 5,
    xlDouble = -4119,
    xlDot = -4118,
    xlDivide = 5,
    xlDistributed = -4117,
    xlDisabled = 0,
    xlDirect = 1,
    xlDifferenceFrom = 2,
    xlDIF = 9,
    xlDiamond = 2,
    xlDialogSheet = -4116,
    xlDesktop = 9,
    xlDescending = 2,
    xlDelimited = 1,
    xlDefaultAutoFormat = -1,
    xlDecimalSeparator = 3,
    xlDebugCodePane = 13,
    xlDBF4 = 11,
    xlDBF3 = 8,
    xlDBF2 = 7,
    xlDayLeadingZero = 42,
    xlDayCode = 21,
    xlDay = 1,
    xlDateSeparator = 17,
    xlDateOrder = 32,
    xlDate = 2,
    xlDataItem = 7,
    xlDataHeader = 3,
    xlDataField = 4,
    xlDatabase = 1,
    xlDashDotDot = 5,
    xlDashDot = 4,
    xlDash = -4115,
    xlCut = 2,
    xlCustom = -4114,
    xlCurrencyTrailingZeros = 39,
    xlCurrencySpaceBefore = 36,
    xlCurrencyNegative = 28,
    xlCurrencyMinusSign = 38,
    xlCurrencyLeadingZeros = 40,
    xlCurrencyDigits = 27,
    xlCurrencyCode = 25,
    xlCurrencyBefore = 37,
    xlCSVWindows = 23,
    xlCSVMSDOS = 24,
    xlCSVMac = 22,
    xlCSV = 6,
    xlCross = 4,
    xlCrissCross = 16,
    xlCountrySetting = 2,
    xlCountryCode = 1,
    xlCountNums = -4113,
    xlCount = -4112,
    xlCorner = 2,
    xlCopy = 1,
    xlContinuous = 1,
    xlContents = 2,
    xlConstants = 2,
    xlConsolidation = 3,
    xlCommand = 2,
    xlCombination = -4111,
    xlColumnThenRow = 2,
    xlColumnSeparator = 14,
    xlColumns = 2,
    xlColumnItem = 5,
    xlColumnHeader = -4110,
    xlColumnField = 2,
    xlColumn = 3,
    xlColor3 = 9,
    xlColor2 = 8,
    xlColor1 = 7,
    xlCodePage = 2,
    xlClosed = 3,
    xlClipboardFormatWK1 = 10,
    xlClipboardFormatVALU = 1,
    xlClipboardFormatToolFacePICT = 26,
    xlClipboardFormatToolFace = 25,
    xlClipboardFormatText = 0,
    xlClipboardFormatTable = 16,
    xlClipboardFormatSYLK = 6,
    xlClipboardFormatStandardScale = 27,
    xlClipboardFormatStandardFont = 28,
    xlClipboardFormatScreenPICT = 29,
    xlClipboardFormatRTF = 7,
    xlClipboardFormatPrintPICT = 3,
    xlClipboardFormatPICT = 2,
    xlClipboardFormatOwnerLink = 17,
    xlClipboardFormatObjectLink = 19,
    xlClipboardFormatObjectDesc = 31,
    xlClipboardFormatNative = 14,
    xlClipboardFormatMovie = 24,
    xlClipboardFormatLinkSourceDesc = 32,
    xlClipboardFormatLinkSource = 23,
    xlClipboardFormatLink = 11,
    xlClipboardFormatEmbedSource = 22,
    xlClipboardFormatEmbeddedObject = 21,
    xlClipboardFormatDspText = 12,
    xlClipboardFormatDIF = 4,
    xlClipboardFormatCSV = 5,
    xlClipboardFormatCGM = 13,
    xlClipboardFormatBitmap = 9,
    xlClipboardFormatBinary = 15,
    xlClipboardFormatBIFF4 = 30,
    xlClipboardFormatBIFF3 = 20,
    xlClipboardFormatBIFF2 = 18,
    xlClipboardFormatBIFF = 8,
    xlClipboard = 3,
    xlClassic3 = 3,
    xlClassic2 = 2,
    xlClassic1 = 1,
    xlCircle = 8,
    xlChronological = 3,
    xlChecker = 9,
    xlChartTitles = 18,
    xlChartShort = 6,
    xlChartSeries = 17,
    xlChartInPlace = 4,
    xlChartAsWindow = 5,
    xlChart4 = 2,
    xlChart = -4109,
    xlChangeAttributes = 6,
    xlCGM = 7,
    xlCenterAcrossSelection = 7,
    xlCenter = -4108,
    xlCategory = 1,
    xlCascade = 7,
    xlCap = 1,
    xlCancel = 1,
    xlByRows = 1,
    xlByColumns = 2,
    xlButton = 15,
    xlBuiltIn = 0,
    xlBottom10Percent = 6,
    xlBottom10Items = 4,
    xlBottom = -4107,
    xlBoth = 1,
    xlBMP = 1,
    xlBlanks = 4,
    xlBitmap = 2,
    xlBIFF = 2,
    xlBelow = 1,
    xlBar = 2,
    xlAxis = 21,
    xlAverage = -4106,
    xlAutoOpen = 1,
    xlAutomaticUpdate = 4,
    xlAutomatic = -4105,
    xlAutoFill = 4,
    xlAutoDeactivate = 4,
    xlAutoClose = 2,
    xlAutoActivate = 3,
    xlAscending = 1,
    xlArea = 1,
    xlAnd = 1,
    xlAlternateArraySeparator = 16,
    xlAllExceptBorders = 6,
    xlAllAtOnce = 2,
    xlAll = -4104,
    xlAddIn = 18,
    xlAdd = 2,
    xlAccounting4 = 17,
    xlAccounting3 = 6,
    xlAccounting2 = 5,
    xlAccounting1 = 4,
    xlAbsRowRelColumn = 2,
    xlAbsolute = 1,
    xlAbove = 0,
    xlA1 = 1,
    xl4DigitYears = 43,
    xl3DSurface = -4103,
    xl3DPie = -4102,
    xl3DLine = -4101,
    xl3DEffects2 = 14,
    xl3DEffects1 = 13,
    xl3DColumn = -4100,
    xl3DBar = -4099,
    xl3DArea = -4098,
    xl24HourClock = 33
};

struct __declspec(uuid("00020856-0000-0000-c000-000000000046"))
_Global : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActiveCell,put=PutActiveCell))
    _variant_t ActiveCell;
    __declspec(property(get=GetActiveChart,put=PutActiveChart))
    _variant_t ActiveChart;
    __declspec(property(get=GetActiveDialog,put=PutActiveDialog))
    _variant_t ActiveDialog;
    __declspec(property(get=GetActiveMenuBar,put=PutActiveMenuBar))
    _variant_t ActiveMenuBar;
    __declspec(property(get=GetActivePrinter,put=PutActivePrinter))
    _variant_t ActivePrinter;
    __declspec(property(get=GetActiveSheet,put=PutActiveSheet))
    _variant_t ActiveSheet;
    __declspec(property(get=GetActiveWindow,put=PutActiveWindow))
    _variant_t ActiveWindow;
    __declspec(property(get=GetActiveWorkbook,put=PutActiveWorkbook))
    _variant_t ActiveWorkbook;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDDEAppReturnCode,put=PutDDEAppReturnCode))
    _variant_t DDEAppReturnCode;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetSelection,put=PutSelection))
    _variant_t Selection;
    __declspec(property(get=GetThisWorkbook,put=PutThisWorkbook))
    _variant_t ThisWorkbook;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t AddIns (
        const _variant_t & Index = vtMissing );
    _variant_t Application ( );
    _variant_t Calculate ( );
    _variant_t Cells (
        const _variant_t & RowIndex = vtMissing,
        const _variant_t & ColumnIndex = vtMissing );
    _variant_t Charts (
        const _variant_t & Index = vtMissing );
    _variant_t Columns (
        const _variant_t & Index = vtMissing );
    _variant_t DDEExecute (
        const _variant_t & Channel,
        const _variant_t & String );
    _variant_t DDEInitiate (
        const _variant_t & App,
        const _variant_t & Topic );
    _variant_t DDEPoke (
        const _variant_t & Channel,
        const _variant_t & Item,
        const _variant_t & Data );
    _variant_t DDERequest (
        const _variant_t & Channel,
        const _variant_t & Item );
    _variant_t DDETerminate (
        const _variant_t & Channel );
    _variant_t DialogSheets (
        const _variant_t & Index = vtMissing );
    _variant_t _Evaluate (
        const _variant_t & Name );
    _variant_t Evaluate (
        const _variant_t & Name );
    _variant_t Excel4IntlMacroSheets (
        const _variant_t & Index = vtMissing );
    _variant_t Excel4MacroSheets (
        const _variant_t & Index = vtMissing );
    _variant_t ExecuteExcel4Macro (
        const _variant_t & String );
    _variant_t Intersect (
        const _variant_t & Arg1,
        const _variant_t & Arg2,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );
    _variant_t MenuBars (
        const _variant_t & Index = vtMissing );
    _variant_t Modules (
        const _variant_t & Index = vtMissing );
    _variant_t Names (
        const _variant_t & Index = vtMissing,
        const _variant_t & IndexLocal = vtMissing,
        const _variant_t & RefersTo = vtMissing );
    _variant_t Range (
        const _variant_t & Cell1 = vtMissing,
        const _variant_t & Cell2 = vtMissing );
    _variant_t Rows (
        const _variant_t & Index = vtMissing );
    _variant_t Run (
        const _variant_t & Macro = vtMissing,
        const _variant_t & Arg1 = vtMissing,
        const _variant_t & Arg2 = vtMissing,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );
    _variant_t SendKeys (
        const _variant_t & Keys,
        const _variant_t & Wait = vtMissing );
    _variant_t Sheets (
        const _variant_t & Index = vtMissing );
    _variant_t ShortcutMenus (
        const _variant_t & Index );
    _variant_t Toolbars (
        const _variant_t & Index = vtMissing );
    _variant_t Union (
        const _variant_t & Arg1,
        const _variant_t & Arg2,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );
    _variant_t Windows (
        const _variant_t & Index = vtMissing );
    _variant_t Workbooks (
        const _variant_t & Index = vtMissing );
    _variant_t Worksheets (
        const _variant_t & Index = vtMissing );

    // Properties:
    _variant_t GetActiveCell ( );
    void PutActiveCell ( const _variant_t & _val );
    _variant_t GetActiveChart ( );
    void PutActiveChart ( const _variant_t & _val );
    _variant_t GetActiveDialog ( );
    void PutActiveDialog ( const _variant_t & _val );
    _variant_t GetActiveMenuBar ( );
    void PutActiveMenuBar ( const _variant_t & _val );
    _variant_t GetActivePrinter ( );
    void PutActivePrinter ( const _variant_t & _val );
    _variant_t GetActiveSheet ( );
    void PutActiveSheet ( const _variant_t & _val );
    _variant_t GetActiveWindow ( );
    void PutActiveWindow ( const _variant_t & _val );
    _variant_t GetActiveWorkbook ( );
    void PutActiveWorkbook ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDDEAppReturnCode ( );
    void PutDDEAppReturnCode ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetSelection ( );
    void PutSelection ( const _variant_t & _val );
    _variant_t GetThisWorkbook ( );
    void PutThisWorkbook ( const _variant_t & _val );
};

struct __declspec(uuid("00020841-0000-0000-c000-000000000046"))
Application : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActiveCell,put=PutActiveCell))
    _variant_t ActiveCell;
    __declspec(property(get=GetActiveChart,put=PutActiveChart))
    _variant_t ActiveChart;
    __declspec(property(get=GetActiveDialog,put=PutActiveDialog))
    _variant_t ActiveDialog;
    __declspec(property(get=GetActiveMenuBar,put=PutActiveMenuBar))
    _variant_t ActiveMenuBar;
    __declspec(property(get=GetActivePrinter,put=PutActivePrinter))
    _variant_t ActivePrinter;
    __declspec(property(get=GetActiveSheet,put=PutActiveSheet))
    _variant_t ActiveSheet;
    __declspec(property(get=GetActiveWindow,put=PutActiveWindow))
    _variant_t ActiveWindow;
    __declspec(property(get=GetActiveWorkbook,put=PutActiveWorkbook))
    _variant_t ActiveWorkbook;
    __declspec(property(get=GetAlertBeforeOverwriting,put=PutAlertBeforeOverwriting))
    _variant_t AlertBeforeOverwriting;
    __declspec(property(get=GetAltStartupPath,put=PutAltStartupPath))
    _variant_t AltStartupPath;
    __declspec(property(get=GetAskToUpdateLinks,put=PutAskToUpdateLinks))
    _variant_t AskToUpdateLinks;
    __declspec(property(get=GetAutoCorrect,put=PutAutoCorrect))
    _variant_t AutoCorrect;
    __declspec(property(get=GetBuild,put=PutBuild))
    _variant_t Build;
    __declspec(property(get=GetCalculateBeforeSave,put=PutCalculateBeforeSave))
    _variant_t CalculateBeforeSave;
    __declspec(property(get=GetCalculation,put=PutCalculation))
    _variant_t Calculation;
    __declspec(property(get=GetCaller,put=PutCaller))
    _variant_t Caller;
    __declspec(property(get=GetCanPlaySounds,put=PutCanPlaySounds))
    _variant_t CanPlaySounds;
    __declspec(property(get=GetCanRecordSounds,put=PutCanRecordSounds))
    _variant_t CanRecordSounds;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCellDragAndDrop,put=PutCellDragAndDrop))
    _variant_t CellDragAndDrop;
    __declspec(property(get=GetClipboardFormats,put=PutClipboardFormats))
    _variant_t ClipboardFormats;
    __declspec(property(get=GetColorButtons,put=PutColorButtons))
    _variant_t ColorButtons;
    __declspec(property(get=GetCommandUnderlines,put=PutCommandUnderlines))
    _variant_t CommandUnderlines;
    __declspec(property(get=GetConstrainNumeric,put=PutConstrainNumeric))
    _variant_t ConstrainNumeric;
    __declspec(property(get=GetCopyObjectsWithCells,put=PutCopyObjectsWithCells))
    _variant_t CopyObjectsWithCells;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetCursor,put=PutCursor))
    _variant_t Cursor;
    __declspec(property(get=GetCustomListCount,put=PutCustomListCount))
    _variant_t CustomListCount;
    __declspec(property(get=GetCutCopyMode,put=PutCutCopyMode))
    _variant_t CutCopyMode;
    __declspec(property(get=GetDataEntryMode,put=PutDataEntryMode))
    _variant_t DataEntryMode;
    __declspec(property(get=GetDDEAppReturnCode,put=PutDDEAppReturnCode))
    _variant_t DDEAppReturnCode;
    __declspec(property(get=GetDefaultFilePath,put=PutDefaultFilePath))
    _variant_t DefaultFilePath;
    __declspec(property(get=GetDisplayAlerts,put=PutDisplayAlerts))
    _variant_t DisplayAlerts;
    __declspec(property(get=GetDisplayClipboardWindow,put=PutDisplayClipboardWindow))
    _variant_t DisplayClipboardWindow;
    __declspec(property(get=GetDisplayExcel4Menus,put=PutDisplayExcel4Menus))
    _variant_t DisplayExcel4Menus;
    __declspec(property(get=GetDisplayFormulaBar,put=PutDisplayFormulaBar))
    _variant_t DisplayFormulaBar;
    __declspec(property(get=GetDisplayFullScreen,put=PutDisplayFullScreen))
    _variant_t DisplayFullScreen;
    __declspec(property(get=GetDisplayInfoWindow,put=PutDisplayInfoWindow))
    _variant_t DisplayInfoWindow;
    __declspec(property(get=GetDisplayNoteIndicator,put=PutDisplayNoteIndicator))
    _variant_t DisplayNoteIndicator;
    __declspec(property(get=GetDisplayRecentFiles,put=PutDisplayRecentFiles))
    _variant_t DisplayRecentFiles;
    __declspec(property(get=GetDisplayScrollBars,put=PutDisplayScrollBars))
    _variant_t DisplayScrollBars;
    __declspec(property(get=GetDisplayStatusBar,put=PutDisplayStatusBar))
    _variant_t DisplayStatusBar;
    __declspec(property(get=GetEditDirectlyInCell,put=PutEditDirectlyInCell))
    _variant_t EditDirectlyInCell;
    __declspec(property(get=GetEnableAnimations,put=PutEnableAnimations))
    _variant_t EnableAnimations;
    __declspec(property(get=GetEnableAutoComplete,put=PutEnableAutoComplete))
    _variant_t EnableAutoComplete;
    __declspec(property(get=GetEnableCancelKey,put=PutEnableCancelKey))
    _variant_t EnableCancelKey;
    __declspec(property(get=GetEnableTipWizard,put=PutEnableTipWizard))
    _variant_t EnableTipWizard;
    __declspec(property(get=GetFileConverters,put=PutFileConverters))
    _variant_t FileConverters;
    __declspec(property(get=GetFixedDecimal,put=PutFixedDecimal))
    _variant_t FixedDecimal;
    __declspec(property(get=GetFixedDecimalPlaces,put=PutFixedDecimalPlaces))
    _variant_t FixedDecimalPlaces;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIgnoreRemoteRequests,put=PutIgnoreRemoteRequests))
    _variant_t IgnoreRemoteRequests;
    __declspec(property(get=GetInteractive,put=PutInteractive))
    _variant_t Interactive;
    __declspec(property(get=GetInternational,put=PutInternational))
    _variant_t International;
    __declspec(property(get=GetIteration,put=PutIteration))
    _variant_t Iteration;
    __declspec(property(get=GetLargeButtons,put=PutLargeButtons))
    _variant_t LargeButtons;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLibraryPath,put=PutLibraryPath))
    _variant_t LibraryPath;
    __declspec(property(get=GetMailSession,put=PutMailSession))
    _variant_t MailSession;
    __declspec(property(get=GetMailSystem,put=PutMailSystem))
    _variant_t MailSystem;
    __declspec(property(get=GetMathCoprocessorAvailable,put=PutMathCoprocessorAvailable))
    _variant_t MathCoprocessorAvailable;
    __declspec(property(get=GetMaxChange,put=PutMaxChange))
    _variant_t MaxChange;
    __declspec(property(get=GetMaxIterations,put=PutMaxIterations))
    _variant_t MaxIterations;
    __declspec(property(get=GetMemoryFree,put=PutMemoryFree))
    _variant_t MemoryFree;
    __declspec(property(get=GetMemoryTotal,put=PutMemoryTotal))
    _variant_t MemoryTotal;
    __declspec(property(get=GetMemoryUsed,put=PutMemoryUsed))
    _variant_t MemoryUsed;
    __declspec(property(get=GetMouseAvailable,put=PutMouseAvailable))
    _variant_t MouseAvailable;
    __declspec(property(get=GetMoveAfterReturn,put=PutMoveAfterReturn))
    _variant_t MoveAfterReturn;
    __declspec(property(get=GetMoveAfterReturnDirection,put=PutMoveAfterReturnDirection))
    _variant_t MoveAfterReturnDirection;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNetworkTemplatesPath,put=PutNetworkTemplatesPath))
    _variant_t NetworkTemplatesPath;
    __declspec(property(get=GetOnCalculate,put=PutOnCalculate))
    _variant_t OnCalculate;
    __declspec(property(get=GetOnData,put=PutOnData))
    _variant_t OnData;
    __declspec(property(get=GetOnDoubleClick,put=PutOnDoubleClick))
    _variant_t OnDoubleClick;
    __declspec(property(get=GetOnEntry,put=PutOnEntry))
    _variant_t OnEntry;
    __declspec(property(get=GetOnSheetActivate,put=PutOnSheetActivate))
    _variant_t OnSheetActivate;
    __declspec(property(get=GetOnSheetDeactivate,put=PutOnSheetDeactivate))
    _variant_t OnSheetDeactivate;
    __declspec(property(get=GetOnWindow,put=PutOnWindow))
    _variant_t OnWindow;
    __declspec(property(get=GetOperatingSystem,put=PutOperatingSystem))
    _variant_t OperatingSystem;
    __declspec(property(get=GetOrganizationName,put=PutOrganizationName))
    _variant_t OrganizationName;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPath,put=PutPath))
    _variant_t Path;
    __declspec(property(get=GetPathSeparator,put=PutPathSeparator))
    _variant_t PathSeparator;
    __declspec(property(get=GetPreviousSelections,put=PutPreviousSelections))
    _variant_t PreviousSelections;
    __declspec(property(get=GetPromptForSummaryInfo,put=PutPromptForSummaryInfo))
    _variant_t PromptForSummaryInfo;
    __declspec(property(get=GetRecordRelative,put=PutRecordRelative))
    _variant_t RecordRelative;
    __declspec(property(get=GetReferenceStyle,put=PutReferenceStyle))
    _variant_t ReferenceStyle;
    __declspec(property(get=GetRegisteredFunctions,put=PutRegisteredFunctions))
    _variant_t RegisteredFunctions;
    __declspec(property(get=GetScreenUpdating,put=PutScreenUpdating))
    _variant_t ScreenUpdating;
    __declspec(property(get=GetSelection,put=PutSelection))
    _variant_t Selection;
    __declspec(property(get=GetSheetsInNewWorkbook,put=PutSheetsInNewWorkbook))
    _variant_t SheetsInNewWorkbook;
    __declspec(property(get=GetShowToolTips,put=PutShowToolTips))
    _variant_t ShowToolTips;
    __declspec(property(get=GetStandardFont,put=PutStandardFont))
    _variant_t StandardFont;
    __declspec(property(get=GetStandardFontSize,put=PutStandardFontSize))
    _variant_t StandardFontSize;
    __declspec(property(get=GetStartupPath,put=PutStartupPath))
    _variant_t StartupPath;
    __declspec(property(get=GetStatusBar,put=PutStatusBar))
    _variant_t StatusBar;
    __declspec(property(get=GetTemplatesPath,put=PutTemplatesPath))
    _variant_t TemplatesPath;
    __declspec(property(get=GetThisWorkbook,put=PutThisWorkbook))
    _variant_t ThisWorkbook;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTransitionMenuKey,put=PutTransitionMenuKey))
    _variant_t TransitionMenuKey;
    __declspec(property(get=GetTransitionMenuKeyAction,put=PutTransitionMenuKeyAction))
    _variant_t TransitionMenuKeyAction;
    __declspec(property(get=GetTransitionNavigKeys,put=PutTransitionNavigKeys))
    _variant_t TransitionNavigKeys;
    __declspec(property(get=GetUsableHeight,put=PutUsableHeight))
    _variant_t UsableHeight;
    __declspec(property(get=GetUsableWidth,put=PutUsableWidth))
    _variant_t UsableWidth;
    __declspec(property(get=GetUserName,put=PutUserName))
    _variant_t UserName;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVersion,put=PutVersion))
    _variant_t Version;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetWindowsForPens,put=PutWindowsForPens))
    _variant_t WindowsForPens;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    _variant_t WindowState;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _WSFunction (
        const _variant_t & Range = vtMissing,
        const _variant_t & Arg1 = vtMissing,
        const _variant_t & Arg2 = vtMissing,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );
    _variant_t Acos ( );
    _variant_t Acosh ( );
    _variant_t ActivateMicrosoftApp (
        const _variant_t & Index );
    _variant_t AddChartAutoFormat (
        const _variant_t & Chart,
        const _variant_t & Name,
        const _variant_t & Description = vtMissing );
    _variant_t AddCustomList (
        const _variant_t & ListArray,
        const _variant_t & ByRow = vtMissing );
    _variant_t AddIns (
        const _variant_t & Index = vtMissing );
    _variant_t And ( );
    _variant_t _Application ( );
    _variant_t Asin ( );
    _variant_t Asinh ( );
    _variant_t Atan2 ( );
    _variant_t Atanh ( );
    _variant_t AveDev ( );
    _variant_t Average ( );
    _variant_t BetaDist ( );
    _variant_t BetaInv ( );
    _variant_t BinomDist ( );
    _variant_t Calculate ( );
    _variant_t Ceiling ( );
    _variant_t Cells (
        const _variant_t & RowIndex = vtMissing,
        const _variant_t & ColumnIndex = vtMissing );
    _variant_t CentimetersToPoints (
        const _variant_t & Centimeters );
    _variant_t Charts (
        const _variant_t & Index = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & Word,
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing );
    _variant_t ChiDist ( );
    _variant_t ChiInv ( );
    _variant_t ChiTest ( );
    _variant_t Choose ( );
    _variant_t Clean ( );
    _variant_t Columns (
        const _variant_t & Index = vtMissing );
    _variant_t Combin ( );
    _variant_t Confidence ( );
    _variant_t ConvertFormula (
        const _variant_t & Formula,
        const _variant_t & FromReferenceStyle,
        const _variant_t & ToReferenceStyle = vtMissing,
        const _variant_t & ToAbsolute = vtMissing,
        const _variant_t & RelativeTo = vtMissing );
    _variant_t Correl ( );
    _variant_t Cosh ( );
    _variant_t Count ( );
    _variant_t CountA ( );
    _variant_t CountBlank ( );
    _variant_t CountIf ( );
    _variant_t Covar ( );
    _variant_t CritBinom ( );
    _variant_t DAverage ( );
    _variant_t Days360 ( );
    _variant_t Db ( );
    _variant_t DCount ( );
    _variant_t DCountA ( );
    _variant_t Ddb ( );
    _variant_t DDEExecute (
        const _variant_t & Channel,
        const _variant_t & String );
    _variant_t DDEInitiate (
        const _variant_t & App,
        const _variant_t & Topic );
    _variant_t DDEPoke (
        const _variant_t & Channel,
        const _variant_t & Item,
        const _variant_t & Data );
    _variant_t DDERequest (
        const _variant_t & Channel,
        const _variant_t & Item );
    _variant_t DDETerminate (
        const _variant_t & Channel );
    _variant_t Degrees ( );
    _variant_t DeleteChartAutoFormat (
        const _variant_t & Name );
    _variant_t DeleteCustomList (
        const _variant_t & ListNum );
    _variant_t DevSq ( );
    _variant_t DGet ( );
    _variant_t Dialogs (
        const _variant_t & Index = vtMissing );
    _variant_t DialogSheets (
        const _variant_t & Index = vtMissing );
    _variant_t DMax ( );
    _variant_t DMin ( );
    _variant_t Dollar ( );
    _variant_t DoubleClick ( );
    _variant_t DProduct ( );
    _variant_t DStDev ( );
    _variant_t DStDevP ( );
    _variant_t DSum ( );
    _variant_t DVar ( );
    _variant_t DVarP ( );
    _variant_t _Evaluate (
        const _variant_t & Name );
    _variant_t Evaluate (
        const _variant_t & Name );
    _variant_t Even ( );
    _variant_t Excel4IntlMacroSheets (
        const _variant_t & Index = vtMissing );
    _variant_t Excel4MacroSheets (
        const _variant_t & Index = vtMissing );
    _variant_t ExecuteExcel4Macro (
        const _variant_t & String );
    _variant_t ExponDist ( );
    _variant_t Fact ( );
    _variant_t FDist ( );
    _variant_t Find ( );
    _variant_t FindB ( );
    _variant_t FindFile ( );
    _variant_t FInv ( );
    _variant_t Fisher ( );
    _variant_t FisherInv ( );
    _variant_t Fixed ( );
    _variant_t Floor ( );
    _variant_t Forecast ( );
    _variant_t Frequency ( );
    _variant_t FTest ( );
    _variant_t Fv ( );
    _variant_t GammaDist ( );
    _variant_t GammaInv ( );
    _variant_t GammaLn ( );
    _variant_t GeoMean ( );
    _variant_t GetCustomListContents (
        const _variant_t & ListNum );
    _variant_t GetCustomListNum (
        const _variant_t & ListArray );
    _variant_t GetOpenFilename (
        const _variant_t & FileFilter = vtMissing,
        const _variant_t & FilterIndex = vtMissing,
        const _variant_t & Title = vtMissing,
        const _variant_t & ButtonText = vtMissing,
        const _variant_t & MultiSelect = vtMissing );
    _variant_t GetSaveAsFilename (
        const _variant_t & InitialFilename = vtMissing,
        const _variant_t & FileFilter = vtMissing,
        const _variant_t & FilterIndex = vtMissing,
        const _variant_t & Title = vtMissing,
        const _variant_t & ButtonText = vtMissing );
    _variant_t Goto (
        const _variant_t & Reference = vtMissing,
        const _variant_t & Scroll = vtMissing );
    _variant_t Growth ( );
    _variant_t HarMean ( );
    _variant_t Help (
        const _variant_t & HelpFile = vtMissing,
        const _variant_t & HelpContextID = vtMissing );
    _variant_t HLookup ( );
    _variant_t HypGeomDist ( );
    _variant_t InchesToPoints (
        const _variant_t & Inches );
    _variant_t Index ( );
    _variant_t InputBox (
        const _variant_t & Prompt,
        const _variant_t & Title = vtMissing,
        const _variant_t & Default = vtMissing,
        const _variant_t & Left = vtMissing,
        const _variant_t & Top = vtMissing,
        const _variant_t & HelpFile = vtMissing,
        const _variant_t & HelpContextID = vtMissing,
        const _variant_t & Type = vtMissing );
    _variant_t Intercept ( );
    _variant_t Intersect (
        const _variant_t & Arg1,
        const _variant_t & Arg2,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );
    _variant_t Ipmt ( );
    _variant_t Irr ( );
    _variant_t IsErr ( );
    _variant_t IsError ( );
    _variant_t IsLogical ( );
    _variant_t IsNA ( );
    _variant_t IsNonText ( );
    _variant_t IsNumber ( );
    _variant_t Ispmt ( );
    _variant_t IsText ( );
    _variant_t Kurt ( );
    _variant_t Large ( );
    _variant_t LinEst ( );
    _variant_t Ln ( );
    _variant_t Log ( );
    _variant_t Log10 ( );
    _variant_t LogEst ( );
    _variant_t LogInv ( );
    _variant_t LogNormDist ( );
    _variant_t Lookup ( );
    _variant_t MacroOptions (
        const _variant_t & Macro = vtMissing,
        const _variant_t & Description = vtMissing,
        const _variant_t & HasMenu = vtMissing,
        const _variant_t & MenuText = vtMissing,
        const _variant_t & HasShortcutKey = vtMissing,
        const _variant_t & ShortcutKey = vtMissing,
        const _variant_t & Category = vtMissing,
        const _variant_t & StatusBar = vtMissing,
        const _variant_t & HelpContextID = vtMissing,
        const _variant_t & HelpFile = vtMissing );
    _variant_t MailLogoff ( );
    _variant_t MailLogon (
        const _variant_t & Name = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & DownloadNewMail = vtMissing );
    _variant_t Match ( );
    _variant_t Max ( );
    _variant_t MDeterm ( );
    _variant_t Median ( );
    _variant_t MenuBars (
        const _variant_t & Index = vtMissing );
    _variant_t Min ( );
    _variant_t MInverse ( );
    _variant_t MIrr ( );
    _variant_t MMult ( );
    _variant_t Mode ( );
    _variant_t Modules (
        const _variant_t & Index = vtMissing );
    _variant_t Names (
        const _variant_t & Index = vtMissing,
        const _variant_t & IndexLocal = vtMissing,
        const _variant_t & RefersTo = vtMissing );
    _variant_t NegBinomDist ( );
    _variant_t NextLetter ( );
    _variant_t NormDist ( );
    _variant_t NormInv ( );
    _variant_t NormSDist ( );
    _variant_t NormSInv ( );
    _variant_t NPer ( );
    _variant_t Npv ( );
    _variant_t Odd ( );
    _variant_t OnKey (
        const _variant_t & Key,
        const _variant_t & Procedure = vtMissing );
    _variant_t OnRepeat (
        const _variant_t & Text,
        const _variant_t & Procedure );
    _variant_t OnTime (
        const _variant_t & EarliestTime,
        const _variant_t & Procedure,
        const _variant_t & LatestTime = vtMissing,
        const _variant_t & Schedule = vtMissing );
    _variant_t OnUndo (
        const _variant_t & Text,
        const _variant_t & Procedure );
    _variant_t Or ( );
    _variant_t Pearson ( );
    _variant_t Percentile ( );
    _variant_t PercentRank ( );
    _variant_t Permut ( );
    _variant_t Pi ( );
    _variant_t Pmt ( );
    _variant_t Poisson ( );
    _variant_t Power ( );
    _variant_t Ppmt ( );
    _variant_t Prob ( );
    _variant_t Product ( );
    _variant_t Proper ( );
    _variant_t Pv ( );
    _variant_t Quartile ( );
    _variant_t Quit ( );
    _variant_t Radians ( );
    _variant_t Range (
        const _variant_t & Cell1 = vtMissing,
        const _variant_t & Cell2 = vtMissing );
    _variant_t Rank ( );
    _variant_t Rate ( );
    _variant_t RecordMacro (
        const _variant_t & BasicCode = vtMissing,
        const _variant_t & XlmCode = vtMissing );
    _variant_t RegisterXLL (
        const _variant_t & Filename );
    _variant_t Repeat ( );
    _variant_t Replace ( );
    _variant_t ReplaceB ( );
    _variant_t Rept ( );
    _variant_t ResetTipWizard ( );
    _variant_t Roman ( );
    _variant_t Round ( );
    _variant_t RoundDown ( );
    _variant_t RoundUp ( );
    _variant_t Rows (
        const _variant_t & Index = vtMissing );
    _variant_t RSq ( );
    _variant_t Run (
        const _variant_t & Macro = vtMissing,
        const _variant_t & Arg1 = vtMissing,
        const _variant_t & Arg2 = vtMissing,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );
    _variant_t Save (
        const _variant_t & Filename = vtMissing );
    _variant_t Search ( );
    _variant_t SearchB ( );
    _variant_t SendKeys (
        const _variant_t & Keys,
        const _variant_t & Wait = vtMissing );
    _variant_t SetDefaultChart (
        const _variant_t & FormatName = vtMissing );
    _variant_t Sheets (
        const _variant_t & Index = vtMissing );
    _variant_t ShortcutMenus (
        const _variant_t & Index );
    _variant_t Sinh ( );
    _variant_t Skew ( );
    _variant_t Sln ( );
    _variant_t Slope ( );
    _variant_t Small ( );
    _variant_t Standardize ( );
    _variant_t StDev ( );
    _variant_t StDevP ( );
    _variant_t StEyx ( );
    _variant_t Substitute ( );
    _variant_t Subtotal ( );
    _variant_t Sum ( );
    _variant_t SumIf ( );
    _variant_t SumProduct ( );
    _variant_t SumSq ( );
    _variant_t SumX2MY2 ( );
    _variant_t SumX2PY2 ( );
    _variant_t SumXMY2 ( );
    _variant_t Syd ( );
    _variant_t Tanh ( );
    _variant_t TDist ( );
    _variant_t Text ( );
    _variant_t TInv ( );
    _variant_t Toolbars (
        const _variant_t & Index = vtMissing );
    _variant_t Transpose ( );
    _variant_t Trend ( );
    _variant_t Trim ( );
    _variant_t TrimMean ( );
    _variant_t TTest ( );
    _variant_t Undo ( );
    _variant_t Union (
        const _variant_t & Arg1,
        const _variant_t & Arg2,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );
    _variant_t USDollar ( );
    _variant_t Var ( );
    _variant_t VarP ( );
    _variant_t Vdb ( );
    _variant_t VLookup ( );
    _variant_t Volatile (
        const _variant_t & Volatile = vtMissing );
    _variant_t Wait (
        const _variant_t & Time );
    _variant_t Weekday ( );
    _variant_t Weibull ( );
    _variant_t Windows (
        const _variant_t & Index = vtMissing );
    _variant_t Workbooks (
        const _variant_t & Index = vtMissing );
    _variant_t Worksheets (
        const _variant_t & Index = vtMissing );
    _variant_t ZTest ( );

    // Properties:
    _variant_t GetActiveCell ( );
    void PutActiveCell ( const _variant_t & _val );
    _variant_t GetActiveChart ( );
    void PutActiveChart ( const _variant_t & _val );
    _variant_t GetActiveDialog ( );
    void PutActiveDialog ( const _variant_t & _val );
    _variant_t GetActiveMenuBar ( );
    void PutActiveMenuBar ( const _variant_t & _val );
    _variant_t GetActivePrinter ( );
    void PutActivePrinter ( const _variant_t & _val );
    _variant_t GetActiveSheet ( );
    void PutActiveSheet ( const _variant_t & _val );
    _variant_t GetActiveWindow ( );
    void PutActiveWindow ( const _variant_t & _val );
    _variant_t GetActiveWorkbook ( );
    void PutActiveWorkbook ( const _variant_t & _val );
    _variant_t GetAlertBeforeOverwriting ( );
    void PutAlertBeforeOverwriting ( const _variant_t & _val );
    _variant_t GetAltStartupPath ( );
    void PutAltStartupPath ( const _variant_t & _val );
    _variant_t GetAskToUpdateLinks ( );
    void PutAskToUpdateLinks ( const _variant_t & _val );
    _variant_t GetAutoCorrect ( );
    void PutAutoCorrect ( const _variant_t & _val );
    _variant_t GetBuild ( );
    void PutBuild ( const _variant_t & _val );
    _variant_t GetCalculateBeforeSave ( );
    void PutCalculateBeforeSave ( const _variant_t & _val );
    _variant_t GetCalculation ( );
    void PutCalculation ( const _variant_t & _val );
    _variant_t GetCaller ( );
    void PutCaller ( const _variant_t & _val );
    _variant_t GetCanPlaySounds ( );
    void PutCanPlaySounds ( const _variant_t & _val );
    _variant_t GetCanRecordSounds ( );
    void PutCanRecordSounds ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCellDragAndDrop ( );
    void PutCellDragAndDrop ( const _variant_t & _val );
    _variant_t GetClipboardFormats ( );
    void PutClipboardFormats ( const _variant_t & _val );
    _variant_t GetColorButtons ( );
    void PutColorButtons ( const _variant_t & _val );
    _variant_t GetCommandUnderlines ( );
    void PutCommandUnderlines ( const _variant_t & _val );
    _variant_t GetConstrainNumeric ( );
    void PutConstrainNumeric ( const _variant_t & _val );
    _variant_t GetCopyObjectsWithCells ( );
    void PutCopyObjectsWithCells ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetCursor ( );
    void PutCursor ( const _variant_t & _val );
    _variant_t GetCustomListCount ( );
    void PutCustomListCount ( const _variant_t & _val );
    _variant_t GetCutCopyMode ( );
    void PutCutCopyMode ( const _variant_t & _val );
    _variant_t GetDataEntryMode ( );
    void PutDataEntryMode ( const _variant_t & _val );
    _variant_t GetDDEAppReturnCode ( );
    void PutDDEAppReturnCode ( const _variant_t & _val );
    _variant_t GetDefaultFilePath ( );
    void PutDefaultFilePath ( const _variant_t & _val );
    _variant_t GetDisplayAlerts ( );
    void PutDisplayAlerts ( const _variant_t & _val );
    _variant_t GetDisplayClipboardWindow ( );
    void PutDisplayClipboardWindow ( const _variant_t & _val );
    _variant_t GetDisplayExcel4Menus ( );
    void PutDisplayExcel4Menus ( const _variant_t & _val );
    _variant_t GetDisplayFormulaBar ( );
    void PutDisplayFormulaBar ( const _variant_t & _val );
    _variant_t GetDisplayFullScreen ( );
    void PutDisplayFullScreen ( const _variant_t & _val );
    _variant_t GetDisplayInfoWindow ( );
    void PutDisplayInfoWindow ( const _variant_t & _val );
    _variant_t GetDisplayNoteIndicator ( );
    void PutDisplayNoteIndicator ( const _variant_t & _val );
    _variant_t GetDisplayRecentFiles ( );
    void PutDisplayRecentFiles ( const _variant_t & _val );
    _variant_t GetDisplayScrollBars ( );
    void PutDisplayScrollBars ( const _variant_t & _val );
    _variant_t GetDisplayStatusBar ( );
    void PutDisplayStatusBar ( const _variant_t & _val );
    _variant_t GetEditDirectlyInCell ( );
    void PutEditDirectlyInCell ( const _variant_t & _val );
    _variant_t GetEnableAnimations ( );
    void PutEnableAnimations ( const _variant_t & _val );
    _variant_t GetEnableAutoComplete ( );
    void PutEnableAutoComplete ( const _variant_t & _val );
    _variant_t GetEnableCancelKey ( );
    void PutEnableCancelKey ( const _variant_t & _val );
    _variant_t GetEnableTipWizard ( );
    void PutEnableTipWizard ( const _variant_t & _val );
    _variant_t GetFileConverters ( );
    void PutFileConverters ( const _variant_t & _val );
    _variant_t GetFixedDecimal ( );
    void PutFixedDecimal ( const _variant_t & _val );
    _variant_t GetFixedDecimalPlaces ( );
    void PutFixedDecimalPlaces ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIgnoreRemoteRequests ( );
    void PutIgnoreRemoteRequests ( const _variant_t & _val );
    _variant_t GetInteractive ( );
    void PutInteractive ( const _variant_t & _val );
    _variant_t GetInternational ( );
    void PutInternational ( const _variant_t & _val );
    _variant_t GetIteration ( );
    void PutIteration ( const _variant_t & _val );
    _variant_t GetLargeButtons ( );
    void PutLargeButtons ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLibraryPath ( );
    void PutLibraryPath ( const _variant_t & _val );
    _variant_t GetMailSession ( );
    void PutMailSession ( const _variant_t & _val );
    _variant_t GetMailSystem ( );
    void PutMailSystem ( const _variant_t & _val );
    _variant_t GetMathCoprocessorAvailable ( );
    void PutMathCoprocessorAvailable ( const _variant_t & _val );
    _variant_t GetMaxChange ( );
    void PutMaxChange ( const _variant_t & _val );
    _variant_t GetMaxIterations ( );
    void PutMaxIterations ( const _variant_t & _val );
    _variant_t GetMemoryFree ( );
    void PutMemoryFree ( const _variant_t & _val );
    _variant_t GetMemoryTotal ( );
    void PutMemoryTotal ( const _variant_t & _val );
    _variant_t GetMemoryUsed ( );
    void PutMemoryUsed ( const _variant_t & _val );
    _variant_t GetMouseAvailable ( );
    void PutMouseAvailable ( const _variant_t & _val );
    _variant_t GetMoveAfterReturn ( );
    void PutMoveAfterReturn ( const _variant_t & _val );
    _variant_t GetMoveAfterReturnDirection ( );
    void PutMoveAfterReturnDirection ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNetworkTemplatesPath ( );
    void PutNetworkTemplatesPath ( const _variant_t & _val );
    _variant_t GetOnCalculate ( );
    void PutOnCalculate ( const _variant_t & _val );
    _variant_t GetOnData ( );
    void PutOnData ( const _variant_t & _val );
    _variant_t GetOnDoubleClick ( );
    void PutOnDoubleClick ( const _variant_t & _val );
    _variant_t GetOnEntry ( );
    void PutOnEntry ( const _variant_t & _val );
    _variant_t GetOnSheetActivate ( );
    void PutOnSheetActivate ( const _variant_t & _val );
    _variant_t GetOnSheetDeactivate ( );
    void PutOnSheetDeactivate ( const _variant_t & _val );
    _variant_t GetOnWindow ( );
    void PutOnWindow ( const _variant_t & _val );
    _variant_t GetOperatingSystem ( );
    void PutOperatingSystem ( const _variant_t & _val );
    _variant_t GetOrganizationName ( );
    void PutOrganizationName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPath ( );
    void PutPath ( const _variant_t & _val );
    _variant_t GetPathSeparator ( );
    void PutPathSeparator ( const _variant_t & _val );
    _variant_t GetPreviousSelections ( );
    void PutPreviousSelections ( const _variant_t & _val );
    _variant_t GetPromptForSummaryInfo ( );
    void PutPromptForSummaryInfo ( const _variant_t & _val );
    _variant_t GetRecordRelative ( );
    void PutRecordRelative ( const _variant_t & _val );
    _variant_t GetReferenceStyle ( );
    void PutReferenceStyle ( const _variant_t & _val );
    _variant_t GetRegisteredFunctions ( );
    void PutRegisteredFunctions ( const _variant_t & _val );
    _variant_t GetScreenUpdating ( );
    void PutScreenUpdating ( const _variant_t & _val );
    _variant_t GetSelection ( );
    void PutSelection ( const _variant_t & _val );
    _variant_t GetSheetsInNewWorkbook ( );
    void PutSheetsInNewWorkbook ( const _variant_t & _val );
    _variant_t GetShowToolTips ( );
    void PutShowToolTips ( const _variant_t & _val );
    _variant_t GetStandardFont ( );
    void PutStandardFont ( const _variant_t & _val );
    _variant_t GetStandardFontSize ( );
    void PutStandardFontSize ( const _variant_t & _val );
    _variant_t GetStartupPath ( );
    void PutStartupPath ( const _variant_t & _val );
    _variant_t GetStatusBar ( );
    void PutStatusBar ( const _variant_t & _val );
    _variant_t GetTemplatesPath ( );
    void PutTemplatesPath ( const _variant_t & _val );
    _variant_t GetThisWorkbook ( );
    void PutThisWorkbook ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTransitionMenuKey ( );
    void PutTransitionMenuKey ( const _variant_t & _val );
    _variant_t GetTransitionMenuKeyAction ( );
    void PutTransitionMenuKeyAction ( const _variant_t & _val );
    _variant_t GetTransitionNavigKeys ( );
    void PutTransitionNavigKeys ( const _variant_t & _val );
    _variant_t GetUsableHeight ( );
    void PutUsableHeight ( const _variant_t & _val );
    _variant_t GetUsableWidth ( );
    void PutUsableWidth ( const _variant_t & _val );
    _variant_t GetUserName ( );
    void PutUserName ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVersion ( );
    void PutVersion ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetWindowsForPens ( );
    void PutWindowsForPens ( const _variant_t & _val );
    _variant_t GetWindowState ( );
    void PutWindowState ( const _variant_t & _val );
};

struct __declspec(uuid("00020852-0000-0000-c000-000000000046"))
Style : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAddIndent,put=PutAddIndent))
    _variant_t AddIndent;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetFormulaHidden,put=PutFormulaHidden))
    _variant_t FormulaHidden;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetIncludeAlignment,put=PutIncludeAlignment))
    _variant_t IncludeAlignment;
    __declspec(property(get=GetIncludeBorder,put=PutIncludeBorder))
    _variant_t IncludeBorder;
    __declspec(property(get=GetIncludeFont,put=PutIncludeFont))
    _variant_t IncludeFont;
    __declspec(property(get=GetIncludeNumber,put=PutIncludeNumber))
    _variant_t IncludeNumber;
    __declspec(property(get=GetIncludePatterns,put=PutIncludePatterns))
    _variant_t IncludePatterns;
    __declspec(property(get=GetIncludeProtection,put=PutIncludeProtection))
    _variant_t IncludeProtection;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNameLocal,put=PutNameLocal))
    _variant_t NameLocal;
    __declspec(property(get=GetNumberFormat,put=PutNumberFormat))
    _variant_t NumberFormat;
    __declspec(property(get=GetNumberFormatLocal,put=PutNumberFormatLocal))
    _variant_t NumberFormatLocal;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;
    __declspec(property(get=GetWrapText,put=PutWrapText))
    _variant_t WrapText;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Borders (
        const _variant_t & Index = vtMissing );
    _variant_t Delete ( );

    // Properties:
    _variant_t GetAddIndent ( );
    void PutAddIndent ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetFormulaHidden ( );
    void PutFormulaHidden ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetIncludeAlignment ( );
    void PutIncludeAlignment ( const _variant_t & _val );
    _variant_t GetIncludeBorder ( );
    void PutIncludeBorder ( const _variant_t & _val );
    _variant_t GetIncludeFont ( );
    void PutIncludeFont ( const _variant_t & _val );
    _variant_t GetIncludeNumber ( );
    void PutIncludeNumber ( const _variant_t & _val );
    _variant_t GetIncludePatterns ( );
    void PutIncludePatterns ( const _variant_t & _val );
    _variant_t GetIncludeProtection ( );
    void PutIncludeProtection ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNameLocal ( );
    void PutNameLocal ( const _variant_t & _val );
    _variant_t GetNumberFormat ( );
    void PutNumberFormat ( const _variant_t & _val );
    _variant_t GetNumberFormatLocal ( );
    void PutNumberFormatLocal ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
    _variant_t GetWrapText ( );
    void PutWrapText ( const _variant_t & _val );
};

struct __declspec(uuid("00020853-0000-0000-c000-000000000046"))
Styles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Name,
        const _variant_t & BasedOn = vtMissing );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Merge (
        const _variant_t & Workbook );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("0002085c-0000-0000-c000-000000000046"))
Toolbar : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBuiltIn,put=PutBuiltIn))
    _variant_t BuiltIn;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPosition,put=PutPosition))
    _variant_t Position;
    __declspec(property(get=GetProtection,put=PutProtection))
    _variant_t Protection;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Reset ( );
    _variant_t ToolbarButtons (
        const _variant_t & Index = vtMissing );

    // Properties:
    _variant_t GetBuiltIn ( );
    void PutBuiltIn ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPosition ( );
    void PutPosition ( const _variant_t & _val );
    _variant_t GetProtection ( );
    void PutProtection ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
};

struct __declspec(uuid("0002085d-0000-0000-c000-000000000046"))
Toolbars : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Name = vtMissing );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("0002085e-0000-0000-c000-000000000046"))
ToolbarButton : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBuiltIn,put=PutBuiltIn))
    _variant_t BuiltIn;
    __declspec(property(get=GetBuiltInFace,put=PutBuiltInFace))
    _variant_t BuiltInFace;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHelpContextID,put=PutHelpContextID))
    _variant_t HelpContextID;
    __declspec(property(get=GetHelpFile,put=PutHelpFile))
    _variant_t HelpFile;
    __declspec(property(get=GetId,put=PutId))
    _variant_t Id;
    __declspec(property(get=GetIsGap,put=PutIsGap))
    _variant_t IsGap;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPushed,put=PutPushed))
    _variant_t Pushed;
    __declspec(property(get=GetStatusBar,put=PutStatusBar))
    _variant_t StatusBar;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Copy (
        const _variant_t & Toolbar,
        const _variant_t & Before );
    _variant_t CopyFace ( );
    _variant_t Delete ( );
    _variant_t Edit ( );
    _variant_t Move (
        const _variant_t & Toolbar,
        const _variant_t & Before );
    _variant_t PasteFace ( );
    _variant_t Reset ( );

    // Properties:
    _variant_t GetBuiltIn ( );
    void PutBuiltIn ( const _variant_t & _val );
    _variant_t GetBuiltInFace ( );
    void PutBuiltInFace ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHelpContextID ( );
    void PutHelpContextID ( const _variant_t & _val );
    _variant_t GetHelpFile ( );
    void PutHelpFile ( const _variant_t & _val );
    _variant_t GetId ( );
    void PutId ( const _variant_t & _val );
    _variant_t GetIsGap ( );
    void PutIsGap ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPushed ( );
    void PutPushed ( const _variant_t & _val );
    _variant_t GetStatusBar ( );
    void PutStatusBar ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
};

struct __declspec(uuid("0002085f-0000-0000-c000-000000000046"))
ToolbarButtons : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Button = vtMissing,
        const _variant_t & Before = vtMissing,
        const _variant_t & OnAction = vtMissing,
        const _variant_t & Pushed = vtMissing,
        const _variant_t & Enabled = vtMissing,
        const _variant_t & StatusBar = vtMissing,
        const _variant_t & HelpFile = vtMissing,
        const _variant_t & HelpContextID = vtMissing );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020857-0000-0000-c000-000000000046"))
AddIn : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAuthor,put=PutAuthor))
    _variant_t Author;
    __declspec(property(get=GetComments,put=PutComments))
    _variant_t Comments;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFullName,put=PutFullName))
    _variant_t FullName;
    __declspec(property(get=GetInstalled,put=PutInstalled))
    _variant_t Installed;
    __declspec(property(get=GetKeywords,put=PutKeywords))
    _variant_t Keywords;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPath,put=PutPath))
    _variant_t Path;
    __declspec(property(get=GetSubject,put=PutSubject))
    _variant_t Subject;
    __declspec(property(get=GetTitle,put=PutTitle))
    _variant_t Title;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );

    // Properties:
    _variant_t GetAuthor ( );
    void PutAuthor ( const _variant_t & _val );
    _variant_t GetComments ( );
    void PutComments ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFullName ( );
    void PutFullName ( const _variant_t & _val );
    _variant_t GetInstalled ( );
    void PutInstalled ( const _variant_t & _val );
    _variant_t GetKeywords ( );
    void PutKeywords ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPath ( );
    void PutPath ( const _variant_t & _val );
    _variant_t GetSubject ( );
    void PutSubject ( const _variant_t & _val );
    _variant_t GetTitle ( );
    void PutTitle ( const _variant_t & _val );
};

struct __declspec(uuid("00020858-0000-0000-c000-000000000046"))
AddIns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Filename,
        const _variant_t & CopyFile = vtMissing );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020860-0000-0000-c000-000000000046"))
Areas : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020846-0000-0000-c000-000000000046"))
Range : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAddIndent,put=PutAddIndent))
    _variant_t AddIndent;
    __declspec(property(get=GetColumn,put=PutColumn))
    _variant_t Column;
    __declspec(property(get=GetColumnWidth,put=PutColumnWidth))
    _variant_t ColumnWidth;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetCurrentArray,put=PutCurrentArray))
    _variant_t CurrentArray;
    __declspec(property(get=GetCurrentRegion,put=PutCurrentRegion))
    _variant_t CurrentRegion;
    __declspec(property(get=GetDependents,put=PutDependents))
    _variant_t Dependents;
    __declspec(property(get=GetDirectDependents,put=PutDirectDependents))
    _variant_t DirectDependents;
    __declspec(property(get=GetDirectPrecedents,put=PutDirectPrecedents))
    _variant_t DirectPrecedents;
    __declspec(property(get=GetEntireColumn,put=PutEntireColumn))
    _variant_t EntireColumn;
    __declspec(property(get=GetEntireRow,put=PutEntireRow))
    _variant_t EntireRow;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetFormula,put=PutFormula))
    _variant_t Formula;
    __declspec(property(get=GetFormulaArray,put=PutFormulaArray))
    _variant_t FormulaArray;
    __declspec(property(get=GetFormulaHidden,put=PutFormulaHidden))
    _variant_t FormulaHidden;
    __declspec(property(get=GetFormulaLocal,put=PutFormulaLocal))
    _variant_t FormulaLocal;
    __declspec(property(get=GetFormulaR1C1,put=PutFormulaR1C1))
    _variant_t FormulaR1C1;
    __declspec(property(get=GetFormulaR1C1Local,put=PutFormulaR1C1Local))
    _variant_t FormulaR1C1Local;
    __declspec(property(get=GetHasArray,put=PutHasArray))
    _variant_t HasArray;
    __declspec(property(get=GetHasFormula,put=PutHasFormula))
    _variant_t HasFormula;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetHidden,put=PutHidden))
    _variant_t Hidden;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetListHeaderRows,put=PutListHeaderRows))
    _variant_t ListHeaderRows;
    __declspec(property(get=GetLocationInTable,put=PutLocationInTable))
    _variant_t LocationInTable;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNext,put=PutNext))
    _variant_t Next;
    __declspec(property(get=GetNumberFormat,put=PutNumberFormat))
    _variant_t NumberFormat;
    __declspec(property(get=GetNumberFormatLocal,put=PutNumberFormatLocal))
    _variant_t NumberFormatLocal;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetOutlineLevel,put=PutOutlineLevel))
    _variant_t OutlineLevel;
    __declspec(property(get=GetPageBreak,put=PutPageBreak))
    _variant_t PageBreak;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPivotField,put=PutPivotField))
    _variant_t PivotField;
    __declspec(property(get=GetPivotItem,put=PutPivotItem))
    _variant_t PivotItem;
    __declspec(property(get=GetPivotTable,put=PutPivotTable))
    _variant_t PivotTable;
    __declspec(property(get=GetPrecedents,put=PutPrecedents))
    _variant_t Precedents;
    __declspec(property(get=GetPrefixCharacter,put=PutPrefixCharacter))
    _variant_t PrefixCharacter;
    __declspec(property(get=GetPrevious,put=PutPrevious))
    _variant_t Previous;
    __declspec(property(get=GetRow,put=PutRow))
    _variant_t Row;
    __declspec(property(get=GetRowHeight,put=PutRowHeight))
    _variant_t RowHeight;
    __declspec(property(get=GetShowDetail,put=PutShowDetail))
    _variant_t ShowDetail;
    __declspec(property(get=GetSoundNote,put=PutSoundNote))
    _variant_t SoundNote;
    __declspec(property(get=GetStyle,put=PutStyle))
    _variant_t Style;
    __declspec(property(get=GetSummary,put=PutSummary))
    _variant_t Summary;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetUseStandardHeight,put=PutUseStandardHeight))
    _variant_t UseStandardHeight;
    __declspec(property(get=GetUseStandardWidth,put=PutUseStandardWidth))
    _variant_t UseStandardWidth;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetWrapText,put=PutWrapText))
    _variant_t WrapText;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _Dummy (
        const _variant_t & Activate = vtMissing,
        const _variant_t & DirectObject = vtMissing );
    _variant_t _NewEnum ( );
    _variant_t Activate ( );
    _variant_t Address (
        const _variant_t & RowAbsolute = vtMissing,
        const _variant_t & ColumnAbsolute = vtMissing,
        const _variant_t & ReferenceStyle = vtMissing,
        const _variant_t & External = vtMissing,
        const _variant_t & RelativeTo = vtMissing );
    _variant_t AddressLocal (
        const _variant_t & RowAbsolute = vtMissing,
        const _variant_t & ColumnAbsolute = vtMissing,
        const _variant_t & ReferenceStyle = vtMissing,
        const _variant_t & External = vtMissing,
        const _variant_t & RelativeTo = vtMissing );
    _variant_t AdvancedFilter (
        const _variant_t & Action,
        const _variant_t & CriteriaRange = vtMissing,
        const _variant_t & CopyToRange = vtMissing,
        const _variant_t & Unique = vtMissing );
    _variant_t Application ( );
    _variant_t ApplyNames (
        const _variant_t & Names = vtMissing,
        const _variant_t & IgnoreRelativeAbsolute = vtMissing,
        const _variant_t & UseRowColumnNames = vtMissing,
        const _variant_t & OmitColumn = vtMissing,
        const _variant_t & OmitRow = vtMissing,
        const _variant_t & Order = vtMissing,
        const _variant_t & AppendLast = vtMissing );
    _variant_t ApplyOutlineStyles ( );
    _variant_t Areas (
        const _variant_t & Index = vtMissing );
    _variant_t AutoComplete (
        const _variant_t & String );
    _variant_t AutoFill (
        const _variant_t & Destination,
        const _variant_t & Type = vtMissing );
    _variant_t AutoFilter (
        const _variant_t & Field = vtMissing,
        const _variant_t & Criteria1 = vtMissing,
        const _variant_t & Operator = vtMissing,
        const _variant_t & Criteria2 = vtMissing );
    _variant_t AutoFit ( );
    _variant_t AutoFormat (
        const _variant_t & Format = vtMissing,
        const _variant_t & Number = vtMissing,
        const _variant_t & Font = vtMissing,
        const _variant_t & Alignment = vtMissing,
        const _variant_t & Border = vtMissing,
        const _variant_t & Pattern = vtMissing,
        const _variant_t & Width = vtMissing );
    _variant_t AutoOutline ( );
    _variant_t BorderAround (
        const _variant_t & LineStyle = vtMissing,
        const _variant_t & Weight = vtMissing,
        const _variant_t & ColorIndex = vtMissing,
        const _variant_t & Color = vtMissing );
    _variant_t Borders (
        const _variant_t & Index = vtMissing );
    _variant_t Calculate ( );
    _variant_t Cells (
        const _variant_t & RowIndex = vtMissing,
        const _variant_t & ColumnIndex = vtMissing );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Clear ( );
    _variant_t ClearContents ( );
    _variant_t ClearFormats ( );
    _variant_t ClearNotes ( );
    _variant_t ClearOutline ( );
    _variant_t ColumnDifferences (
        const _variant_t & Comparison );
    _variant_t Columns (
        const _variant_t & Index = vtMissing );
    _variant_t Consolidate (
        const _variant_t & Sources = vtMissing,
        const _variant_t & Function = vtMissing,
        const _variant_t & TopRow = vtMissing,
        const _variant_t & LeftColumn = vtMissing,
        const _variant_t & CreateLinks = vtMissing );
    _variant_t Copy (
        const _variant_t & Destination = vtMissing );
    _variant_t CopyFromRecordset (
        const _variant_t & Data,
        const _variant_t & MaxRows = vtMissing,
        const _variant_t & MaxColumns = vtMissing );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t CreateNames (
        const _variant_t & Top = vtMissing,
        const _variant_t & Left = vtMissing,
        const _variant_t & Bottom = vtMissing,
        const _variant_t & Right = vtMissing );
    _variant_t CreatePublisher (
        const _variant_t & Edition = vtMissing,
        const _variant_t & Appearance = vtMissing,
        const _variant_t & ContainsPICT = vtMissing,
        const _variant_t & ContainsBIFF = vtMissing,
        const _variant_t & ContainsRTF = vtMissing,
        const _variant_t & ContainsVALU = vtMissing );
    _variant_t Cut (
        const _variant_t & Destination = vtMissing );
    _variant_t DataSeries (
        const _variant_t & Rowcol = vtMissing,
        const _variant_t & Type = vtMissing,
        const _variant_t & Date = vtMissing,
        const _variant_t & Step = vtMissing,
        const _variant_t & Stop = vtMissing,
        const _variant_t & Trend = vtMissing );
    _variant_t Delete (
        const _variant_t & Shift = vtMissing );
    _variant_t DialogBoxXL ( );
    _variant_t End (
        const _variant_t & Direction );
    _variant_t FillDown ( );
    _variant_t FillLeft ( );
    _variant_t FillRight ( );
    _variant_t FillUp ( );
    _variant_t Find (
        const _variant_t & What,
        const _variant_t & After = vtMissing,
        const _variant_t & LookIn = vtMissing,
        const _variant_t & LookAt = vtMissing,
        const _variant_t & SearchOrder = vtMissing,
        const _variant_t & SearchDirection = vtMissing,
        const _variant_t & MatchCase = vtMissing,
        const _variant_t & MatchByte = vtMissing );
    _variant_t FindNext (
        const _variant_t & After = vtMissing );
    _variant_t FindPrevious (
        const _variant_t & After = vtMissing );
    _variant_t FunctionWizard ( );
    _variant_t GoalSeek (
        const _variant_t & Goal,
        const _variant_t & ChangingCell );
    _variant_t Group (
        const _variant_t & Start = vtMissing,
        const _variant_t & End = vtMissing,
        const _variant_t & By = vtMissing,
        const _variant_t & Periods = vtMissing );
    _variant_t Insert (
        const _variant_t & Shift = vtMissing );
    _variant_t Item (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex = vtMissing );
    _variant_t Justify ( );
    _variant_t ListNames ( );
    _variant_t NavigateArrow (
        const _variant_t & TowardPrecedent = vtMissing,
        const _variant_t & ArrowNumber = vtMissing,
        const _variant_t & LinkNumber = vtMissing );
    _variant_t NoteText (
        const _variant_t & Text = vtMissing,
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t Offset (
        const _variant_t & RowOffset = vtMissing,
        const _variant_t & ColumnOffset = vtMissing );
    _variant_t Parse (
        const _variant_t & ParseLine = vtMissing,
        const _variant_t & Destination = vtMissing );
    _variant_t PasteSpecial (
        const _variant_t & Paste = vtMissing,
        const _variant_t & Operation = vtMissing,
        const _variant_t & SkipBlanks = vtMissing,
        const _variant_t & Transpose = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t PrintPreview ( );
    _variant_t _Range (
        const _variant_t & Cell1 = vtMissing,
        const _variant_t & Cell2 = vtMissing );
    _variant_t RemoveSubtotal ( );
    _variant_t Replace (
        const _variant_t & What,
        const _variant_t & Replacement,
        const _variant_t & LookAt = vtMissing,
        const _variant_t & SearchOrder = vtMissing,
        const _variant_t & MatchCase = vtMissing,
        const _variant_t & MatchByte = vtMissing );
    _variant_t Resize (
        const _variant_t & RowSize = vtMissing,
        const _variant_t & ColumnSize = vtMissing );
    _variant_t RowDifferences (
        const _variant_t & Comparison );
    _variant_t Rows (
        const _variant_t & Index = vtMissing );
    _variant_t Run (
        const _variant_t & Arg1 = vtMissing,
        const _variant_t & Arg2 = vtMissing,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );
    _variant_t Select ( );
    _variant_t Show ( );
    _variant_t ShowDependents (
        const _variant_t & Remove = vtMissing );
    _variant_t ShowErrors ( );
    _variant_t ShowPrecedents (
        const _variant_t & Remove = vtMissing );
    _variant_t Sort (
        const _variant_t & Key1 = vtMissing,
        const _variant_t & Order1 = vtMissing,
        const _variant_t & Key2 = vtMissing,
        const _variant_t & Type = vtMissing,
        const _variant_t & Order2 = vtMissing,
        const _variant_t & Key3 = vtMissing,
        const _variant_t & Order3 = vtMissing,
        const _variant_t & Header = vtMissing,
        const _variant_t & OrderCustom = vtMissing,
        const _variant_t & MatchCase = vtMissing,
        const _variant_t & Orientation = vtMissing );
    _variant_t SortSpecial (
        const _variant_t & SortMethod = vtMissing,
        const _variant_t & Key1 = vtMissing,
        const _variant_t & Order1 = vtMissing,
        const _variant_t & Type = vtMissing,
        const _variant_t & Key2 = vtMissing,
        const _variant_t & Order2 = vtMissing,
        const _variant_t & Key3 = vtMissing,
        const _variant_t & Order3 = vtMissing,
        const _variant_t & Header = vtMissing,
        const _variant_t & OrderCustom = vtMissing,
        const _variant_t & MatchCase = vtMissing,
        const _variant_t & Orientation = vtMissing );
    _variant_t SpecialCells (
        const _variant_t & Type,
        const _variant_t & Value = vtMissing );
    _variant_t SubscribeTo (
        const _variant_t & Edition,
        const _variant_t & Format = vtMissing );
    _variant_t Subtotal (
        const _variant_t & GroupBy,
        const _variant_t & Function,
        const _variant_t & TotalList,
        const _variant_t & Replace = vtMissing,
        const _variant_t & PageBreaks = vtMissing,
        const _variant_t & SummaryBelowData = vtMissing );
    _variant_t Table (
        const _variant_t & RowInput = vtMissing,
        const _variant_t & ColumnInput = vtMissing );
    _variant_t TextToColumns (
        const _variant_t & Destination = vtMissing,
        const _variant_t & DataType = vtMissing,
        const _variant_t & TextQualifier = vtMissing,
        const _variant_t & ConsecutiveDelimiter = vtMissing,
        const _variant_t & Tab = vtMissing,
        const _variant_t & Semicolon = vtMissing,
        const _variant_t & Comma = vtMissing,
        const _variant_t & Space = vtMissing,
        const _variant_t & Other = vtMissing,
        const _variant_t & OtherChar = vtMissing,
        const _variant_t & FieldInfo = vtMissing );
    _variant_t Ungroup ( );
    _variant_t Worksheet ( );

    // Properties:
    _variant_t GetAddIndent ( );
    void PutAddIndent ( const _variant_t & _val );
    _variant_t GetColumn ( );
    void PutColumn ( const _variant_t & _val );
    _variant_t GetColumnWidth ( );
    void PutColumnWidth ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetCurrentArray ( );
    void PutCurrentArray ( const _variant_t & _val );
    _variant_t GetCurrentRegion ( );
    void PutCurrentRegion ( const _variant_t & _val );
    _variant_t GetDependents ( );
    void PutDependents ( const _variant_t & _val );
    _variant_t GetDirectDependents ( );
    void PutDirectDependents ( const _variant_t & _val );
    _variant_t GetDirectPrecedents ( );
    void PutDirectPrecedents ( const _variant_t & _val );
    _variant_t GetEntireColumn ( );
    void PutEntireColumn ( const _variant_t & _val );
    _variant_t GetEntireRow ( );
    void PutEntireRow ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetFormula ( );
    void PutFormula ( const _variant_t & _val );
    _variant_t GetFormulaArray ( );
    void PutFormulaArray ( const _variant_t & _val );
    _variant_t GetFormulaHidden ( );
    void PutFormulaHidden ( const _variant_t & _val );
    _variant_t GetFormulaLocal ( );
    void PutFormulaLocal ( const _variant_t & _val );
    _variant_t GetFormulaR1C1 ( );
    void PutFormulaR1C1 ( const _variant_t & _val );
    _variant_t GetFormulaR1C1Local ( );
    void PutFormulaR1C1Local ( const _variant_t & _val );
    _variant_t GetHasArray ( );
    void PutHasArray ( const _variant_t & _val );
    _variant_t GetHasFormula ( );
    void PutHasFormula ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetHidden ( );
    void PutHidden ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetListHeaderRows ( );
    void PutListHeaderRows ( const _variant_t & _val );
    _variant_t GetLocationInTable ( );
    void PutLocationInTable ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNext ( );
    void PutNext ( const _variant_t & _val );
    _variant_t GetNumberFormat ( );
    void PutNumberFormat ( const _variant_t & _val );
    _variant_t GetNumberFormatLocal ( );
    void PutNumberFormatLocal ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetOutlineLevel ( );
    void PutOutlineLevel ( const _variant_t & _val );
    _variant_t GetPageBreak ( );
    void PutPageBreak ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPivotField ( );
    void PutPivotField ( const _variant_t & _val );
    _variant_t GetPivotItem ( );
    void PutPivotItem ( const _variant_t & _val );
    _variant_t GetPivotTable ( );
    void PutPivotTable ( const _variant_t & _val );
    _variant_t GetPrecedents ( );
    void PutPrecedents ( const _variant_t & _val );
    _variant_t GetPrefixCharacter ( );
    void PutPrefixCharacter ( const _variant_t & _val );
    _variant_t GetPrevious ( );
    void PutPrevious ( const _variant_t & _val );
    _variant_t GetRow ( );
    void PutRow ( const _variant_t & _val );
    _variant_t GetRowHeight ( );
    void PutRowHeight ( const _variant_t & _val );
    _variant_t GetShowDetail ( );
    void PutShowDetail ( const _variant_t & _val );
    _variant_t GetSoundNote ( );
    void PutSoundNote ( const _variant_t & _val );
    _variant_t GetStyle ( );
    void PutStyle ( const _variant_t & _val );
    _variant_t GetSummary ( );
    void PutSummary ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetUseStandardHeight ( );
    void PutUseStandardHeight ( const _variant_t & _val );
    _variant_t GetUseStandardWidth ( );
    void PutUseStandardWidth ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetWrapText ( );
    void PutWrapText ( const _variant_t & _val );
};

struct __declspec(uuid("00020861-0000-0000-c000-000000000046"))
Workbook : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActiveChart,put=PutActiveChart))
    _variant_t ActiveChart;
    __declspec(property(get=GetActiveSheet,put=PutActiveSheet))
    _variant_t ActiveSheet;
    __declspec(property(get=GetAuthor,put=PutAuthor))
    _variant_t Author;
    __declspec(property(get=GetColors,put=PutColors))
    _variant_t Colors;
    __declspec(property(get=GetComments,put=PutComments))
    _variant_t Comments;
    __declspec(property(get=GetContainer,put=PutContainer))
    _variant_t Container;
    __declspec(property(get=GetCreateBackup,put=PutCreateBackup))
    _variant_t CreateBackup;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDate1904,put=PutDate1904))
    _variant_t Date1904;
    __declspec(property(get=GetDisplayDrawingObjects,put=PutDisplayDrawingObjects))
    _variant_t DisplayDrawingObjects;
    __declspec(property(get=GetFileFormat,put=PutFileFormat))
    _variant_t FileFormat;
    __declspec(property(get=GetFullName,put=PutFullName))
    _variant_t FullName;
    __declspec(property(get=GetHasMailer,put=PutHasMailer))
    _variant_t HasMailer;
    __declspec(property(get=GetHasPassword,put=PutHasPassword))
    _variant_t HasPassword;
    __declspec(property(get=GetHasRoutingSlip,put=PutHasRoutingSlip))
    _variant_t HasRoutingSlip;
    __declspec(property(get=GetKeywords,put=PutKeywords))
    _variant_t Keywords;
    __declspec(property(get=GetMailer,put=PutMailer))
    _variant_t Mailer;
    __declspec(property(get=GetMultiUserEditing,put=PutMultiUserEditing))
    _variant_t MultiUserEditing;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnSave,put=PutOnSave))
    _variant_t OnSave;
    __declspec(property(get=GetOnSheetActivate,put=PutOnSheetActivate))
    _variant_t OnSheetActivate;
    __declspec(property(get=GetOnSheetDeactivate,put=PutOnSheetDeactivate))
    _variant_t OnSheetDeactivate;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPath,put=PutPath))
    _variant_t Path;
    __declspec(property(get=GetPrecisionAsDisplayed,put=PutPrecisionAsDisplayed))
    _variant_t PrecisionAsDisplayed;
    __declspec(property(get=GetProtectStructure,put=PutProtectStructure))
    _variant_t ProtectStructure;
    __declspec(property(get=GetProtectWindows,put=PutProtectWindows))
    _variant_t ProtectWindows;
    __declspec(property(get=GetReadOnly,put=PutReadOnly))
    _variant_t ReadOnly;
    __declspec(property(get=GetReadOnlyRecommended,put=PutReadOnlyRecommended))
    _variant_t ReadOnlyRecommended;
    __declspec(property(get=GetRevisionNumber,put=PutRevisionNumber))
    _variant_t RevisionNumber;
    __declspec(property(get=GetRouted,put=PutRouted))
    _variant_t Routed;
    __declspec(property(get=GetRoutingSlip,put=PutRoutingSlip))
    _variant_t RoutingSlip;
    __declspec(property(get=GetSaved,put=PutSaved))
    _variant_t Saved;
    __declspec(property(get=GetSaveLinkValues,put=PutSaveLinkValues))
    _variant_t SaveLinkValues;
    __declspec(property(get=GetShowConflictHistory,put=PutShowConflictHistory))
    _variant_t ShowConflictHistory;
    __declspec(property(get=GetSubject,put=PutSubject))
    _variant_t Subject;
    __declspec(property(get=GetTitle,put=PutTitle))
    _variant_t Title;
    __declspec(property(get=GetUpdateRemoteReferences,put=PutUpdateRemoteReferences))
    _variant_t UpdateRemoteReferences;
    __declspec(property(get=GetUserStatus,put=PutUserStatus))
    _variant_t UserStatus;
    __declspec(property(get=GetWriteReserved,put=PutWriteReserved))
    _variant_t WriteReserved;
    __declspec(property(get=GetWriteReservedBy,put=PutWriteReservedBy))
    _variant_t WriteReservedBy;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Activate ( );
    _variant_t Application ( );
    _variant_t BuiltinDocumentProperties (
        const _variant_t & Index = vtMissing );
    _variant_t ChangeFileAccess (
        const _variant_t & Mode,
        const _variant_t & WritePassword = vtMissing,
        const _variant_t & Notify = vtMissing );
    _variant_t ChangeLink (
        const _variant_t & Name,
        const _variant_t & NewName,
        const _variant_t & Type = vtMissing );
    _variant_t Charts (
        const _variant_t & Index = vtMissing );
    _variant_t Close (
        const _variant_t & SaveChanges = vtMissing,
        const _variant_t & Filename = vtMissing,
        const _variant_t & RouteWorkbook = vtMissing );
    _variant_t CustomDocumentProperties (
        const _variant_t & Index = vtMissing );
    _variant_t DeleteNumberFormat (
        const _variant_t & NumberFormat );
    _variant_t DialogSheets (
        const _variant_t & Index = vtMissing );
    _variant_t Excel4IntlMacroSheets (
        const _variant_t & Index = vtMissing );
    _variant_t Excel4MacroSheets (
        const _variant_t & Index = vtMissing );
    _variant_t ExclusiveAccess ( );
    _variant_t ForwardMailer ( );
    _variant_t LinkInfo (
        const _variant_t & Name,
        const _variant_t & LinkInfo,
        const _variant_t & Type = vtMissing,
        const _variant_t & EditionRef = vtMissing );
    _variant_t LinkSources (
        const _variant_t & Type = vtMissing );
    _variant_t Modules (
        const _variant_t & Index = vtMissing );
    _variant_t Names (
        const _variant_t & Index = vtMissing,
        const _variant_t & IndexLocal = vtMissing,
        const _variant_t & RefersTo = vtMissing );
    _variant_t NewWindow ( );
    _variant_t OpenLinks (
        const _variant_t & Name,
        const _variant_t & ReadOnly = vtMissing,
        const _variant_t & Type = vtMissing );
    _variant_t Post (
        const _variant_t & DestName = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t PrintPreview ( );
    _variant_t Protect (
        const _variant_t & Password = vtMissing,
        const _variant_t & Structure = vtMissing,
        const _variant_t & Windows = vtMissing );
    _variant_t Reply ( );
    _variant_t ReplyAll ( );
    _variant_t Route ( );
    _variant_t RunAutoMacros (
        const _variant_t & Which );
    _variant_t Save ( );
    _variant_t SaveAs (
        const _variant_t & Filename = vtMissing,
        const _variant_t & FileFormat = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & WriteResPassword = vtMissing,
        const _variant_t & ReadOnlyRecommended = vtMissing,
        const _variant_t & CreateBackup = vtMissing,
        const _variant_t & AccessMode = vtMissing,
        const _variant_t & ConflictResolution = vtMissing );
    _variant_t SaveCopyAs (
        const _variant_t & Filename = vtMissing );
    _variant_t SendMail (
        const _variant_t & Recipients,
        const _variant_t & Subject = vtMissing,
        const _variant_t & ReturnReceipt = vtMissing );
    _variant_t SendMailer (
        const _variant_t & FileFormat = vtMissing,
        const _variant_t & Priority = vtMissing );
    _variant_t SetLinkOnData (
        const _variant_t & Name,
        const _variant_t & Procedure = vtMissing );
    _variant_t Sheets (
        const _variant_t & Index = vtMissing );
    _variant_t Styles (
        const _variant_t & Index = vtMissing );
    _variant_t Unprotect (
        const _variant_t & Password = vtMissing );
    _variant_t UpdateFromFile ( );
    _variant_t UpdateLink (
        const _variant_t & Name = vtMissing,
        const _variant_t & Type = vtMissing );
    _variant_t Windows (
        const _variant_t & Index = vtMissing );
    _variant_t Worksheets (
        const _variant_t & Index = vtMissing );

    // Properties:
    _variant_t GetActiveChart ( );
    void PutActiveChart ( const _variant_t & _val );
    _variant_t GetActiveSheet ( );
    void PutActiveSheet ( const _variant_t & _val );
    _variant_t GetAuthor ( );
    void PutAuthor ( const _variant_t & _val );
    _variant_t GetColors ( );
    void PutColors ( const _variant_t & _val );
    _variant_t GetComments ( );
    void PutComments ( const _variant_t & _val );
    _variant_t GetContainer ( );
    void PutContainer ( const _variant_t & _val );
    _variant_t GetCreateBackup ( );
    void PutCreateBackup ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDate1904 ( );
    void PutDate1904 ( const _variant_t & _val );
    _variant_t GetDisplayDrawingObjects ( );
    void PutDisplayDrawingObjects ( const _variant_t & _val );
    _variant_t GetFileFormat ( );
    void PutFileFormat ( const _variant_t & _val );
    _variant_t GetFullName ( );
    void PutFullName ( const _variant_t & _val );
    _variant_t GetHasMailer ( );
    void PutHasMailer ( const _variant_t & _val );
    _variant_t GetHasPassword ( );
    void PutHasPassword ( const _variant_t & _val );
    _variant_t GetHasRoutingSlip ( );
    void PutHasRoutingSlip ( const _variant_t & _val );
    _variant_t GetKeywords ( );
    void PutKeywords ( const _variant_t & _val );
    _variant_t GetMailer ( );
    void PutMailer ( const _variant_t & _val );
    _variant_t GetMultiUserEditing ( );
    void PutMultiUserEditing ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnSave ( );
    void PutOnSave ( const _variant_t & _val );
    _variant_t GetOnSheetActivate ( );
    void PutOnSheetActivate ( const _variant_t & _val );
    _variant_t GetOnSheetDeactivate ( );
    void PutOnSheetDeactivate ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPath ( );
    void PutPath ( const _variant_t & _val );
    _variant_t GetPrecisionAsDisplayed ( );
    void PutPrecisionAsDisplayed ( const _variant_t & _val );
    _variant_t GetProtectStructure ( );
    void PutProtectStructure ( const _variant_t & _val );
    _variant_t GetProtectWindows ( );
    void PutProtectWindows ( const _variant_t & _val );
    _variant_t GetReadOnly ( );
    void PutReadOnly ( const _variant_t & _val );
    _variant_t GetReadOnlyRecommended ( );
    void PutReadOnlyRecommended ( const _variant_t & _val );
    _variant_t GetRevisionNumber ( );
    void PutRevisionNumber ( const _variant_t & _val );
    _variant_t GetRouted ( );
    void PutRouted ( const _variant_t & _val );
    _variant_t GetRoutingSlip ( );
    void PutRoutingSlip ( const _variant_t & _val );
    _variant_t GetSaved ( );
    void PutSaved ( const _variant_t & _val );
    _variant_t GetSaveLinkValues ( );
    void PutSaveLinkValues ( const _variant_t & _val );
    _variant_t GetShowConflictHistory ( );
    void PutShowConflictHistory ( const _variant_t & _val );
    _variant_t GetSubject ( );
    void PutSubject ( const _variant_t & _val );
    _variant_t GetTitle ( );
    void PutTitle ( const _variant_t & _val );
    _variant_t GetUpdateRemoteReferences ( );
    void PutUpdateRemoteReferences ( const _variant_t & _val );
    _variant_t GetUserStatus ( );
    void PutUserStatus ( const _variant_t & _val );
    _variant_t GetWriteReserved ( );
    void PutWriteReserved ( const _variant_t & _val );
    _variant_t GetWriteReservedBy ( );
    void PutWriteReservedBy ( const _variant_t & _val );
};

struct __declspec(uuid("00020862-0000-0000-c000-000000000046"))
Workbooks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Template = vtMissing );
    _variant_t Application ( );
    _variant_t Close ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Open (
        const _variant_t & Filename,
        const _variant_t & UpdateLinks = vtMissing,
        const _variant_t & ReadOnly = vtMissing,
        const _variant_t & Format = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & WriteResPassword = vtMissing,
        const _variant_t & IgnoreReadOnlyRecommended = vtMissing,
        const _variant_t & Origin = vtMissing,
        const _variant_t & Delimiter = vtMissing,
        const _variant_t & Editable = vtMissing,
        const _variant_t & Notify = vtMissing,
        const _variant_t & Converter = vtMissing );
    _variant_t OpenText (
        const _variant_t & Filename,
        const _variant_t & Origin = vtMissing,
        const _variant_t & StartRow = vtMissing,
        const _variant_t & DataType = vtMissing,
        const _variant_t & TextQualifier = vtMissing,
        const _variant_t & ConsecutiveDelimiter = vtMissing,
        const _variant_t & Tab = vtMissing,
        const _variant_t & Semicolon = vtMissing,
        const _variant_t & Comma = vtMissing,
        const _variant_t & Space = vtMissing,
        const _variant_t & Other = vtMissing,
        const _variant_t & OtherChar = vtMissing,
        const _variant_t & FieldInfo = vtMissing );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("0002084c-0000-0000-c000-000000000046"))
Sheets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing,
        const _variant_t & Count = vtMissing,
        const _variant_t & Type = vtMissing );
    _variant_t Application ( );
    _variant_t Copy (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t Delete ( );
    _variant_t FillAcrossSheets (
        const _variant_t & Range,
        const _variant_t & Type = vtMissing );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Move (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t PrintPreview ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
};

struct __declspec(uuid("00020850-0000-0000-c000-000000000046"))
Worksheet : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAutoFilterMode,put=PutAutoFilterMode))
    _variant_t AutoFilterMode;
    __declspec(property(get=GetCircularReference,put=PutCircularReference))
    _variant_t CircularReference;
    __declspec(property(get=GetConsolidationFunction,put=PutConsolidationFunction))
    _variant_t ConsolidationFunction;
    __declspec(property(get=GetConsolidationOptions,put=PutConsolidationOptions))
    _variant_t ConsolidationOptions;
    __declspec(property(get=GetConsolidationSources,put=PutConsolidationSources))
    _variant_t ConsolidationSources;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplayAutomaticPageBreaks,put=PutDisplayAutomaticPageBreaks))
    _variant_t DisplayAutomaticPageBreaks;
    __declspec(property(get=GetEnableAutoFilter,put=PutEnableAutoFilter))
    _variant_t EnableAutoFilter;
    __declspec(property(get=GetEnableOutlining,put=PutEnableOutlining))
    _variant_t EnableOutlining;
    __declspec(property(get=GetEnablePivotTable,put=PutEnablePivotTable))
    _variant_t EnablePivotTable;
    __declspec(property(get=GetFilterMode,put=PutFilterMode))
    _variant_t FilterMode;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNext,put=PutNext))
    _variant_t Next;
    __declspec(property(get=GetOnCalculate,put=PutOnCalculate))
    _variant_t OnCalculate;
    __declspec(property(get=GetOnData,put=PutOnData))
    _variant_t OnData;
    __declspec(property(get=GetOnDoubleClick,put=PutOnDoubleClick))
    _variant_t OnDoubleClick;
    __declspec(property(get=GetOnEntry,put=PutOnEntry))
    _variant_t OnEntry;
    __declspec(property(get=GetOnSheetActivate,put=PutOnSheetActivate))
    _variant_t OnSheetActivate;
    __declspec(property(get=GetOnSheetDeactivate,put=PutOnSheetDeactivate))
    _variant_t OnSheetDeactivate;
    __declspec(property(get=GetOutline,put=PutOutline))
    _variant_t Outline;
    __declspec(property(get=GetPageSetup,put=PutPageSetup))
    _variant_t PageSetup;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPrevious,put=PutPrevious))
    _variant_t Previous;
    __declspec(property(get=GetProtectContents,put=PutProtectContents))
    _variant_t ProtectContents;
    __declspec(property(get=GetProtectDrawingObjects,put=PutProtectDrawingObjects))
    _variant_t ProtectDrawingObjects;
    __declspec(property(get=GetProtectionMode,put=PutProtectionMode))
    _variant_t ProtectionMode;
    __declspec(property(get=GetProtectScenarios,put=PutProtectScenarios))
    _variant_t ProtectScenarios;
    __declspec(property(get=GetStandardHeight,put=PutStandardHeight))
    _variant_t StandardHeight;
    __declspec(property(get=GetStandardWidth,put=PutStandardWidth))
    _variant_t StandardWidth;
    __declspec(property(get=GetTransitionExpEval,put=PutTransitionExpEval))
    _variant_t TransitionExpEval;
    __declspec(property(get=GetTransitionFormEntry,put=PutTransitionFormEntry))
    _variant_t TransitionFormEntry;
    __declspec(property(get=GetType,put=PutType))
    _variant_t Type;
    __declspec(property(get=GetUsedRange,put=PutUsedRange))
    _variant_t UsedRange;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Activate ( );
    _variant_t Application ( );
    _variant_t Arcs (
        const _variant_t & Index = vtMissing );
    _variant_t Buttons (
        const _variant_t & Index = vtMissing );
    _variant_t Calculate ( );
    _variant_t Cells (
        const _variant_t & RowIndex = vtMissing,
        const _variant_t & ColumnIndex = vtMissing );
    _variant_t ChartObjects (
        const _variant_t & Index = vtMissing );
    _variant_t CheckBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t ClearArrows ( );
    _variant_t Columns (
        const _variant_t & Index = vtMissing );
    _variant_t Copy (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t Delete ( );
    _variant_t DrawingObjects (
        const _variant_t & Index = vtMissing );
    _variant_t Drawings (
        const _variant_t & Index = vtMissing );
    _variant_t DropDowns (
        const _variant_t & Index = vtMissing );
    _variant_t _Evaluate (
        const _variant_t & Name );
    _variant_t Evaluate (
        const _variant_t & Name );
    _variant_t GroupBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t GroupObjects (
        const _variant_t & Index = vtMissing );
    _variant_t Labels (
        const _variant_t & Index = vtMissing );
    _variant_t Lines (
        const _variant_t & Index = vtMissing );
    _variant_t ListBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t Move (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t Names (
        const _variant_t & Index = vtMissing,
        const _variant_t & IndexLocal = vtMissing,
        const _variant_t & RefersTo = vtMissing );
    _variant_t OLEObjects (
        const _variant_t & Index = vtMissing );
    _variant_t OptionButtons (
        const _variant_t & Index = vtMissing );
    _variant_t Ovals (
        const _variant_t & Index = vtMissing );
    _variant_t Paste (
        const _variant_t & Destination = vtMissing,
        const _variant_t & Link = vtMissing );
    _variant_t PasteSpecial (
        const _variant_t & Format = vtMissing,
        const _variant_t & Link = vtMissing,
        const _variant_t & DisplayAsIcon = vtMissing,
        const _variant_t & IconFileName = vtMissing,
        const _variant_t & IconIndex = vtMissing,
        const _variant_t & IconLabel = vtMissing );
    _variant_t Pictures (
        const _variant_t & Index = vtMissing );
    _variant_t PivotTables (
        const _variant_t & Index = vtMissing );
    _variant_t PivotTableWizard (
        const _variant_t & SourceType = vtMissing,
        const _variant_t & SourceData = vtMissing,
        const _variant_t & TableDestination = vtMissing,
        const _variant_t & TableName = vtMissing,
        const _variant_t & RowGrand = vtMissing,
        const _variant_t & ColumnGrand = vtMissing,
        const _variant_t & SaveData = vtMissing,
        const _variant_t & HasAutoFormat = vtMissing,
        const _variant_t & AutoPage = vtMissing,
        const _variant_t & Reserved = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t PrintPreview ( );
    _variant_t Protect (
        const _variant_t & Password = vtMissing,
        const _variant_t & DrawingObjects = vtMissing,
        const _variant_t & Contents = vtMissing,
        const _variant_t & Scenarios = vtMissing,
        const _variant_t & UserInterfaceOnly = vtMissing );
    _variant_t Range (
        const _variant_t & Cell1 = vtMissing,
        const _variant_t & Cell2 = vtMissing );
    _variant_t Rectangles (
        const _variant_t & Index = vtMissing );
    _variant_t Rows (
        const _variant_t & Index = vtMissing );
    _variant_t SaveAs (
        const _variant_t & Filename,
        const _variant_t & FileFormat = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & WriteResPassword = vtMissing,
        const _variant_t & ReadOnlyRecommended = vtMissing,
        const _variant_t & CreateBackup = vtMissing );
    _variant_t Scenarios (
        const _variant_t & Index = vtMissing );
    _variant_t ScrollBars (
        const _variant_t & Index = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SetBackgroundPicture (
        const _variant_t & Filename = vtMissing );
    _variant_t ShowAllData ( );
    _variant_t ShowDataForm ( );
    _variant_t Spinners (
        const _variant_t & Index = vtMissing );
    _variant_t TextBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t Unprotect (
        const _variant_t & Password = vtMissing );

    // Properties:
    _variant_t GetAutoFilterMode ( );
    void PutAutoFilterMode ( const _variant_t & _val );
    _variant_t GetCircularReference ( );
    void PutCircularReference ( const _variant_t & _val );
    _variant_t GetConsolidationFunction ( );
    void PutConsolidationFunction ( const _variant_t & _val );
    _variant_t GetConsolidationOptions ( );
    void PutConsolidationOptions ( const _variant_t & _val );
    _variant_t GetConsolidationSources ( );
    void PutConsolidationSources ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplayAutomaticPageBreaks ( );
    void PutDisplayAutomaticPageBreaks ( const _variant_t & _val );
    _variant_t GetEnableAutoFilter ( );
    void PutEnableAutoFilter ( const _variant_t & _val );
    _variant_t GetEnableOutlining ( );
    void PutEnableOutlining ( const _variant_t & _val );
    _variant_t GetEnablePivotTable ( );
    void PutEnablePivotTable ( const _variant_t & _val );
    _variant_t GetFilterMode ( );
    void PutFilterMode ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNext ( );
    void PutNext ( const _variant_t & _val );
    _variant_t GetOnCalculate ( );
    void PutOnCalculate ( const _variant_t & _val );
    _variant_t GetOnData ( );
    void PutOnData ( const _variant_t & _val );
    _variant_t GetOnDoubleClick ( );
    void PutOnDoubleClick ( const _variant_t & _val );
    _variant_t GetOnEntry ( );
    void PutOnEntry ( const _variant_t & _val );
    _variant_t GetOnSheetActivate ( );
    void PutOnSheetActivate ( const _variant_t & _val );
    _variant_t GetOnSheetDeactivate ( );
    void PutOnSheetDeactivate ( const _variant_t & _val );
    _variant_t GetOutline ( );
    void PutOutline ( const _variant_t & _val );
    _variant_t GetPageSetup ( );
    void PutPageSetup ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPrevious ( );
    void PutPrevious ( const _variant_t & _val );
    _variant_t GetProtectContents ( );
    void PutProtectContents ( const _variant_t & _val );
    _variant_t GetProtectDrawingObjects ( );
    void PutProtectDrawingObjects ( const _variant_t & _val );
    _variant_t GetProtectionMode ( );
    void PutProtectionMode ( const _variant_t & _val );
    _variant_t GetProtectScenarios ( );
    void PutProtectScenarios ( const _variant_t & _val );
    _variant_t GetStandardHeight ( );
    void PutStandardHeight ( const _variant_t & _val );
    _variant_t GetStandardWidth ( );
    void PutStandardWidth ( const _variant_t & _val );
    _variant_t GetTransitionExpEval ( );
    void PutTransitionExpEval ( const _variant_t & _val );
    _variant_t GetTransitionFormEntry ( );
    void PutTransitionFormEntry ( const _variant_t & _val );
    _variant_t GetType ( );
    void PutType ( const _variant_t & _val );
    _variant_t GetUsedRange ( );
    void PutUsedRange ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
};

struct __declspec(uuid("000209b1-0000-0000-c000-000000000046"))
Worksheets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing,
        const _variant_t & Count = vtMissing,
        const _variant_t & Type = vtMissing );
    _variant_t Application ( );
    _variant_t Copy (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t Delete ( );
    _variant_t FillAcrossSheets (
        const _variant_t & Range,
        const _variant_t & Type = vtMissing );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Move (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t PrintPreview ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
};

struct __declspec(uuid("00020872-0000-0000-c000-000000000046"))
PivotTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetColumnFields,put=PutColumnFields))
    _variant_t ColumnFields;
    __declspec(property(get=GetColumnGrand,put=PutColumnGrand))
    _variant_t ColumnGrand;
    __declspec(property(get=GetColumnRange,put=PutColumnRange))
    _variant_t ColumnRange;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDataBodyRange,put=PutDataBodyRange))
    _variant_t DataBodyRange;
    __declspec(property(get=GetDataFields,put=PutDataFields))
    _variant_t DataFields;
    __declspec(property(get=GetDataLabelRange,put=PutDataLabelRange))
    _variant_t DataLabelRange;
    __declspec(property(get=GetHasAutoFormat,put=PutHasAutoFormat))
    _variant_t HasAutoFormat;
    __declspec(property(get=GetHiddenFields,put=PutHiddenFields))
    _variant_t HiddenFields;
    __declspec(property(get=GetInnerDetail,put=PutInnerDetail))
    _variant_t InnerDetail;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetPageFields,put=PutPageFields))
    _variant_t PageFields;
    __declspec(property(get=GetPageRange,put=PutPageRange))
    _variant_t PageRange;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetRefreshDate,put=PutRefreshDate))
    _variant_t RefreshDate;
    __declspec(property(get=GetRefreshName,put=PutRefreshName))
    _variant_t RefreshName;
    __declspec(property(get=GetRowFields,put=PutRowFields))
    _variant_t RowFields;
    __declspec(property(get=GetRowGrand,put=PutRowGrand))
    _variant_t RowGrand;
    __declspec(property(get=GetRowRange,put=PutRowRange))
    _variant_t RowRange;
    __declspec(property(get=GetSaveData,put=PutSaveData))
    _variant_t SaveData;
    __declspec(property(get=GetSourceData,put=PutSourceData))
    _variant_t SourceData;
    __declspec(property(get=GetTableRange1,put=PutTableRange1))
    _variant_t TableRange1;
    __declspec(property(get=GetTableRange2,put=PutTableRange2))
    _variant_t TableRange2;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisibleFields,put=PutVisibleFields))
    _variant_t VisibleFields;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t AddFields (
        const _variant_t & RowFields = vtMissing,
        const _variant_t & ColumnFields = vtMissing,
        const _variant_t & PageFields = vtMissing,
        const _variant_t & AddToTable = vtMissing );
    _variant_t Application ( );
    _variant_t PivotFields (
        const _variant_t & Index = vtMissing );
    _variant_t RefreshTable ( );
    _variant_t ShowPages (
        const _variant_t & PageField = vtMissing );

    // Properties:
    _variant_t GetColumnFields ( );
    void PutColumnFields ( const _variant_t & _val );
    _variant_t GetColumnGrand ( );
    void PutColumnGrand ( const _variant_t & _val );
    _variant_t GetColumnRange ( );
    void PutColumnRange ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDataBodyRange ( );
    void PutDataBodyRange ( const _variant_t & _val );
    _variant_t GetDataFields ( );
    void PutDataFields ( const _variant_t & _val );
    _variant_t GetDataLabelRange ( );
    void PutDataLabelRange ( const _variant_t & _val );
    _variant_t GetHasAutoFormat ( );
    void PutHasAutoFormat ( const _variant_t & _val );
    _variant_t GetHiddenFields ( );
    void PutHiddenFields ( const _variant_t & _val );
    _variant_t GetInnerDetail ( );
    void PutInnerDetail ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetPageFields ( );
    void PutPageFields ( const _variant_t & _val );
    _variant_t GetPageRange ( );
    void PutPageRange ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetRefreshDate ( );
    void PutRefreshDate ( const _variant_t & _val );
    _variant_t GetRefreshName ( );
    void PutRefreshName ( const _variant_t & _val );
    _variant_t GetRowFields ( );
    void PutRowFields ( const _variant_t & _val );
    _variant_t GetRowGrand ( );
    void PutRowGrand ( const _variant_t & _val );
    _variant_t GetRowRange ( );
    void PutRowRange ( const _variant_t & _val );
    _variant_t GetSaveData ( );
    void PutSaveData ( const _variant_t & _val );
    _variant_t GetSourceData ( );
    void PutSourceData ( const _variant_t & _val );
    _variant_t GetTableRange1 ( );
    void PutTableRange1 ( const _variant_t & _val );
    _variant_t GetTableRange2 ( );
    void PutTableRange2 ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisibleFields ( );
    void PutVisibleFields ( const _variant_t & _val );
};

struct __declspec(uuid("00020873-0000-0000-c000-000000000046"))
PivotTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020874-0000-0000-c000-000000000046"))
PivotField : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBaseField,put=PutBaseField))
    _variant_t BaseField;
    __declspec(property(get=GetBaseItem,put=PutBaseItem))
    _variant_t BaseItem;
    __declspec(property(get=GetCalculation,put=PutCalculation))
    _variant_t Calculation;
    __declspec(property(get=GetChildField,put=PutChildField))
    _variant_t ChildField;
    __declspec(property(get=GetChildItems,put=PutChildItems))
    _variant_t ChildItems;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetCurrentPage,put=PutCurrentPage))
    _variant_t CurrentPage;
    __declspec(property(get=GetDataRange,put=PutDataRange))
    _variant_t DataRange;
    __declspec(property(get=GetDataType,put=PutDataType))
    _variant_t DataType;
    __declspec(property(get=GetFunction,put=PutFunction))
    _variant_t Function;
    __declspec(property(get=GetGroupLevel,put=PutGroupLevel))
    _variant_t GroupLevel;
    __declspec(property(get=GetHiddenItems,put=PutHiddenItems))
    _variant_t HiddenItems;
    __declspec(property(get=GetLabelRange,put=PutLabelRange))
    _variant_t LabelRange;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNumberFormat,put=PutNumberFormat))
    _variant_t NumberFormat;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetParentField,put=PutParentField))
    _variant_t ParentField;
    __declspec(property(get=GetParentItems,put=PutParentItems))
    _variant_t ParentItems;
    __declspec(property(get=GetPosition,put=PutPosition))
    _variant_t Position;
    __declspec(property(get=GetSourceName,put=PutSourceName))
    _variant_t SourceName;
    __declspec(property(get=GetSubtotals,put=PutSubtotals))
    _variant_t Subtotals;
    __declspec(property(get=GetTotalLevels,put=PutTotalLevels))
    _variant_t TotalLevels;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisibleItems,put=PutVisibleItems))
    _variant_t VisibleItems;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t PivotItems (
        const _variant_t & Index = vtMissing );

    // Properties:
    _variant_t GetBaseField ( );
    void PutBaseField ( const _variant_t & _val );
    _variant_t GetBaseItem ( );
    void PutBaseItem ( const _variant_t & _val );
    _variant_t GetCalculation ( );
    void PutCalculation ( const _variant_t & _val );
    _variant_t GetChildField ( );
    void PutChildField ( const _variant_t & _val );
    _variant_t GetChildItems ( );
    void PutChildItems ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetCurrentPage ( );
    void PutCurrentPage ( const _variant_t & _val );
    _variant_t GetDataRange ( );
    void PutDataRange ( const _variant_t & _val );
    _variant_t GetDataType ( );
    void PutDataType ( const _variant_t & _val );
    _variant_t GetFunction ( );
    void PutFunction ( const _variant_t & _val );
    _variant_t GetGroupLevel ( );
    void PutGroupLevel ( const _variant_t & _val );
    _variant_t GetHiddenItems ( );
    void PutHiddenItems ( const _variant_t & _val );
    _variant_t GetLabelRange ( );
    void PutLabelRange ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNumberFormat ( );
    void PutNumberFormat ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetParentField ( );
    void PutParentField ( const _variant_t & _val );
    _variant_t GetParentItems ( );
    void PutParentItems ( const _variant_t & _val );
    _variant_t GetPosition ( );
    void PutPosition ( const _variant_t & _val );
    _variant_t GetSourceName ( );
    void PutSourceName ( const _variant_t & _val );
    _variant_t GetSubtotals ( );
    void PutSubtotals ( const _variant_t & _val );
    _variant_t GetTotalLevels ( );
    void PutTotalLevels ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisibleItems ( );
    void PutVisibleItems ( const _variant_t & _val );
};

struct __declspec(uuid("00020875-0000-0000-c000-000000000046"))
PivotFields : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020876-0000-0000-c000-000000000046"))
PivotItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetChildItems,put=PutChildItems))
    _variant_t ChildItems;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDataRange,put=PutDataRange))
    _variant_t DataRange;
    __declspec(property(get=GetLabelRange,put=PutLabelRange))
    _variant_t LabelRange;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetParentItem,put=PutParentItem))
    _variant_t ParentItem;
    __declspec(property(get=GetParentShowDetail,put=PutParentShowDetail))
    _variant_t ParentShowDetail;
    __declspec(property(get=GetPosition,put=PutPosition))
    _variant_t Position;
    __declspec(property(get=GetShowDetail,put=PutShowDetail))
    _variant_t ShowDetail;
    __declspec(property(get=GetSourceName,put=PutSourceName))
    _variant_t SourceName;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );

    // Properties:
    _variant_t GetChildItems ( );
    void PutChildItems ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDataRange ( );
    void PutDataRange ( const _variant_t & _val );
    _variant_t GetLabelRange ( );
    void PutLabelRange ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetParentItem ( );
    void PutParentItem ( const _variant_t & _val );
    _variant_t GetParentShowDetail ( );
    void PutParentShowDetail ( const _variant_t & _val );
    _variant_t GetPosition ( );
    void PutPosition ( const _variant_t & _val );
    _variant_t GetShowDetail ( );
    void PutShowDetail ( const _variant_t & _val );
    _variant_t GetSourceName ( );
    void PutSourceName ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
};

struct __declspec(uuid("00020877-0000-0000-c000-000000000046"))
PivotItems : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020897-0000-0000-c000-000000000046"))
Scenario : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetChangingCells,put=PutChangingCells))
    _variant_t ChangingCells;
    __declspec(property(get=GetComment,put=PutComment))
    _variant_t Comment;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetHidden,put=PutHidden))
    _variant_t Hidden;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetValues,put=PutValues))
    _variant_t Values;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t ChangeScenario (
        const _variant_t & ChangingCells,
        const _variant_t & Values = vtMissing );
    _variant_t Delete ( );
    _variant_t Show ( );

    // Properties:
    _variant_t GetChangingCells ( );
    void PutChangingCells ( const _variant_t & _val );
    _variant_t GetComment ( );
    void PutComment ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetHidden ( );
    void PutHidden ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetValues ( );
    void PutValues ( const _variant_t & _val );
};

struct __declspec(uuid("00020896-0000-0000-c000-000000000046"))
Scenarios : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Name,
        const _variant_t & ChangingCells,
        const _variant_t & Values = vtMissing,
        const _variant_t & Comment = vtMissing,
        const _variant_t & Locked = vtMissing,
        const _variant_t & Hidden = vtMissing );
    _variant_t Application ( );
    _variant_t CreateSummary (
        const _variant_t & ReportType = vtMissing,
        const _variant_t & ResultCells = vtMissing );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Merge (
        const _variant_t & Source );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020864-0000-0000-c000-000000000046"))
MenuBar : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Activate ( );
    _variant_t Application ( );
    _variant_t BuiltIn ( );
    _variant_t Delete ( );
    _variant_t Menus (
        const _variant_t & Index = vtMissing );
    _variant_t Reset ( );

    // Properties:
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020863-0000-0000-c000-000000000046"))
MenuBars : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Name = vtMissing );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020866-0000-0000-c000-000000000046"))
Menu : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t MenuItems (
        const _variant_t & Index = vtMissing );

    // Properties:
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020865-0000-0000-c000-000000000046"))
Menus : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Caption,
        const _variant_t & Before = vtMissing,
        const _variant_t & Restore = vtMissing );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020868-0000-0000-c000-000000000046"))
MenuItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetChecked,put=PutChecked))
    _variant_t Checked;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHelpContextID,put=PutHelpContextID))
    _variant_t HelpContextID;
    __declspec(property(get=GetHelpFile,put=PutHelpFile))
    _variant_t HelpFile;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetStatusBar,put=PutStatusBar))
    _variant_t StatusBar;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );

    // Properties:
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetChecked ( );
    void PutChecked ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHelpContextID ( );
    void PutHelpContextID ( const _variant_t & _val );
    _variant_t GetHelpFile ( );
    void PutHelpFile ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetStatusBar ( );
    void PutStatusBar ( const _variant_t & _val );
};

struct __declspec(uuid("00020867-0000-0000-c000-000000000046"))
MenuItems : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Caption,
        const _variant_t & OnAction = vtMissing,
        const _variant_t & ShortcutKey = vtMissing,
        const _variant_t & Before = vtMissing,
        const _variant_t & Restore = vtMissing,
        const _variant_t & StatusBar = vtMissing,
        const _variant_t & HelpFile = vtMissing,
        const _variant_t & HelpContextID = vtMissing );
    _variant_t AddMenu (
        const _variant_t & Caption,
        const _variant_t & Before = vtMissing,
        const _variant_t & Restore = vtMissing );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020893-0000-0000-c000-000000000046"))
Window : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActiveCell,put=PutActiveCell))
    _variant_t ActiveCell;
    __declspec(property(get=GetActiveChart,put=PutActiveChart))
    _variant_t ActiveChart;
    __declspec(property(get=GetActivePane,put=PutActivePane))
    _variant_t ActivePane;
    __declspec(property(get=GetActiveSheet,put=PutActiveSheet))
    _variant_t ActiveSheet;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplayFormulas,put=PutDisplayFormulas))
    _variant_t DisplayFormulas;
    __declspec(property(get=GetDisplayGridlines,put=PutDisplayGridlines))
    _variant_t DisplayGridlines;
    __declspec(property(get=GetDisplayHeadings,put=PutDisplayHeadings))
    _variant_t DisplayHeadings;
    __declspec(property(get=GetDisplayHorizontalScrollBar,put=PutDisplayHorizontalScrollBar))
    _variant_t DisplayHorizontalScrollBar;
    __declspec(property(get=GetDisplayOutline,put=PutDisplayOutline))
    _variant_t DisplayOutline;
    __declspec(property(get=GetDisplayRightToLeft,put=PutDisplayRightToLeft))
    _variant_t DisplayRightToLeft;
    __declspec(property(get=GetDisplayVerticalScrollBar,put=PutDisplayVerticalScrollBar))
    _variant_t DisplayVerticalScrollBar;
    __declspec(property(get=GetDisplayWorkbookTabs,put=PutDisplayWorkbookTabs))
    _variant_t DisplayWorkbookTabs;
    __declspec(property(get=GetDisplayZeros,put=PutDisplayZeros))
    _variant_t DisplayZeros;
    __declspec(property(get=GetFreezePanes,put=PutFreezePanes))
    _variant_t FreezePanes;
    __declspec(property(get=GetGridlineColor,put=PutGridlineColor))
    _variant_t GridlineColor;
    __declspec(property(get=GetGridlineColorIndex,put=PutGridlineColorIndex))
    _variant_t GridlineColorIndex;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetOnWindow,put=PutOnWindow))
    _variant_t OnWindow;
    __declspec(property(get=GetPageSetup,put=PutPageSetup))
    _variant_t PageSetup;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetRangeSelection,put=PutRangeSelection))
    _variant_t RangeSelection;
    __declspec(property(get=GetScrollColumn,put=PutScrollColumn))
    _variant_t ScrollColumn;
    __declspec(property(get=GetScrollRow,put=PutScrollRow))
    _variant_t ScrollRow;
    __declspec(property(get=GetSelectedSheets,put=PutSelectedSheets))
    _variant_t SelectedSheets;
    __declspec(property(get=GetSelection,put=PutSelection))
    _variant_t Selection;
    __declspec(property(get=GetSplit,put=PutSplit))
    _variant_t Split;
    __declspec(property(get=GetSplitColumn,put=PutSplitColumn))
    _variant_t SplitColumn;
    __declspec(property(get=GetSplitHorizontal,put=PutSplitHorizontal))
    _variant_t SplitHorizontal;
    __declspec(property(get=GetSplitRow,put=PutSplitRow))
    _variant_t SplitRow;
    __declspec(property(get=GetSplitVertical,put=PutSplitVertical))
    _variant_t SplitVertical;
    __declspec(property(get=GetTabRatio,put=PutTabRatio))
    _variant_t TabRatio;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetType,put=PutType))
    _variant_t Type;
    __declspec(property(get=GetUsableHeight,put=PutUsableHeight))
    _variant_t UsableHeight;
    __declspec(property(get=GetUsableWidth,put=PutUsableWidth))
    _variant_t UsableWidth;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetVisibleRange,put=PutVisibleRange))
    _variant_t VisibleRange;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetWindowNumber,put=PutWindowNumber))
    _variant_t WindowNumber;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    _variant_t WindowState;
    __declspec(property(get=GetZoom,put=PutZoom))
    _variant_t Zoom;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Activate ( );
    _variant_t ActivateNext ( );
    _variant_t ActivatePrevious ( );
    _variant_t Application ( );
    _variant_t Close (
        const _variant_t & SaveChanges = vtMissing,
        const _variant_t & Filename = vtMissing,
        const _variant_t & RouteWorkbook = vtMissing );
    _variant_t LargeScroll (
        const _variant_t & Down = vtMissing,
        const _variant_t & Up = vtMissing,
        const _variant_t & ToRight = vtMissing,
        const _variant_t & ToLeft = vtMissing );
    _variant_t NewWindow ( );
    _variant_t Panes (
        const _variant_t & Index = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t PrintPreview ( );
    _variant_t ScrollWorkbookTabs (
        const _variant_t & Sheets = vtMissing,
        const _variant_t & Position = vtMissing );
    _variant_t SetInfoDisplay (
        const _variant_t & Cell = vtMissing,
        const _variant_t & Formula = vtMissing,
        const _variant_t & Value = vtMissing,
        const _variant_t & Format = vtMissing,
        const _variant_t & Protection = vtMissing,
        const _variant_t & Names = vtMissing,
        const _variant_t & Precedents = vtMissing,
        const _variant_t & Dependents = vtMissing,
        const _variant_t & Note = vtMissing );
    _variant_t SmallScroll (
        const _variant_t & Down = vtMissing,
        const _variant_t & Up = vtMissing,
        const _variant_t & ToRight = vtMissing,
        const _variant_t & ToLeft = vtMissing );

    // Properties:
    _variant_t GetActiveCell ( );
    void PutActiveCell ( const _variant_t & _val );
    _variant_t GetActiveChart ( );
    void PutActiveChart ( const _variant_t & _val );
    _variant_t GetActivePane ( );
    void PutActivePane ( const _variant_t & _val );
    _variant_t GetActiveSheet ( );
    void PutActiveSheet ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplayFormulas ( );
    void PutDisplayFormulas ( const _variant_t & _val );
    _variant_t GetDisplayGridlines ( );
    void PutDisplayGridlines ( const _variant_t & _val );
    _variant_t GetDisplayHeadings ( );
    void PutDisplayHeadings ( const _variant_t & _val );
    _variant_t GetDisplayHorizontalScrollBar ( );
    void PutDisplayHorizontalScrollBar ( const _variant_t & _val );
    _variant_t GetDisplayOutline ( );
    void PutDisplayOutline ( const _variant_t & _val );
    _variant_t GetDisplayRightToLeft ( );
    void PutDisplayRightToLeft ( const _variant_t & _val );
    _variant_t GetDisplayVerticalScrollBar ( );
    void PutDisplayVerticalScrollBar ( const _variant_t & _val );
    _variant_t GetDisplayWorkbookTabs ( );
    void PutDisplayWorkbookTabs ( const _variant_t & _val );
    _variant_t GetDisplayZeros ( );
    void PutDisplayZeros ( const _variant_t & _val );
    _variant_t GetFreezePanes ( );
    void PutFreezePanes ( const _variant_t & _val );
    _variant_t GetGridlineColor ( );
    void PutGridlineColor ( const _variant_t & _val );
    _variant_t GetGridlineColorIndex ( );
    void PutGridlineColorIndex ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetOnWindow ( );
    void PutOnWindow ( const _variant_t & _val );
    _variant_t GetPageSetup ( );
    void PutPageSetup ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetRangeSelection ( );
    void PutRangeSelection ( const _variant_t & _val );
    _variant_t GetScrollColumn ( );
    void PutScrollColumn ( const _variant_t & _val );
    _variant_t GetScrollRow ( );
    void PutScrollRow ( const _variant_t & _val );
    _variant_t GetSelectedSheets ( );
    void PutSelectedSheets ( const _variant_t & _val );
    _variant_t GetSelection ( );
    void PutSelection ( const _variant_t & _val );
    _variant_t GetSplit ( );
    void PutSplit ( const _variant_t & _val );
    _variant_t GetSplitColumn ( );
    void PutSplitColumn ( const _variant_t & _val );
    _variant_t GetSplitHorizontal ( );
    void PutSplitHorizontal ( const _variant_t & _val );
    _variant_t GetSplitRow ( );
    void PutSplitRow ( const _variant_t & _val );
    _variant_t GetSplitVertical ( );
    void PutSplitVertical ( const _variant_t & _val );
    _variant_t GetTabRatio ( );
    void PutTabRatio ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetType ( );
    void PutType ( const _variant_t & _val );
    _variant_t GetUsableHeight ( );
    void PutUsableHeight ( const _variant_t & _val );
    _variant_t GetUsableWidth ( );
    void PutUsableWidth ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetVisibleRange ( );
    void PutVisibleRange ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetWindowNumber ( );
    void PutWindowNumber ( const _variant_t & _val );
    _variant_t GetWindowState ( );
    void PutWindowState ( const _variant_t & _val );
    _variant_t GetZoom ( );
    void PutZoom ( const _variant_t & _val );
};

struct __declspec(uuid("00020892-0000-0000-c000-000000000046"))
Windows : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Arrange (
        const _variant_t & ArrangeStyle = vtMissing,
        const _variant_t & ActiveWorkbook = vtMissing,
        const _variant_t & SyncHorizontal = vtMissing,
        const _variant_t & SyncVertical = vtMissing );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020895-0000-0000-c000-000000000046"))
Pane : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetScrollColumn,put=PutScrollColumn))
    _variant_t ScrollColumn;
    __declspec(property(get=GetScrollRow,put=PutScrollRow))
    _variant_t ScrollRow;
    __declspec(property(get=GetVisibleRange,put=PutVisibleRange))
    _variant_t VisibleRange;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Activate ( );
    _variant_t Application ( );
    _variant_t LargeScroll (
        const _variant_t & Down = vtMissing,
        const _variant_t & Up = vtMissing,
        const _variant_t & ToRight = vtMissing,
        const _variant_t & ToLeft = vtMissing );
    _variant_t SmallScroll (
        const _variant_t & Down = vtMissing,
        const _variant_t & Up = vtMissing,
        const _variant_t & ToRight = vtMissing,
        const _variant_t & ToLeft = vtMissing );

    // Properties:
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetScrollColumn ( );
    void PutScrollColumn ( const _variant_t & _val );
    _variant_t GetScrollRow ( );
    void PutScrollRow ( const _variant_t & _val );
    _variant_t GetVisibleRange ( );
    void PutVisibleRange ( const _variant_t & _val );
};

struct __declspec(uuid("00020894-0000-0000-c000-000000000046"))
Panes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208b9-0000-0000-c000-000000000046"))
Name : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCategory,put=PutCategory))
    _variant_t Category;
    __declspec(property(get=GetCategoryLocal,put=PutCategoryLocal))
    _variant_t CategoryLocal;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetMacroType,put=PutMacroType))
    _variant_t MacroType;
    __declspec(property(get=GetName,put=PutName))
    _variant_t _Name;
    __declspec(property(get=GetNameLocal,put=PutNameLocal))
    _variant_t NameLocal;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetRefersTo,put=PutRefersTo))
    _variant_t RefersTo;
    __declspec(property(get=GetRefersToLocal,put=PutRefersToLocal))
    _variant_t RefersToLocal;
    __declspec(property(get=GetRefersToR1C1,put=PutRefersToR1C1))
    _variant_t RefersToR1C1;
    __declspec(property(get=GetRefersToR1C1Local,put=PutRefersToR1C1Local))
    _variant_t RefersToR1C1Local;
    __declspec(property(get=GetRefersToRange,put=PutRefersToRange))
    _variant_t RefersToRange;
    __declspec(property(get=GetShortcutKey,put=PutShortcutKey))
    _variant_t ShortcutKey;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );

    // Properties:
    _variant_t GetCategory ( );
    void PutCategory ( const _variant_t & _val );
    _variant_t GetCategoryLocal ( );
    void PutCategoryLocal ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetMacroType ( );
    void PutMacroType ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNameLocal ( );
    void PutNameLocal ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetRefersTo ( );
    void PutRefersTo ( const _variant_t & _val );
    _variant_t GetRefersToLocal ( );
    void PutRefersToLocal ( const _variant_t & _val );
    _variant_t GetRefersToR1C1 ( );
    void PutRefersToR1C1 ( const _variant_t & _val );
    _variant_t GetRefersToR1C1Local ( );
    void PutRefersToR1C1Local ( const _variant_t & _val );
    _variant_t GetRefersToRange ( );
    void PutRefersToRange ( const _variant_t & _val );
    _variant_t GetShortcutKey ( );
    void PutShortcutKey ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
};

struct __declspec(uuid("000208b8-0000-0000-c000-000000000046"))
Names : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Name = vtMissing,
        const _variant_t & RefersTo = vtMissing,
        const _variant_t & Visible = vtMissing,
        const _variant_t & MacroType = vtMissing,
        const _variant_t & ShortcutKey = vtMissing,
        const _variant_t & Category = vtMissing,
        const _variant_t & NameLocal = vtMissing,
        const _variant_t & RefersToLocal = vtMissing,
        const _variant_t & CategoryLocal = vtMissing,
        const _variant_t & RefersToR1C1 = vtMissing,
        const _variant_t & RefersToR1C1Local = vtMissing );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index = vtMissing,
        const _variant_t & IndexLocal = vtMissing,
        const _variant_t & RefersTo = vtMissing );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("0002086f-0000-0000-c000-000000000046"))
DrawingObjects : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetAddIndent,put=PutAddIndent))
    _variant_t AddIndent;
    __declspec(property(get=GetArrowHeadLength,put=PutArrowHeadLength))
    _variant_t ArrowHeadLength;
    __declspec(property(get=GetArrowHeadStyle,put=PutArrowHeadStyle))
    _variant_t ArrowHeadStyle;
    __declspec(property(get=GetArrowHeadWidth,put=PutArrowHeadWidth))
    _variant_t ArrowHeadWidth;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    _variant_t AutoSize;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCancelButton,put=PutCancelButton))
    _variant_t CancelButton;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDefaultButton,put=PutDefaultButton))
    _variant_t DefaultButton;
    __declspec(property(get=GetDismissButton,put=PutDismissButton))
    _variant_t DismissButton;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetDisplayVerticalScrollBar,put=PutDisplayVerticalScrollBar))
    _variant_t DisplayVerticalScrollBar;
    __declspec(property(get=GetDropDownLines,put=PutDropDownLines))
    _variant_t DropDownLines;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetHelpButton,put=PutHelpButton))
    _variant_t HelpButton;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetInputType,put=PutInputType))
    _variant_t InputType;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLargeChange,put=PutLargeChange))
    _variant_t LargeChange;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetList,put=PutList))
    _variant_t List;
    __declspec(property(get=GetListFillRange,put=PutListFillRange))
    _variant_t ListFillRange;
    __declspec(property(get=GetListIndex,put=PutListIndex))
    _variant_t ListIndex;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetMax,put=PutMax))
    _variant_t Max;
    __declspec(property(get=GetMin,put=PutMin))
    _variant_t Min;
    __declspec(property(get=GetMultiLine,put=PutMultiLine))
    _variant_t MultiLine;
    __declspec(property(get=GetMultiSelect,put=PutMultiSelect))
    _variant_t MultiSelect;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetRoundedCorners,put=PutRoundedCorners))
    _variant_t RoundedCorners;
    __declspec(property(get=GetSelected,put=PutSelected))
    _variant_t Selected;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetSmallChange,put=PutSmallChange))
    _variant_t SmallChange;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;
    __declspec(property(get=GetVertices,put=PutVertices))
    _variant_t Vertices;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t AddItem (
        const _variant_t & Text,
        const _variant_t & Index = vtMissing );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t LinkCombo (
        const _variant_t & Link = vtMissing );
    _variant_t RemoveAllItems ( );
    _variant_t RemoveItem (
        const _variant_t & Index,
        const _variant_t & Count = vtMissing );
    _variant_t Reshape (
        const _variant_t & Vertex,
        const _variant_t & Insert,
        const _variant_t & Left = vtMissing,
        const _variant_t & Top = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );
    _variant_t Ungroup ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetAddIndent ( );
    void PutAddIndent ( const _variant_t & _val );
    _variant_t GetArrowHeadLength ( );
    void PutArrowHeadLength ( const _variant_t & _val );
    _variant_t GetArrowHeadStyle ( );
    void PutArrowHeadStyle ( const _variant_t & _val );
    _variant_t GetArrowHeadWidth ( );
    void PutArrowHeadWidth ( const _variant_t & _val );
    _variant_t GetAutoSize ( );
    void PutAutoSize ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCancelButton ( );
    void PutCancelButton ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDefaultButton ( );
    void PutDefaultButton ( const _variant_t & _val );
    _variant_t GetDismissButton ( );
    void PutDismissButton ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetDisplayVerticalScrollBar ( );
    void PutDisplayVerticalScrollBar ( const _variant_t & _val );
    _variant_t GetDropDownLines ( );
    void PutDropDownLines ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetHelpButton ( );
    void PutHelpButton ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetInputType ( );
    void PutInputType ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLargeChange ( );
    void PutLargeChange ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetList ( );
    void PutList ( const _variant_t & _val );
    _variant_t GetListFillRange ( );
    void PutListFillRange ( const _variant_t & _val );
    _variant_t GetListIndex ( );
    void PutListIndex ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetMax ( );
    void PutMax ( const _variant_t & _val );
    _variant_t GetMin ( );
    void PutMin ( const _variant_t & _val );
    _variant_t GetMultiLine ( );
    void PutMultiLine ( const _variant_t & _val );
    _variant_t GetMultiSelect ( );
    void PutMultiSelect ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetRoundedCorners ( );
    void PutRoundedCorners ( const _variant_t & _val );
    _variant_t GetSelected ( );
    void PutSelected ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetSmallChange ( );
    void PutSmallChange ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
    _variant_t GetVertices ( );
    void PutVertices ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020898-0000-0000-c000-000000000046"))
GroupObject : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAddIndent,put=PutAddIndent))
    _variant_t AddIndent;
    __declspec(property(get=GetArrowHeadLength,put=PutArrowHeadLength))
    _variant_t ArrowHeadLength;
    __declspec(property(get=GetArrowHeadStyle,put=PutArrowHeadStyle))
    _variant_t ArrowHeadStyle;
    __declspec(property(get=GetArrowHeadWidth,put=PutArrowHeadWidth))
    _variant_t ArrowHeadWidth;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    _variant_t AutoSize;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetRoundedCorners,put=PutRoundedCorners))
    _variant_t RoundedCorners;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );
    _variant_t Ungroup ( );

    // Properties:
    _variant_t GetAddIndent ( );
    void PutAddIndent ( const _variant_t & _val );
    _variant_t GetArrowHeadLength ( );
    void PutArrowHeadLength ( const _variant_t & _val );
    _variant_t GetArrowHeadStyle ( );
    void PutArrowHeadStyle ( const _variant_t & _val );
    _variant_t GetArrowHeadWidth ( );
    void PutArrowHeadWidth ( const _variant_t & _val );
    _variant_t GetAutoSize ( );
    void PutAutoSize ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetRoundedCorners ( );
    void PutRoundedCorners ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020899-0000-0000-c000-000000000046"))
GroupObjects : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAddIndent,put=PutAddIndent))
    _variant_t AddIndent;
    __declspec(property(get=GetArrowHeadLength,put=PutArrowHeadLength))
    _variant_t ArrowHeadLength;
    __declspec(property(get=GetArrowHeadStyle,put=PutArrowHeadStyle))
    _variant_t ArrowHeadStyle;
    __declspec(property(get=GetArrowHeadWidth,put=PutArrowHeadWidth))
    _variant_t ArrowHeadWidth;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    _variant_t AutoSize;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetRoundedCorners,put=PutRoundedCorners))
    _variant_t RoundedCorners;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );
    _variant_t Ungroup ( );

    // Properties:
    _variant_t GetAddIndent ( );
    void PutAddIndent ( const _variant_t & _val );
    _variant_t GetArrowHeadLength ( );
    void PutArrowHeadLength ( const _variant_t & _val );
    _variant_t GetArrowHeadStyle ( );
    void PutArrowHeadStyle ( const _variant_t & _val );
    _variant_t GetArrowHeadWidth ( );
    void PutArrowHeadWidth ( const _variant_t & _val );
    _variant_t GetAutoSize ( );
    void PutAutoSize ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetRoundedCorners ( );
    void PutRoundedCorners ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002089a-0000-0000-c000-000000000046"))
Line : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetArrowHeadLength,put=PutArrowHeadLength))
    _variant_t ArrowHeadLength;
    __declspec(property(get=GetArrowHeadStyle,put=PutArrowHeadStyle))
    _variant_t ArrowHeadStyle;
    __declspec(property(get=GetArrowHeadWidth,put=PutArrowHeadWidth))
    _variant_t ArrowHeadWidth;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetArrowHeadLength ( );
    void PutArrowHeadLength ( const _variant_t & _val );
    _variant_t GetArrowHeadStyle ( );
    void PutArrowHeadStyle ( const _variant_t & _val );
    _variant_t GetArrowHeadWidth ( );
    void PutArrowHeadWidth ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002089b-0000-0000-c000-000000000046"))
Lines : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetArrowHeadLength,put=PutArrowHeadLength))
    _variant_t ArrowHeadLength;
    __declspec(property(get=GetArrowHeadStyle,put=PutArrowHeadStyle))
    _variant_t ArrowHeadStyle;
    __declspec(property(get=GetArrowHeadWidth,put=PutArrowHeadWidth))
    _variant_t ArrowHeadWidth;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & X1,
        const _variant_t & Y1,
        const _variant_t & X2,
        const _variant_t & Y2 );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetArrowHeadLength ( );
    void PutArrowHeadLength ( const _variant_t & _val );
    _variant_t GetArrowHeadStyle ( );
    void PutArrowHeadStyle ( const _variant_t & _val );
    _variant_t GetArrowHeadWidth ( );
    void PutArrowHeadWidth ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002089c-0000-0000-c000-000000000046"))
Rectangle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetRoundedCorners,put=PutRoundedCorners))
    _variant_t RoundedCorners;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetRoundedCorners ( );
    void PutRoundedCorners ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002089d-0000-0000-c000-000000000046"))
Rectangles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetRoundedCorners,put=PutRoundedCorners))
    _variant_t RoundedCorners;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetRoundedCorners ( );
    void PutRoundedCorners ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002089e-0000-0000-c000-000000000046"))
Oval : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002089f-0000-0000-c000-000000000046"))
Ovals : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208a0-0000-0000-c000-000000000046"))
Arc : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208a1-0000-0000-c000-000000000046"))
Arcs : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & X1,
        const _variant_t & Y1,
        const _variant_t & X2,
        const _variant_t & Y2 );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208a4-0000-0000-c000-000000000046"))
TextBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAddIndent,put=PutAddIndent))
    _variant_t AddIndent;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    _variant_t AutoSize;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetFormula,put=PutFormula))
    _variant_t Formula;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetRoundedCorners,put=PutRoundedCorners))
    _variant_t RoundedCorners;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAddIndent ( );
    void PutAddIndent ( const _variant_t & _val );
    _variant_t GetAutoSize ( );
    void PutAutoSize ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetFormula ( );
    void PutFormula ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetRoundedCorners ( );
    void PutRoundedCorners ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208a5-0000-0000-c000-000000000046"))
TextBoxes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAddIndent,put=PutAddIndent))
    _variant_t AddIndent;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    _variant_t AutoSize;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetFormula,put=PutFormula))
    _variant_t Formula;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetRoundedCorners,put=PutRoundedCorners))
    _variant_t RoundedCorners;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAddIndent ( );
    void PutAddIndent ( const _variant_t & _val );
    _variant_t GetAutoSize ( );
    void PutAutoSize ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetFormula ( );
    void PutFormula ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetRoundedCorners ( );
    void PutRoundedCorners ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208a6-0000-0000-c000-000000000046"))
Picture : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetFormula,put=PutFormula))
    _variant_t Formula;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetFormula ( );
    void PutFormula ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208a7-0000-0000-c000-000000000046"))
Pictures : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetFormula,put=PutFormula))
    _variant_t Formula;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Insert (
        const _variant_t & Filename,
        const _variant_t & Converter = vtMissing );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Paste (
        const _variant_t & Link = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetFormula ( );
    void PutFormula ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208a2-0000-0000-c000-000000000046"))
OLEObject : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAutoLoad,put=PutAutoLoad))
    _variant_t AutoLoad;
    __declspec(property(get=GetAutoUpdate,put=PutAutoUpdate))
    _variant_t AutoUpdate;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetObject,put=PutObject))
    _variant_t Object;
    __declspec(property(get=GetOLEType,put=PutOLEType))
    _variant_t OLEType;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Activate ( );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );
    _variant_t Update ( );
    _variant_t Verb (
        const _variant_t & Verb = vtMissing );

    // Properties:
    _variant_t GetAutoLoad ( );
    void PutAutoLoad ( const _variant_t & _val );
    _variant_t GetAutoUpdate ( );
    void PutAutoUpdate ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetObject ( );
    void PutObject ( const _variant_t & _val );
    _variant_t GetOLEType ( );
    void PutOLEType ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208a3-0000-0000-c000-000000000046"))
OLEObjects : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & ClassType = vtMissing,
        const _variant_t & Filename = vtMissing,
        const _variant_t & Link = vtMissing,
        const _variant_t & DisplayAsIcon = vtMissing,
        const _variant_t & IconFileName = vtMissing,
        const _variant_t & IconIndex = vtMissing,
        const _variant_t & IconLabel = vtMissing );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208cf-0000-0000-c000-000000000046"))
ChartObject : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetChart,put=PutChart))
    _variant_t Chart;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetRoundedCorners,put=PutRoundedCorners))
    _variant_t RoundedCorners;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Activate ( );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetChart ( );
    void PutChart ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetRoundedCorners ( );
    void PutRoundedCorners ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208d0-0000-0000-c000-000000000046"))
ChartObjects : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetRoundedCorners,put=PutRoundedCorners))
    _variant_t RoundedCorners;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetRoundedCorners ( );
    void PutRoundedCorners ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208a8-0000-0000-c000-000000000046"))
Drawing : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVertices,put=PutVertices))
    _variant_t Vertices;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t AddVertex (
        const _variant_t & Left,
        const _variant_t & Top );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Reshape (
        const _variant_t & Vertex,
        const _variant_t & Insert,
        const _variant_t & Left = vtMissing,
        const _variant_t & Top = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVertices ( );
    void PutVertices ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("000208a9-0000-0000-c000-000000000046"))
Drawings : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & X1,
        const _variant_t & Y1,
        const _variant_t & X2,
        const _variant_t & Y2,
        const _variant_t & Closed );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Reshape (
        const _variant_t & Vertex,
        const _variant_t & Insert,
        const _variant_t & Left = vtMissing,
        const _variant_t & Top = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002087d-0000-0000-c000-000000000046"))
Button : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetAddIndent,put=PutAddIndent))
    _variant_t AddIndent;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    _variant_t AutoSize;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCancelButton,put=PutCancelButton))
    _variant_t CancelButton;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDefaultButton,put=PutDefaultButton))
    _variant_t DefaultButton;
    __declspec(property(get=GetDismissButton,put=PutDismissButton))
    _variant_t DismissButton;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetFormula,put=PutFormula))
    _variant_t Formula;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetHelpButton,put=PutHelpButton))
    _variant_t HelpButton;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetAddIndent ( );
    void PutAddIndent ( const _variant_t & _val );
    _variant_t GetAutoSize ( );
    void PutAutoSize ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCancelButton ( );
    void PutCancelButton ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDefaultButton ( );
    void PutDefaultButton ( const _variant_t & _val );
    _variant_t GetDismissButton ( );
    void PutDismissButton ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetFormula ( );
    void PutFormula ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetHelpButton ( );
    void PutHelpButton ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002087e-0000-0000-c000-000000000046"))
Buttons : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetAddIndent,put=PutAddIndent))
    _variant_t AddIndent;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    _variant_t AutoSize;
    __declspec(property(get=GetCancelButton,put=PutCancelButton))
    _variant_t CancelButton;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDefaultButton,put=PutDefaultButton))
    _variant_t DefaultButton;
    __declspec(property(get=GetDismissButton,put=PutDismissButton))
    _variant_t DismissButton;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetFormula,put=PutFormula))
    _variant_t Formula;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetHelpButton,put=PutHelpButton))
    _variant_t HelpButton;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetAddIndent ( );
    void PutAddIndent ( const _variant_t & _val );
    _variant_t GetAutoSize ( );
    void PutAutoSize ( const _variant_t & _val );
    _variant_t GetCancelButton ( );
    void PutCancelButton ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDefaultButton ( );
    void PutDefaultButton ( const _variant_t & _val );
    _variant_t GetDismissButton ( );
    void PutDismissButton ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetFormula ( );
    void PutFormula ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetHelpButton ( );
    void PutHelpButton ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020883-0000-0000-c000-000000000046"))
EditBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplayVerticalScrollBar,put=PutDisplayVerticalScrollBar))
    _variant_t DisplayVerticalScrollBar;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInputType,put=PutInputType))
    _variant_t InputType;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedObject,put=PutLinkedObject))
    _variant_t LinkedObject;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetMultiLine,put=PutMultiLine))
    _variant_t MultiLine;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPasswordEdit,put=PutPasswordEdit))
    _variant_t PasswordEdit;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplayVerticalScrollBar ( );
    void PutDisplayVerticalScrollBar ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInputType ( );
    void PutInputType ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedObject ( );
    void PutLinkedObject ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetMultiLine ( );
    void PutMultiLine ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPasswordEdit ( );
    void PutPasswordEdit ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020884-0000-0000-c000-000000000046"))
EditBoxes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplayVerticalScrollBar,put=PutDisplayVerticalScrollBar))
    _variant_t DisplayVerticalScrollBar;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInputType,put=PutInputType))
    _variant_t InputType;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetMultiLine,put=PutMultiLine))
    _variant_t MultiLine;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPasswordEdit,put=PutPasswordEdit))
    _variant_t PasswordEdit;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplayVerticalScrollBar ( );
    void PutDisplayVerticalScrollBar ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInputType ( );
    void PutInputType ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetMultiLine ( );
    void PutMultiLine ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPasswordEdit ( );
    void PutPasswordEdit ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002087f-0000-0000-c000-000000000046"))
CheckBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020880-0000-0000-c000-000000000046"))
CheckBoxes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020881-0000-0000-c000-000000000046"))
OptionButton : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020882-0000-0000-c000-000000000046"))
OptionButtons : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002088d-0000-0000-c000-000000000046"))
Spinner : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetMax,put=PutMax))
    _variant_t Max;
    __declspec(property(get=GetMin,put=PutMin))
    _variant_t Min;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetSmallChange,put=PutSmallChange))
    _variant_t SmallChange;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetMax ( );
    void PutMax ( const _variant_t & _val );
    _variant_t GetMin ( );
    void PutMin ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetSmallChange ( );
    void PutSmallChange ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002088e-0000-0000-c000-000000000046"))
Spinners : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetMax,put=PutMax))
    _variant_t Max;
    __declspec(property(get=GetMin,put=PutMin))
    _variant_t Min;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetSmallChange,put=PutSmallChange))
    _variant_t SmallChange;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetMax ( );
    void PutMax ( const _variant_t & _val );
    _variant_t GetMin ( );
    void PutMin ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetSmallChange ( );
    void PutSmallChange ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020885-0000-0000-c000-000000000046"))
ScrollBar : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLargeChange,put=PutLargeChange))
    _variant_t LargeChange;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetMax,put=PutMax))
    _variant_t Max;
    __declspec(property(get=GetMin,put=PutMin))
    _variant_t Min;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetSmallChange,put=PutSmallChange))
    _variant_t SmallChange;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLargeChange ( );
    void PutLargeChange ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetMax ( );
    void PutMax ( const _variant_t & _val );
    _variant_t GetMin ( );
    void PutMin ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetSmallChange ( );
    void PutSmallChange ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020886-0000-0000-c000-000000000046"))
ScrollBars : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetLargeChange,put=PutLargeChange))
    _variant_t LargeChange;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetMax,put=PutMax))
    _variant_t Max;
    __declspec(property(get=GetMin,put=PutMin))
    _variant_t Min;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetSmallChange,put=PutSmallChange))
    _variant_t SmallChange;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetLargeChange ( );
    void PutLargeChange ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetMax ( );
    void PutMax ( const _variant_t & _val );
    _variant_t GetMin ( );
    void PutMin ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetSmallChange ( );
    void PutSmallChange ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020887-0000-0000-c000-000000000046"))
ListBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetLinkedObject,put=PutLinkedObject))
    _variant_t LinkedObject;
    __declspec(property(get=GetList,put=PutList))
    _variant_t List;
    __declspec(property(get=GetListCount,put=PutListCount))
    _variant_t ListCount;
    __declspec(property(get=GetListFillRange,put=PutListFillRange))
    _variant_t ListFillRange;
    __declspec(property(get=GetListIndex,put=PutListIndex))
    _variant_t ListIndex;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetMultiSelect,put=PutMultiSelect))
    _variant_t MultiSelect;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetSelected,put=PutSelected))
    _variant_t Selected;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t AddItem (
        const _variant_t & Text,
        const _variant_t & Index = vtMissing );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t RemoveAllItems ( );
    _variant_t RemoveItem (
        const _variant_t & Index,
        const _variant_t & Count = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetLinkedObject ( );
    void PutLinkedObject ( const _variant_t & _val );
    _variant_t GetList ( );
    void PutList ( const _variant_t & _val );
    _variant_t GetListCount ( );
    void PutListCount ( const _variant_t & _val );
    _variant_t GetListFillRange ( );
    void PutListFillRange ( const _variant_t & _val );
    _variant_t GetListIndex ( );
    void PutListIndex ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetMultiSelect ( );
    void PutMultiSelect ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetSelected ( );
    void PutSelected ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020888-0000-0000-c000-000000000046"))
ListBoxes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetList,put=PutList))
    _variant_t List;
    __declspec(property(get=GetListFillRange,put=PutListFillRange))
    _variant_t ListFillRange;
    __declspec(property(get=GetListIndex,put=PutListIndex))
    _variant_t ListIndex;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetMultiSelect,put=PutMultiSelect))
    _variant_t MultiSelect;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetSelected,put=PutSelected))
    _variant_t Selected;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t AddItem (
        const _variant_t & Text,
        const _variant_t & Index = vtMissing );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t RemoveAllItems ( );
    _variant_t RemoveItem (
        const _variant_t & Index,
        const _variant_t & Count = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetList ( );
    void PutList ( const _variant_t & _val );
    _variant_t GetListFillRange ( );
    void PutListFillRange ( const _variant_t & _val );
    _variant_t GetListIndex ( );
    void PutListIndex ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetMultiSelect ( );
    void PutMultiSelect ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetSelected ( );
    void PutSelected ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020889-0000-0000-c000-000000000046"))
GroupBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002088a-0000-0000-c000-000000000046"))
GroupBoxes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002088b-0000-0000-c000-000000000046"))
DropDown : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetDropDownLines,put=PutDropDownLines))
    _variant_t DropDownLines;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetLinkedObject,put=PutLinkedObject))
    _variant_t LinkedObject;
    __declspec(property(get=GetList,put=PutList))
    _variant_t List;
    __declspec(property(get=GetListCount,put=PutListCount))
    _variant_t ListCount;
    __declspec(property(get=GetListFillRange,put=PutListFillRange))
    _variant_t ListFillRange;
    __declspec(property(get=GetListIndex,put=PutListIndex))
    _variant_t ListIndex;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetSelected,put=PutSelected))
    _variant_t Selected;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t AddItem (
        const _variant_t & Text,
        const _variant_t & Index = vtMissing );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t RemoveAllItems ( );
    _variant_t RemoveItem (
        const _variant_t & Index,
        const _variant_t & Count = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetDropDownLines ( );
    void PutDropDownLines ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetLinkedObject ( );
    void PutLinkedObject ( const _variant_t & _val );
    _variant_t GetList ( );
    void PutList ( const _variant_t & _val );
    _variant_t GetListCount ( );
    void PutListCount ( const _variant_t & _val );
    _variant_t GetListFillRange ( );
    void PutListFillRange ( const _variant_t & _val );
    _variant_t GetListIndex ( );
    void PutListIndex ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetSelected ( );
    void PutSelected ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002088c-0000-0000-c000-000000000046"))
DropDowns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDisplay3DShading,put=PutDisplay3DShading))
    _variant_t Display3DShading;
    __declspec(property(get=GetDropDownLines,put=PutDropDownLines))
    _variant_t DropDownLines;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLinkedCell,put=PutLinkedCell))
    _variant_t LinkedCell;
    __declspec(property(get=GetList,put=PutList))
    _variant_t List;
    __declspec(property(get=GetListFillRange,put=PutListFillRange))
    _variant_t ListFillRange;
    __declspec(property(get=GetListIndex,put=PutListIndex))
    _variant_t ListIndex;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetSelected,put=PutSelected))
    _variant_t Selected;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height,
        const _variant_t & Editable = vtMissing );
    _variant_t AddItem (
        const _variant_t & Text,
        const _variant_t & Index = vtMissing );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t RemoveAllItems ( );
    _variant_t RemoveItem (
        const _variant_t & Index,
        const _variant_t & Count = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDisplay3DShading ( );
    void PutDisplay3DShading ( const _variant_t & _val );
    _variant_t GetDropDownLines ( );
    void PutDropDownLines ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLinkedCell ( );
    void PutLinkedCell ( const _variant_t & _val );
    _variant_t GetList ( );
    void PutList ( const _variant_t & _val );
    _variant_t GetListFillRange ( );
    void PutListFillRange ( const _variant_t & _val );
    _variant_t GetListIndex ( );
    void PutListIndex ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetSelected ( );
    void PutSelected ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("0002088f-0000-0000-c000-000000000046"))
DialogFrame : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );

    // Properties:
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
};

struct __declspec(uuid("00020890-0000-0000-c000-000000000046"))
Label : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetBottomRightCell,put=PutBottomRightCell))
    _variant_t BottomRightCell;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetTopLeftCell,put=PutTopLeftCell))
    _variant_t TopLeftCell;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetBottomRightCell ( );
    void PutBottomRightCell ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetTopLeftCell ( );
    void PutTopLeftCell ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020891-0000-0000-c000-000000000046"))
Labels : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _variant_t Accelerator;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    _variant_t Enabled;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetLocked,put=PutLocked))
    _variant_t Locked;
    __declspec(property(get=GetLockedText,put=PutLockedText))
    _variant_t LockedText;
    __declspec(property(get=GetOnAction,put=PutOnAction))
    _variant_t OnAction;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPhoneticAccelerator,put=PutPhoneticAccelerator))
    _variant_t PhoneticAccelerator;
    __declspec(property(get=GetPlacement,put=PutPlacement))
    _variant_t Placement;
    __declspec(property(get=GetPrintObject,put=PutPrintObject))
    _variant_t PrintObject;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;
    __declspec(property(get=GetZOrder,put=PutZOrder))
    _variant_t ZOrder;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Left,
        const _variant_t & Top,
        const _variant_t & Width,
        const _variant_t & Height );
    _variant_t Application ( );
    _variant_t BringToFront ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy ( );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing );
    _variant_t Cut ( );
    _variant_t Delete ( );
    _variant_t Duplicate ( );
    _variant_t Group ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SendToBack ( );

    // Properties:
    _variant_t GetAccelerator ( );
    void PutAccelerator ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnabled ( );
    void PutEnabled ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetLocked ( );
    void PutLocked ( const _variant_t & _val );
    _variant_t GetLockedText ( );
    void PutLockedText ( const _variant_t & _val );
    _variant_t GetOnAction ( );
    void PutOnAction ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPhoneticAccelerator ( );
    void PutPhoneticAccelerator ( const _variant_t & _val );
    _variant_t GetPlacement ( );
    void PutPlacement ( const _variant_t & _val );
    _variant_t GetPrintObject ( );
    void PutPrintObject ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
    _variant_t GetZOrder ( );
    void PutZOrder ( const _variant_t & _val );
};

struct __declspec(uuid("00020870-0000-0000-c000-000000000046"))
Interior : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetColor,put=PutColor))
    _variant_t Color;
    __declspec(property(get=GetColorIndex,put=PutColorIndex))
    _variant_t ColorIndex;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPattern,put=PutPattern))
    _variant_t Pattern;
    __declspec(property(get=GetPatternColor,put=PutPatternColor))
    _variant_t PatternColor;
    __declspec(property(get=GetPatternColorIndex,put=PutPatternColorIndex))
    _variant_t PatternColorIndex;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );

    // Properties:
    _variant_t GetColor ( );
    void PutColor ( const _variant_t & _val );
    _variant_t GetColorIndex ( );
    void PutColorIndex ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPattern ( );
    void PutPattern ( const _variant_t & _val );
    _variant_t GetPatternColor ( );
    void PutPatternColor ( const _variant_t & _val );
    _variant_t GetPatternColorIndex ( );
    void PutPatternColorIndex ( const _variant_t & _val );
};

struct __declspec(uuid("0002087b-0000-0000-c000-000000000046"))
SoundNote : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Import (
        const _variant_t & Filename );
    _variant_t Play ( );
    _variant_t Record ( );

    // Properties:
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020878-0000-0000-c000-000000000046"))
Characters : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Insert (
        const _variant_t & String );

    // Properties:
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
};

struct __declspec(uuid("0002087a-0000-0000-c000-000000000046"))
Dialog : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Show (
        const _variant_t & Arg1 = vtMissing,
        const _variant_t & Arg2 = vtMissing,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );

    // Properties:
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020879-0000-0000-c000-000000000046"))
Dialogs : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208ab-0000-0000-c000-000000000046"))
Outline : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAutomaticStyles,put=PutAutomaticStyles))
    _variant_t AutomaticStyles;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetSummaryColumn,put=PutSummaryColumn))
    _variant_t SummaryColumn;
    __declspec(property(get=GetSummaryRow,put=PutSummaryRow))
    _variant_t SummaryRow;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t ShowLevels (
        const _variant_t & RowLevels = vtMissing,
        const _variant_t & ColumnLevels = vtMissing );

    // Properties:
    _variant_t GetAutomaticStyles ( );
    void PutAutomaticStyles ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetSummaryColumn ( );
    void PutSummaryColumn ( const _variant_t & _val );
    _variant_t GetSummaryRow ( );
    void PutSummaryRow ( const _variant_t & _val );
};

struct __declspec(uuid("000208aa-0000-0000-c000-000000000046"))
RoutingSlip : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDelivery,put=PutDelivery))
    _variant_t Delivery;
    __declspec(property(get=GetMessage,put=PutMessage))
    _variant_t Message;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetRecipients,put=PutRecipients))
    _variant_t Recipients;
    __declspec(property(get=GetReturnWhenDone,put=PutReturnWhenDone))
    _variant_t ReturnWhenDone;
    __declspec(property(get=GetStatus,put=PutStatus))
    _variant_t Status;
    __declspec(property(get=GetSubject,put=PutSubject))
    _variant_t Subject;
    __declspec(property(get=GetTrackStatus,put=PutTrackStatus))
    _variant_t TrackStatus;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Reset ( );

    // Properties:
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDelivery ( );
    void PutDelivery ( const _variant_t & _val );
    _variant_t GetMessage ( );
    void PutMessage ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetRecipients ( );
    void PutRecipients ( const _variant_t & _val );
    _variant_t GetReturnWhenDone ( );
    void PutReturnWhenDone ( const _variant_t & _val );
    _variant_t GetStatus ( );
    void PutStatus ( const _variant_t & _val );
    _variant_t GetSubject ( );
    void PutSubject ( const _variant_t & _val );
    _variant_t GetTrackStatus ( );
    void PutTrackStatus ( const _variant_t & _val );
};

struct __declspec(uuid("000209ad-0000-0000-c000-000000000046"))
Module : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNext,put=PutNext))
    _variant_t Next;
    __declspec(property(get=GetOnDoubleClick,put=PutOnDoubleClick))
    _variant_t OnDoubleClick;
    __declspec(property(get=GetOnSheetActivate,put=PutOnSheetActivate))
    _variant_t OnSheetActivate;
    __declspec(property(get=GetOnSheetDeactivate,put=PutOnSheetDeactivate))
    _variant_t OnSheetDeactivate;
    __declspec(property(get=GetPageSetup,put=PutPageSetup))
    _variant_t PageSetup;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPrevious,put=PutPrevious))
    _variant_t Previous;
    __declspec(property(get=GetProtectContents,put=PutProtectContents))
    _variant_t ProtectContents;
    __declspec(property(get=GetProtectionMode,put=PutProtectionMode))
    _variant_t ProtectionMode;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Activate ( );
    _variant_t Application ( );
    _variant_t Copy (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t Delete ( );
    _variant_t InsertFile (
        const _variant_t & Filename,
        const _variant_t & Merge = vtMissing );
    _variant_t Move (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t Protect (
        const _variant_t & Password = vtMissing,
        const _variant_t & DrawingObjects = vtMissing,
        const _variant_t & Contents = vtMissing,
        const _variant_t & Scenarios = vtMissing,
        const _variant_t & UserInterfaceOnly = vtMissing );
    _variant_t SaveAs (
        const _variant_t & Filename,
        const _variant_t & FileFormat = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & WriteResPassword = vtMissing,
        const _variant_t & ReadOnlyRecommended = vtMissing,
        const _variant_t & CreateBackup = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t Unprotect (
        const _variant_t & Password = vtMissing );

    // Properties:
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNext ( );
    void PutNext ( const _variant_t & _val );
    _variant_t GetOnDoubleClick ( );
    void PutOnDoubleClick ( const _variant_t & _val );
    _variant_t GetOnSheetActivate ( );
    void PutOnSheetActivate ( const _variant_t & _val );
    _variant_t GetOnSheetDeactivate ( );
    void PutOnSheetDeactivate ( const _variant_t & _val );
    _variant_t GetPageSetup ( );
    void PutPageSetup ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPrevious ( );
    void PutPrevious ( const _variant_t & _val );
    _variant_t GetProtectContents ( );
    void PutProtectContents ( const _variant_t & _val );
    _variant_t GetProtectionMode ( );
    void PutProtectionMode ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
};

struct __declspec(uuid("000209ae-0000-0000-c000-000000000046"))
Modules : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing,
        const _variant_t & Count = vtMissing );
    _variant_t Application ( );
    _variant_t Copy (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t Delete ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Move (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
};

struct __declspec(uuid("000209af-0000-0000-c000-000000000046"))
DialogSheet : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDefaultButton,put=PutDefaultButton))
    _variant_t DefaultButton;
    __declspec(property(get=GetDialogFrame,put=PutDialogFrame))
    _variant_t DialogFrame;
    __declspec(property(get=GetDisplayAutomaticPageBreaks,put=PutDisplayAutomaticPageBreaks))
    _variant_t DisplayAutomaticPageBreaks;
    __declspec(property(get=GetEnableAutoFilter,put=PutEnableAutoFilter))
    _variant_t EnableAutoFilter;
    __declspec(property(get=GetEnableOutlining,put=PutEnableOutlining))
    _variant_t EnableOutlining;
    __declspec(property(get=GetEnablePivotTable,put=PutEnablePivotTable))
    _variant_t EnablePivotTable;
    __declspec(property(get=GetFocus,put=PutFocus))
    _variant_t Focus;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNext,put=PutNext))
    _variant_t Next;
    __declspec(property(get=GetOnDoubleClick,put=PutOnDoubleClick))
    _variant_t OnDoubleClick;
    __declspec(property(get=GetOnSheetActivate,put=PutOnSheetActivate))
    _variant_t OnSheetActivate;
    __declspec(property(get=GetOnSheetDeactivate,put=PutOnSheetDeactivate))
    _variant_t OnSheetDeactivate;
    __declspec(property(get=GetPageSetup,put=PutPageSetup))
    _variant_t PageSetup;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPrevious,put=PutPrevious))
    _variant_t Previous;
    __declspec(property(get=GetProtectContents,put=PutProtectContents))
    _variant_t ProtectContents;
    __declspec(property(get=GetProtectDrawingObjects,put=PutProtectDrawingObjects))
    _variant_t ProtectDrawingObjects;
    __declspec(property(get=GetProtectionMode,put=PutProtectionMode))
    _variant_t ProtectionMode;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Activate ( );
    _variant_t Application ( );
    _variant_t Arcs (
        const _variant_t & Index = vtMissing );
    _variant_t Buttons (
        const _variant_t & Index = vtMissing );
    _variant_t ChartObjects (
        const _variant_t & Index = vtMissing );
    _variant_t CheckBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t Copy (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t Delete ( );
    _variant_t DrawingObjects (
        const _variant_t & Index = vtMissing );
    _variant_t Drawings (
        const _variant_t & Index = vtMissing );
    _variant_t DropDowns (
        const _variant_t & Index = vtMissing );
    _variant_t EditBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t _Evaluate (
        const _variant_t & Name );
    _variant_t Evaluate (
        const _variant_t & Name );
    _variant_t GroupBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t GroupObjects (
        const _variant_t & Index = vtMissing );
    _variant_t Hide (
        const _variant_t & Cancel = vtMissing );
    _variant_t Labels (
        const _variant_t & Index = vtMissing );
    _variant_t Lines (
        const _variant_t & Index = vtMissing );
    _variant_t ListBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t Move (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t Names (
        const _variant_t & Index = vtMissing,
        const _variant_t & IndexLocal = vtMissing,
        const _variant_t & RefersTo = vtMissing );
    _variant_t OLEObjects (
        const _variant_t & Index = vtMissing );
    _variant_t OptionButtons (
        const _variant_t & Index = vtMissing );
    _variant_t Ovals (
        const _variant_t & Index = vtMissing );
    _variant_t Paste (
        const _variant_t & Destination = vtMissing,
        const _variant_t & Link = vtMissing );
    _variant_t PasteSpecial (
        const _variant_t & Format = vtMissing,
        const _variant_t & Link = vtMissing,
        const _variant_t & DisplayAsIcon = vtMissing,
        const _variant_t & IconFileName = vtMissing,
        const _variant_t & IconIndex = vtMissing,
        const _variant_t & IconLabel = vtMissing );
    _variant_t Pictures (
        const _variant_t & Index = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t PrintPreview ( );
    _variant_t Protect (
        const _variant_t & Password = vtMissing,
        const _variant_t & DrawingObjects = vtMissing,
        const _variant_t & Contents = vtMissing,
        const _variant_t & Scenarios = vtMissing,
        const _variant_t & UserInterfaceOnly = vtMissing );
    _variant_t Rectangles (
        const _variant_t & Index = vtMissing );
    _variant_t SaveAs (
        const _variant_t & Filename,
        const _variant_t & FileFormat = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & WriteResPassword = vtMissing,
        const _variant_t & ReadOnlyRecommended = vtMissing,
        const _variant_t & CreateBackup = vtMissing );
    _variant_t ScrollBars (
        const _variant_t & Index = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t Show ( );
    _variant_t Spinners (
        const _variant_t & Index = vtMissing );
    _variant_t TextBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t Unprotect (
        const _variant_t & Password = vtMissing );

    // Properties:
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDefaultButton ( );
    void PutDefaultButton ( const _variant_t & _val );
    _variant_t GetDialogFrame ( );
    void PutDialogFrame ( const _variant_t & _val );
    _variant_t GetDisplayAutomaticPageBreaks ( );
    void PutDisplayAutomaticPageBreaks ( const _variant_t & _val );
    _variant_t GetEnableAutoFilter ( );
    void PutEnableAutoFilter ( const _variant_t & _val );
    _variant_t GetEnableOutlining ( );
    void PutEnableOutlining ( const _variant_t & _val );
    _variant_t GetEnablePivotTable ( );
    void PutEnablePivotTable ( const _variant_t & _val );
    _variant_t GetFocus ( );
    void PutFocus ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNext ( );
    void PutNext ( const _variant_t & _val );
    _variant_t GetOnDoubleClick ( );
    void PutOnDoubleClick ( const _variant_t & _val );
    _variant_t GetOnSheetActivate ( );
    void PutOnSheetActivate ( const _variant_t & _val );
    _variant_t GetOnSheetDeactivate ( );
    void PutOnSheetDeactivate ( const _variant_t & _val );
    _variant_t GetPageSetup ( );
    void PutPageSetup ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPrevious ( );
    void PutPrevious ( const _variant_t & _val );
    _variant_t GetProtectContents ( );
    void PutProtectContents ( const _variant_t & _val );
    _variant_t GetProtectDrawingObjects ( );
    void PutProtectDrawingObjects ( const _variant_t & _val );
    _variant_t GetProtectionMode ( );
    void PutProtectionMode ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
};

struct __declspec(uuid("000209b0-0000-0000-c000-000000000046"))
DialogSheets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing,
        const _variant_t & Count = vtMissing );
    _variant_t Application ( );
    _variant_t Copy (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t Delete ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Move (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t PrintPreview ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
};

struct __declspec(uuid("000208b4-0000-0000-c000-000000000046"))
PageSetup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBlackAndWhite,put=PutBlackAndWhite))
    _variant_t BlackAndWhite;
    __declspec(property(get=GetBottomMargin,put=PutBottomMargin))
    _variant_t BottomMargin;
    __declspec(property(get=GetCenterFooter,put=PutCenterFooter))
    _variant_t CenterFooter;
    __declspec(property(get=GetCenterHeader,put=PutCenterHeader))
    _variant_t CenterHeader;
    __declspec(property(get=GetCenterHorizontally,put=PutCenterHorizontally))
    _variant_t CenterHorizontally;
    __declspec(property(get=GetCenterVertically,put=PutCenterVertically))
    _variant_t CenterVertically;
    __declspec(property(get=GetChartSize,put=PutChartSize))
    _variant_t ChartSize;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDraft,put=PutDraft))
    _variant_t Draft;
    __declspec(property(get=GetFirstPageNumber,put=PutFirstPageNumber))
    _variant_t FirstPageNumber;
    __declspec(property(get=GetFitToPagesTall,put=PutFitToPagesTall))
    _variant_t FitToPagesTall;
    __declspec(property(get=GetFitToPagesWide,put=PutFitToPagesWide))
    _variant_t FitToPagesWide;
    __declspec(property(get=GetFooterMargin,put=PutFooterMargin))
    _variant_t FooterMargin;
    __declspec(property(get=GetHeaderMargin,put=PutHeaderMargin))
    _variant_t HeaderMargin;
    __declspec(property(get=GetLeftFooter,put=PutLeftFooter))
    _variant_t LeftFooter;
    __declspec(property(get=GetLeftHeader,put=PutLeftHeader))
    _variant_t LeftHeader;
    __declspec(property(get=GetLeftMargin,put=PutLeftMargin))
    _variant_t LeftMargin;
    __declspec(property(get=GetOrder,put=PutOrder))
    _variant_t Order;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetPaperSize,put=PutPaperSize))
    _variant_t PaperSize;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPrintArea,put=PutPrintArea))
    _variant_t PrintArea;
    __declspec(property(get=GetPrintGridlines,put=PutPrintGridlines))
    _variant_t PrintGridlines;
    __declspec(property(get=GetPrintHeadings,put=PutPrintHeadings))
    _variant_t PrintHeadings;
    __declspec(property(get=GetPrintNotes,put=PutPrintNotes))
    _variant_t PrintNotes;
    __declspec(property(get=GetPrintQuality,put=PutPrintQuality))
    _variant_t PrintQuality;
    __declspec(property(get=GetPrintTitleColumns,put=PutPrintTitleColumns))
    _variant_t PrintTitleColumns;
    __declspec(property(get=GetPrintTitleRows,put=PutPrintTitleRows))
    _variant_t PrintTitleRows;
    __declspec(property(get=GetRightFooter,put=PutRightFooter))
    _variant_t RightFooter;
    __declspec(property(get=GetRightHeader,put=PutRightHeader))
    _variant_t RightHeader;
    __declspec(property(get=GetRightMargin,put=PutRightMargin))
    _variant_t RightMargin;
    __declspec(property(get=GetTopMargin,put=PutTopMargin))
    _variant_t TopMargin;
    __declspec(property(get=GetZoom,put=PutZoom))
    _variant_t Zoom;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );

    // Properties:
    _variant_t GetBlackAndWhite ( );
    void PutBlackAndWhite ( const _variant_t & _val );
    _variant_t GetBottomMargin ( );
    void PutBottomMargin ( const _variant_t & _val );
    _variant_t GetCenterFooter ( );
    void PutCenterFooter ( const _variant_t & _val );
    _variant_t GetCenterHeader ( );
    void PutCenterHeader ( const _variant_t & _val );
    _variant_t GetCenterHorizontally ( );
    void PutCenterHorizontally ( const _variant_t & _val );
    _variant_t GetCenterVertically ( );
    void PutCenterVertically ( const _variant_t & _val );
    _variant_t GetChartSize ( );
    void PutChartSize ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDraft ( );
    void PutDraft ( const _variant_t & _val );
    _variant_t GetFirstPageNumber ( );
    void PutFirstPageNumber ( const _variant_t & _val );
    _variant_t GetFitToPagesTall ( );
    void PutFitToPagesTall ( const _variant_t & _val );
    _variant_t GetFitToPagesWide ( );
    void PutFitToPagesWide ( const _variant_t & _val );
    _variant_t GetFooterMargin ( );
    void PutFooterMargin ( const _variant_t & _val );
    _variant_t GetHeaderMargin ( );
    void PutHeaderMargin ( const _variant_t & _val );
    _variant_t GetLeftFooter ( );
    void PutLeftFooter ( const _variant_t & _val );
    _variant_t GetLeftHeader ( );
    void PutLeftHeader ( const _variant_t & _val );
    _variant_t GetLeftMargin ( );
    void PutLeftMargin ( const _variant_t & _val );
    _variant_t GetOrder ( );
    void PutOrder ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetPaperSize ( );
    void PutPaperSize ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPrintArea ( );
    void PutPrintArea ( const _variant_t & _val );
    _variant_t GetPrintGridlines ( );
    void PutPrintGridlines ( const _variant_t & _val );
    _variant_t GetPrintHeadings ( );
    void PutPrintHeadings ( const _variant_t & _val );
    _variant_t GetPrintNotes ( );
    void PutPrintNotes ( const _variant_t & _val );
    _variant_t GetPrintQuality ( );
    void PutPrintQuality ( const _variant_t & _val );
    _variant_t GetPrintTitleColumns ( );
    void PutPrintTitleColumns ( const _variant_t & _val );
    _variant_t GetPrintTitleRows ( );
    void PutPrintTitleRows ( const _variant_t & _val );
    _variant_t GetRightFooter ( );
    void PutRightFooter ( const _variant_t & _val );
    _variant_t GetRightHeader ( );
    void PutRightHeader ( const _variant_t & _val );
    _variant_t GetRightMargin ( );
    void PutRightMargin ( const _variant_t & _val );
    _variant_t GetTopMargin ( );
    void PutTopMargin ( const _variant_t & _val );
    _variant_t GetZoom ( );
    void PutZoom ( const _variant_t & _val );
};

struct __declspec(uuid("000208d1-0000-0000-c000-000000000046"))
Mailer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBCCRecipients,put=PutBCCRecipients))
    _variant_t BCCRecipients;
    __declspec(property(get=GetCCRecipients,put=PutCCRecipients))
    _variant_t CCRecipients;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEnclosures,put=PutEnclosures))
    _variant_t Enclosures;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetReceived,put=PutReceived))
    _variant_t Received;
    __declspec(property(get=GetSendDateTime,put=PutSendDateTime))
    _variant_t SendDateTime;
    __declspec(property(get=GetSender,put=PutSender))
    _variant_t Sender;
    __declspec(property(get=GetSubject,put=PutSubject))
    _variant_t Subject;
    __declspec(property(get=GetToRecipients,put=PutToRecipients))
    _variant_t ToRecipients;
    __declspec(property(get=GetWhichAddress,put=PutWhichAddress))
    _variant_t WhichAddress;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );

    // Properties:
    _variant_t GetBCCRecipients ( );
    void PutBCCRecipients ( const _variant_t & _val );
    _variant_t GetCCRecipients ( );
    void PutCCRecipients ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEnclosures ( );
    void PutEnclosures ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetReceived ( );
    void PutReceived ( const _variant_t & _val );
    _variant_t GetSendDateTime ( );
    void PutSendDateTime ( const _variant_t & _val );
    _variant_t GetSender ( );
    void PutSender ( const _variant_t & _val );
    _variant_t GetSubject ( );
    void PutSubject ( const _variant_t & _val );
    _variant_t GetToRecipients ( );
    void PutToRecipients ( const _variant_t & _val );
    _variant_t GetWhichAddress ( );
    void PutWhichAddress ( const _variant_t & _val );
};

struct __declspec(uuid("0002084d-0000-0000-c000-000000000046"))
Font : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBackground,put=PutBackground))
    _variant_t Background;
    __declspec(property(get=GetBold,put=PutBold))
    _variant_t Bold;
    __declspec(property(get=GetColor,put=PutColor))
    _variant_t Color;
    __declspec(property(get=GetColorIndex,put=PutColorIndex))
    _variant_t ColorIndex;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFontStyle,put=PutFontStyle))
    _variant_t FontStyle;
    __declspec(property(get=GetItalic,put=PutItalic))
    _variant_t Italic;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOutlineFont,put=PutOutlineFont))
    _variant_t OutlineFont;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetSize,put=PutSize))
    _variant_t Size;
    __declspec(property(get=GetStrikethrough,put=PutStrikethrough))
    _variant_t Strikethrough;
    __declspec(property(get=GetSubscript,put=PutSubscript))
    _variant_t Subscript;
    __declspec(property(get=GetSuperscript,put=PutSuperscript))
    _variant_t Superscript;
    __declspec(property(get=GetUnderline,put=PutUnderline))
    _variant_t Underline;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );

    // Properties:
    _variant_t GetBackground ( );
    void PutBackground ( const _variant_t & _val );
    _variant_t GetBold ( );
    void PutBold ( const _variant_t & _val );
    _variant_t GetColor ( );
    void PutColor ( const _variant_t & _val );
    _variant_t GetColorIndex ( );
    void PutColorIndex ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFontStyle ( );
    void PutFontStyle ( const _variant_t & _val );
    _variant_t GetItalic ( );
    void PutItalic ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOutlineFont ( );
    void PutOutlineFont ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetSize ( );
    void PutSize ( const _variant_t & _val );
    _variant_t GetStrikethrough ( );
    void PutStrikethrough ( const _variant_t & _val );
    _variant_t GetSubscript ( );
    void PutSubscript ( const _variant_t & _val );
    _variant_t GetSuperscript ( );
    void PutSuperscript ( const _variant_t & _val );
    _variant_t GetUnderline ( );
    void PutUnderline ( const _variant_t & _val );
};

struct __declspec(uuid("00020854-0000-0000-c000-000000000046"))
Border : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetColor,put=PutColor))
    _variant_t Color;
    __declspec(property(get=GetColorIndex,put=PutColorIndex))
    _variant_t ColorIndex;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetLineStyle,put=PutLineStyle))
    _variant_t LineStyle;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetWeight,put=PutWeight))
    _variant_t Weight;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );

    // Properties:
    _variant_t GetColor ( );
    void PutColor ( const _variant_t & _val );
    _variant_t GetColorIndex ( );
    void PutColorIndex ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetLineStyle ( );
    void PutLineStyle ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetWeight ( );
    void PutWeight ( const _variant_t & _val );
};

struct __declspec(uuid("00020855-0000-0000-c000-000000000046"))
Borders : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetColor,put=PutColor))
    _variant_t Color;
    __declspec(property(get=GetColorIndex,put=PutColorIndex))
    _variant_t ColorIndex;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetLineStyle,put=PutLineStyle))
    _variant_t LineStyle;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetWeight,put=PutWeight))
    _variant_t Weight;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetColor ( );
    void PutColor ( const _variant_t & _val );
    _variant_t GetColorIndex ( );
    void PutColorIndex ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetLineStyle ( );
    void PutLineStyle ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetValue ( );
    void PutValue ( const _variant_t & _val );
    _variant_t GetWeight ( );
    void PutWeight ( const _variant_t & _val );
};

struct __declspec(uuid("000208c0-0000-0000-c000-000000000046"))
Corners : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208c1-0000-0000-c000-000000000046"))
SeriesLines : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208c2-0000-0000-c000-000000000046"))
HiLoLines : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208c3-0000-0000-c000-000000000046"))
Gridlines : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208c4-0000-0000-c000-000000000046"))
DropLines : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208ce-0000-0000-c000-000000000046"))
ErrorBars : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetEndStyle,put=PutEndStyle))
    _variant_t EndStyle;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t ClearFormats ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetEndStyle ( );
    void PutEndStyle ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208c5-0000-0000-c000-000000000046"))
UpBars : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208c6-0000-0000-c000-000000000046"))
DownBars : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020849-0000-0000-c000-000000000046"))
ChartTitle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
};

struct __declspec(uuid("0002084a-0000-0000-c000-000000000046"))
AxisTitle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
};

struct __declspec(uuid("000208c7-0000-0000-c000-000000000046"))
Floor : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t ClearFormats ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208c8-0000-0000-c000-000000000046"))
Walls : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t ClearFormats ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208cb-0000-0000-c000-000000000046"))
PlotArea : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t ClearFormats ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
};

struct __declspec(uuid("000208cc-0000-0000-c000-000000000046"))
ChartArea : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Clear ( );
    _variant_t ClearContents ( );
    _variant_t ClearFormats ( );
    _variant_t Copy ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
};

struct __declspec(uuid("000208cd-0000-0000-c000-000000000046"))
Legend : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetHeight,put=PutHeight))
    _variant_t Height;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPosition,put=PutPosition))
    _variant_t Position;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    _variant_t Width;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t LegendEntries (
        const _variant_t & Index = vtMissing );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetHeight ( );
    void PutHeight ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPosition ( );
    void PutPosition ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetWidth ( );
    void PutWidth ( const _variant_t & _val );
};

struct __declspec(uuid("000208c9-0000-0000-c000-000000000046"))
TickLabels : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNumberFormat,put=PutNumberFormat))
    _variant_t NumberFormat;
    __declspec(property(get=GetNumberFormatLinked,put=PutNumberFormatLinked))
    _variant_t NumberFormatLinked;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNumberFormat ( );
    void PutNumberFormat ( const _variant_t & _val );
    _variant_t GetNumberFormatLinked ( );
    void PutNumberFormatLinked ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020847-0000-0000-c000-000000000046"))
Chart : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetArea3DGroup,put=PutArea3DGroup))
    _variant_t Area3DGroup;
    __declspec(property(get=GetAutoScaling,put=PutAutoScaling))
    _variant_t AutoScaling;
    __declspec(property(get=GetBar3DGroup,put=PutBar3DGroup))
    _variant_t Bar3DGroup;
    __declspec(property(get=GetChartArea,put=PutChartArea))
    _variant_t ChartArea;
    __declspec(property(get=GetChartTitle,put=PutChartTitle))
    _variant_t ChartTitle;
    __declspec(property(get=GetColumn3DGroup,put=PutColumn3DGroup))
    _variant_t Column3DGroup;
    __declspec(property(get=GetCorners,put=PutCorners))
    _variant_t Corners;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDepthPercent,put=PutDepthPercent))
    _variant_t DepthPercent;
    __declspec(property(get=GetDisplayBlanksAs,put=PutDisplayBlanksAs))
    _variant_t DisplayBlanksAs;
    __declspec(property(get=GetElevation,put=PutElevation))
    _variant_t Elevation;
    __declspec(property(get=GetFloor,put=PutFloor))
    _variant_t Floor;
    __declspec(property(get=GetGapDepth,put=PutGapDepth))
    _variant_t GapDepth;
    __declspec(property(get=GetHasAxis,put=PutHasAxis))
    _variant_t HasAxis;
    __declspec(property(get=GetHasLegend,put=PutHasLegend))
    _variant_t HasLegend;
    __declspec(property(get=GetHasTitle,put=PutHasTitle))
    _variant_t HasTitle;
    __declspec(property(get=GetHeightPercent,put=PutHeightPercent))
    _variant_t HeightPercent;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLegend,put=PutLegend))
    _variant_t Legend;
    __declspec(property(get=GetLine3DGroup,put=PutLine3DGroup))
    _variant_t Line3DGroup;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNext,put=PutNext))
    _variant_t Next;
    __declspec(property(get=GetOnDoubleClick,put=PutOnDoubleClick))
    _variant_t OnDoubleClick;
    __declspec(property(get=GetOnSheetActivate,put=PutOnSheetActivate))
    _variant_t OnSheetActivate;
    __declspec(property(get=GetOnSheetDeactivate,put=PutOnSheetDeactivate))
    _variant_t OnSheetDeactivate;
    __declspec(property(get=GetPageSetup,put=PutPageSetup))
    _variant_t PageSetup;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPerspective,put=PutPerspective))
    _variant_t Perspective;
    __declspec(property(get=GetPie3DGroup,put=PutPie3DGroup))
    _variant_t Pie3DGroup;
    __declspec(property(get=GetPlotArea,put=PutPlotArea))
    _variant_t PlotArea;
    __declspec(property(get=GetPlotVisibleOnly,put=PutPlotVisibleOnly))
    _variant_t PlotVisibleOnly;
    __declspec(property(get=GetPrevious,put=PutPrevious))
    _variant_t Previous;
    __declspec(property(get=GetProtectContents,put=PutProtectContents))
    _variant_t ProtectContents;
    __declspec(property(get=GetProtectDrawingObjects,put=PutProtectDrawingObjects))
    _variant_t ProtectDrawingObjects;
    __declspec(property(get=GetProtectionMode,put=PutProtectionMode))
    _variant_t ProtectionMode;
    __declspec(property(get=GetRightAngleAxes,put=PutRightAngleAxes))
    _variant_t RightAngleAxes;
    __declspec(property(get=GetRotation,put=PutRotation))
    _variant_t Rotation;
    __declspec(property(get=GetSizeWithWindow,put=PutSizeWithWindow))
    _variant_t SizeWithWindow;
    __declspec(property(get=GetSubType,put=PutSubType))
    _variant_t SubType;
    __declspec(property(get=GetSurfaceGroup,put=PutSurfaceGroup))
    _variant_t SurfaceGroup;
    __declspec(property(get=GetType,put=PutType))
    _variant_t Type;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;
    __declspec(property(get=GetWalls,put=PutWalls))
    _variant_t Walls;
    __declspec(property(get=GetWallsAndGridlines2D,put=PutWallsAndGridlines2D))
    _variant_t WallsAndGridlines2D;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Activate ( );
    _variant_t Application ( );
    _variant_t ApplyDataLabels (
        const _variant_t & Type = vtMissing,
        const _variant_t & LegendKey = vtMissing );
    _variant_t Arcs (
        const _variant_t & Index = vtMissing );
    _variant_t AreaGroups (
        const _variant_t & Index = vtMissing );
    _variant_t AutoFormat (
        const _variant_t & Gallery,
        const _variant_t & Format = vtMissing );
    _variant_t Axes (
        const _variant_t & Type = vtMissing,
        const _variant_t & AxisGroup = vtMissing );
    _variant_t BarGroups (
        const _variant_t & Index = vtMissing );
    _variant_t Buttons (
        const _variant_t & Index = vtMissing );
    _variant_t ChartGroups (
        const _variant_t & Index = vtMissing );
    _variant_t ChartObjects (
        const _variant_t & Index = vtMissing );
    _variant_t ChartWizard (
        const _variant_t & Source = vtMissing,
        const _variant_t & Gallery = vtMissing,
        const _variant_t & Format = vtMissing,
        const _variant_t & PlotBy = vtMissing,
        const _variant_t & CategoryLabels = vtMissing,
        const _variant_t & SeriesLabels = vtMissing,
        const _variant_t & HasLegend = vtMissing,
        const _variant_t & Title = vtMissing,
        const _variant_t & CategoryTitle = vtMissing,
        const _variant_t & ValueTitle = vtMissing,
        const _variant_t & ExtraTitle = vtMissing );
    _variant_t CheckBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t CheckSpelling (
        const _variant_t & CustomDictionary = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing );
    _variant_t ColumnGroups (
        const _variant_t & Index = vtMissing );
    _variant_t Copy (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t CopyPicture (
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Format = vtMissing,
        const _variant_t & Size = vtMissing );
    _variant_t CreatePublisher (
        const _variant_t & Edition = vtMissing,
        const _variant_t & Appearance = vtMissing,
        const _variant_t & Size = vtMissing,
        const _variant_t & ContainsPICT = vtMissing,
        const _variant_t & ContainsBIFF = vtMissing,
        const _variant_t & ContainsRTF = vtMissing,
        const _variant_t & ContainsVALU = vtMissing );
    _variant_t Delete ( );
    _variant_t Deselect ( );
    _variant_t DoughnutGroups (
        const _variant_t & Index = vtMissing );
    _variant_t DrawingObjects (
        const _variant_t & Index = vtMissing );
    _variant_t Drawings (
        const _variant_t & Index = vtMissing );
    _variant_t DropDowns (
        const _variant_t & Index = vtMissing );
    _variant_t _Evaluate (
        const _variant_t & Name );
    _variant_t Evaluate (
        const _variant_t & Name );
    _variant_t GroupBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t GroupObjects (
        const _variant_t & Index = vtMissing );
    _variant_t Labels (
        const _variant_t & Index = vtMissing );
    _variant_t LineGroups (
        const _variant_t & Index = vtMissing );
    _variant_t Lines (
        const _variant_t & Index = vtMissing );
    _variant_t ListBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t Move (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t OLEObjects (
        const _variant_t & Index = vtMissing );
    _variant_t OptionButtons (
        const _variant_t & Index = vtMissing );
    _variant_t Ovals (
        const _variant_t & Index = vtMissing );
    _variant_t Paste (
        const _variant_t & Type = vtMissing );
    _variant_t Pictures (
        const _variant_t & Index = vtMissing );
    _variant_t PieGroups (
        const _variant_t & Index = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t PrintPreview ( );
    _variant_t Protect (
        const _variant_t & Password = vtMissing,
        const _variant_t & DrawingObjects = vtMissing,
        const _variant_t & Contents = vtMissing,
        const _variant_t & Scenarios = vtMissing,
        const _variant_t & UserInterfaceOnly = vtMissing );
    _variant_t RadarGroups (
        const _variant_t & Index = vtMissing );
    _variant_t Rectangles (
        const _variant_t & Index = vtMissing );
    _variant_t SaveAs (
        const _variant_t & Filename,
        const _variant_t & FileFormat = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & WriteResPassword = vtMissing,
        const _variant_t & ReadOnlyRecommended = vtMissing,
        const _variant_t & CreateBackup = vtMissing );
    _variant_t ScrollBars (
        const _variant_t & Index = vtMissing );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );
    _variant_t SeriesCollection (
        const _variant_t & Index = vtMissing );
    _variant_t SetBackgroundPicture (
        const _variant_t & Filename = vtMissing );
    _variant_t Spinners (
        const _variant_t & Index = vtMissing );
    _variant_t TextBoxes (
        const _variant_t & Index = vtMissing );
    _variant_t Unprotect (
        const _variant_t & Password = vtMissing );
    _variant_t XYGroups (
        const _variant_t & Index = vtMissing );

    // Properties:
    _variant_t GetArea3DGroup ( );
    void PutArea3DGroup ( const _variant_t & _val );
    _variant_t GetAutoScaling ( );
    void PutAutoScaling ( const _variant_t & _val );
    _variant_t GetBar3DGroup ( );
    void PutBar3DGroup ( const _variant_t & _val );
    _variant_t GetChartArea ( );
    void PutChartArea ( const _variant_t & _val );
    _variant_t GetChartTitle ( );
    void PutChartTitle ( const _variant_t & _val );
    _variant_t GetColumn3DGroup ( );
    void PutColumn3DGroup ( const _variant_t & _val );
    _variant_t GetCorners ( );
    void PutCorners ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDepthPercent ( );
    void PutDepthPercent ( const _variant_t & _val );
    _variant_t GetDisplayBlanksAs ( );
    void PutDisplayBlanksAs ( const _variant_t & _val );
    _variant_t GetElevation ( );
    void PutElevation ( const _variant_t & _val );
    _variant_t GetFloor ( );
    void PutFloor ( const _variant_t & _val );
    _variant_t GetGapDepth ( );
    void PutGapDepth ( const _variant_t & _val );
    _variant_t GetHasAxis ( );
    void PutHasAxis ( const _variant_t & _val );
    _variant_t GetHasLegend ( );
    void PutHasLegend ( const _variant_t & _val );
    _variant_t GetHasTitle ( );
    void PutHasTitle ( const _variant_t & _val );
    _variant_t GetHeightPercent ( );
    void PutHeightPercent ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLegend ( );
    void PutLegend ( const _variant_t & _val );
    _variant_t GetLine3DGroup ( );
    void PutLine3DGroup ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNext ( );
    void PutNext ( const _variant_t & _val );
    _variant_t GetOnDoubleClick ( );
    void PutOnDoubleClick ( const _variant_t & _val );
    _variant_t GetOnSheetActivate ( );
    void PutOnSheetActivate ( const _variant_t & _val );
    _variant_t GetOnSheetDeactivate ( );
    void PutOnSheetDeactivate ( const _variant_t & _val );
    _variant_t GetPageSetup ( );
    void PutPageSetup ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPerspective ( );
    void PutPerspective ( const _variant_t & _val );
    _variant_t GetPie3DGroup ( );
    void PutPie3DGroup ( const _variant_t & _val );
    _variant_t GetPlotArea ( );
    void PutPlotArea ( const _variant_t & _val );
    _variant_t GetPlotVisibleOnly ( );
    void PutPlotVisibleOnly ( const _variant_t & _val );
    _variant_t GetPrevious ( );
    void PutPrevious ( const _variant_t & _val );
    _variant_t GetProtectContents ( );
    void PutProtectContents ( const _variant_t & _val );
    _variant_t GetProtectDrawingObjects ( );
    void PutProtectDrawingObjects ( const _variant_t & _val );
    _variant_t GetProtectionMode ( );
    void PutProtectionMode ( const _variant_t & _val );
    _variant_t GetRightAngleAxes ( );
    void PutRightAngleAxes ( const _variant_t & _val );
    _variant_t GetRotation ( );
    void PutRotation ( const _variant_t & _val );
    _variant_t GetSizeWithWindow ( );
    void PutSizeWithWindow ( const _variant_t & _val );
    _variant_t GetSubType ( );
    void PutSubType ( const _variant_t & _val );
    _variant_t GetSurfaceGroup ( );
    void PutSurfaceGroup ( const _variant_t & _val );
    _variant_t GetType ( );
    void PutType ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
    _variant_t GetWalls ( );
    void PutWalls ( const _variant_t & _val );
    _variant_t GetWallsAndGridlines2D ( );
    void PutWallsAndGridlines2D ( const _variant_t & _val );
};

struct __declspec(uuid("0002086d-0000-0000-c000-000000000046"))
Charts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetVisible,put=PutVisible))
    _variant_t Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing,
        const _variant_t & Count = vtMissing );
    _variant_t Application ( );
    _variant_t Copy (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t Delete ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Move (
        const _variant_t & Before = vtMissing,
        const _variant_t & After = vtMissing );
    _variant_t PrintOut (
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & ActivePrinter = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & Collate = vtMissing );
    _variant_t PrintPreview ( );
    _variant_t Select (
        const _variant_t & Replace = vtMissing );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetVisible ( );
    void PutVisible ( const _variant_t & _val );
};

struct __declspec(uuid("00020859-0000-0000-c000-000000000046"))
ChartGroup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAxisGroup,put=PutAxisGroup))
    _variant_t AxisGroup;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDoughnutHoleSize,put=PutDoughnutHoleSize))
    _variant_t DoughnutHoleSize;
    __declspec(property(get=GetDownBars,put=PutDownBars))
    _variant_t DownBars;
    __declspec(property(get=GetDropLines,put=PutDropLines))
    _variant_t DropLines;
    __declspec(property(get=GetFirstSliceAngle,put=PutFirstSliceAngle))
    _variant_t FirstSliceAngle;
    __declspec(property(get=GetGapWidth,put=PutGapWidth))
    _variant_t GapWidth;
    __declspec(property(get=GetHasDropLines,put=PutHasDropLines))
    _variant_t HasDropLines;
    __declspec(property(get=GetHasHiLoLines,put=PutHasHiLoLines))
    _variant_t HasHiLoLines;
    __declspec(property(get=GetHasRadarAxisLabels,put=PutHasRadarAxisLabels))
    _variant_t HasRadarAxisLabels;
    __declspec(property(get=GetHasSeriesLines,put=PutHasSeriesLines))
    _variant_t HasSeriesLines;
    __declspec(property(get=GetHasUpDownBars,put=PutHasUpDownBars))
    _variant_t HasUpDownBars;
    __declspec(property(get=GetHiLoLines,put=PutHiLoLines))
    _variant_t HiLoLines;
    __declspec(property(get=GetOverlap,put=PutOverlap))
    _variant_t Overlap;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetRadarAxisLabels,put=PutRadarAxisLabels))
    _variant_t RadarAxisLabels;
    __declspec(property(get=GetSeriesLines,put=PutSeriesLines))
    _variant_t SeriesLines;
    __declspec(property(get=GetSubType,put=PutSubType))
    _variant_t SubType;
    __declspec(property(get=GetType,put=PutType))
    _variant_t Type;
    __declspec(property(get=GetUpBars,put=PutUpBars))
    _variant_t UpBars;
    __declspec(property(get=GetVaryByCategories,put=PutVaryByCategories))
    _variant_t VaryByCategories;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t SeriesCollection (
        const _variant_t & Index = vtMissing );

    // Properties:
    _variant_t GetAxisGroup ( );
    void PutAxisGroup ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDoughnutHoleSize ( );
    void PutDoughnutHoleSize ( const _variant_t & _val );
    _variant_t GetDownBars ( );
    void PutDownBars ( const _variant_t & _val );
    _variant_t GetDropLines ( );
    void PutDropLines ( const _variant_t & _val );
    _variant_t GetFirstSliceAngle ( );
    void PutFirstSliceAngle ( const _variant_t & _val );
    _variant_t GetGapWidth ( );
    void PutGapWidth ( const _variant_t & _val );
    _variant_t GetHasDropLines ( );
    void PutHasDropLines ( const _variant_t & _val );
    _variant_t GetHasHiLoLines ( );
    void PutHasHiLoLines ( const _variant_t & _val );
    _variant_t GetHasRadarAxisLabels ( );
    void PutHasRadarAxisLabels ( const _variant_t & _val );
    _variant_t GetHasSeriesLines ( );
    void PutHasSeriesLines ( const _variant_t & _val );
    _variant_t GetHasUpDownBars ( );
    void PutHasUpDownBars ( const _variant_t & _val );
    _variant_t GetHiLoLines ( );
    void PutHiLoLines ( const _variant_t & _val );
    _variant_t GetOverlap ( );
    void PutOverlap ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetRadarAxisLabels ( );
    void PutRadarAxisLabels ( const _variant_t & _val );
    _variant_t GetSeriesLines ( );
    void PutSeriesLines ( const _variant_t & _val );
    _variant_t GetSubType ( );
    void PutSubType ( const _variant_t & _val );
    _variant_t GetType ( );
    void PutType ( const _variant_t & _val );
    _variant_t GetUpBars ( );
    void PutUpBars ( const _variant_t & _val );
    _variant_t GetVaryByCategories ( );
    void PutVaryByCategories ( const _variant_t & _val );
};

struct __declspec(uuid("0002085a-0000-0000-c000-000000000046"))
ChartGroups : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020848-0000-0000-c000-000000000046"))
Axis : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAxisBetweenCategories,put=PutAxisBetweenCategories))
    _variant_t AxisBetweenCategories;
    __declspec(property(get=GetAxisGroup,put=PutAxisGroup))
    _variant_t AxisGroup;
    __declspec(property(get=GetAxisTitle,put=PutAxisTitle))
    _variant_t AxisTitle;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCategoryNames,put=PutCategoryNames))
    _variant_t CategoryNames;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetCrosses,put=PutCrosses))
    _variant_t Crosses;
    __declspec(property(get=GetCrossesAt,put=PutCrossesAt))
    _variant_t CrossesAt;
    __declspec(property(get=GetHasMajorGridlines,put=PutHasMajorGridlines))
    _variant_t HasMajorGridlines;
    __declspec(property(get=GetHasMinorGridlines,put=PutHasMinorGridlines))
    _variant_t HasMinorGridlines;
    __declspec(property(get=GetHasTitle,put=PutHasTitle))
    _variant_t HasTitle;
    __declspec(property(get=GetMajorGridlines,put=PutMajorGridlines))
    _variant_t MajorGridlines;
    __declspec(property(get=GetMajorTickMark,put=PutMajorTickMark))
    _variant_t MajorTickMark;
    __declspec(property(get=GetMajorUnit,put=PutMajorUnit))
    _variant_t MajorUnit;
    __declspec(property(get=GetMajorUnitIsAuto,put=PutMajorUnitIsAuto))
    _variant_t MajorUnitIsAuto;
    __declspec(property(get=GetMaximumScale,put=PutMaximumScale))
    _variant_t MaximumScale;
    __declspec(property(get=GetMaximumScaleIsAuto,put=PutMaximumScaleIsAuto))
    _variant_t MaximumScaleIsAuto;
    __declspec(property(get=GetMinimumScale,put=PutMinimumScale))
    _variant_t MinimumScale;
    __declspec(property(get=GetMinimumScaleIsAuto,put=PutMinimumScaleIsAuto))
    _variant_t MinimumScaleIsAuto;
    __declspec(property(get=GetMinorGridlines,put=PutMinorGridlines))
    _variant_t MinorGridlines;
    __declspec(property(get=GetMinorTickMark,put=PutMinorTickMark))
    _variant_t MinorTickMark;
    __declspec(property(get=GetMinorUnit,put=PutMinorUnit))
    _variant_t MinorUnit;
    __declspec(property(get=GetMinorUnitIsAuto,put=PutMinorUnitIsAuto))
    _variant_t MinorUnitIsAuto;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetReversePlotOrder,put=PutReversePlotOrder))
    _variant_t ReversePlotOrder;
    __declspec(property(get=GetScaleType,put=PutScaleType))
    _variant_t ScaleType;
    __declspec(property(get=GetTickLabelPosition,put=PutTickLabelPosition))
    _variant_t TickLabelPosition;
    __declspec(property(get=GetTickLabels,put=PutTickLabels))
    _variant_t TickLabels;
    __declspec(property(get=GetTickLabelSpacing,put=PutTickLabelSpacing))
    _variant_t TickLabelSpacing;
    __declspec(property(get=GetTickMarkSpacing,put=PutTickMarkSpacing))
    _variant_t TickMarkSpacing;
    __declspec(property(get=GetType,put=PutType))
    _variant_t Type;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetAxisBetweenCategories ( );
    void PutAxisBetweenCategories ( const _variant_t & _val );
    _variant_t GetAxisGroup ( );
    void PutAxisGroup ( const _variant_t & _val );
    _variant_t GetAxisTitle ( );
    void PutAxisTitle ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCategoryNames ( );
    void PutCategoryNames ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetCrosses ( );
    void PutCrosses ( const _variant_t & _val );
    _variant_t GetCrossesAt ( );
    void PutCrossesAt ( const _variant_t & _val );
    _variant_t GetHasMajorGridlines ( );
    void PutHasMajorGridlines ( const _variant_t & _val );
    _variant_t GetHasMinorGridlines ( );
    void PutHasMinorGridlines ( const _variant_t & _val );
    _variant_t GetHasTitle ( );
    void PutHasTitle ( const _variant_t & _val );
    _variant_t GetMajorGridlines ( );
    void PutMajorGridlines ( const _variant_t & _val );
    _variant_t GetMajorTickMark ( );
    void PutMajorTickMark ( const _variant_t & _val );
    _variant_t GetMajorUnit ( );
    void PutMajorUnit ( const _variant_t & _val );
    _variant_t GetMajorUnitIsAuto ( );
    void PutMajorUnitIsAuto ( const _variant_t & _val );
    _variant_t GetMaximumScale ( );
    void PutMaximumScale ( const _variant_t & _val );
    _variant_t GetMaximumScaleIsAuto ( );
    void PutMaximumScaleIsAuto ( const _variant_t & _val );
    _variant_t GetMinimumScale ( );
    void PutMinimumScale ( const _variant_t & _val );
    _variant_t GetMinimumScaleIsAuto ( );
    void PutMinimumScaleIsAuto ( const _variant_t & _val );
    _variant_t GetMinorGridlines ( );
    void PutMinorGridlines ( const _variant_t & _val );
    _variant_t GetMinorTickMark ( );
    void PutMinorTickMark ( const _variant_t & _val );
    _variant_t GetMinorUnit ( );
    void PutMinorUnit ( const _variant_t & _val );
    _variant_t GetMinorUnitIsAuto ( );
    void PutMinorUnitIsAuto ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetReversePlotOrder ( );
    void PutReversePlotOrder ( const _variant_t & _val );
    _variant_t GetScaleType ( );
    void PutScaleType ( const _variant_t & _val );
    _variant_t GetTickLabelPosition ( );
    void PutTickLabelPosition ( const _variant_t & _val );
    _variant_t GetTickLabels ( );
    void PutTickLabels ( const _variant_t & _val );
    _variant_t GetTickLabelSpacing ( );
    void PutTickLabelSpacing ( const _variant_t & _val );
    _variant_t GetTickMarkSpacing ( );
    void PutTickMarkSpacing ( const _variant_t & _val );
    _variant_t GetType ( );
    void PutType ( const _variant_t & _val );
};

struct __declspec(uuid("0002085b-0000-0000-c000-000000000046"))
Axes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Type,
        const _variant_t & AxisGroup = vtMissing );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208b2-0000-0000-c000-000000000046"))
DataLabel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAutoText,put=PutAutoText))
    _variant_t AutoText;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCaption,put=PutCaption))
    _variant_t Caption;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetLeft,put=PutLeft))
    _variant_t Left;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNumberFormat,put=PutNumberFormat))
    _variant_t NumberFormat;
    __declspec(property(get=GetNumberFormatLinked,put=PutNumberFormatLinked))
    _variant_t NumberFormatLinked;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetShowLegendKey,put=PutShowLegendKey))
    _variant_t ShowLegendKey;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetTop,put=PutTop))
    _variant_t Top;
    __declspec(property(get=GetType,put=PutType))
    _variant_t Type;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Characters (
        const _variant_t & Start = vtMissing,
        const _variant_t & Length = vtMissing );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetAutoText ( );
    void PutAutoText ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCaption ( );
    void PutCaption ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetLeft ( );
    void PutLeft ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNumberFormat ( );
    void PutNumberFormat ( const _variant_t & _val );
    _variant_t GetNumberFormatLinked ( );
    void PutNumberFormatLinked ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetShowLegendKey ( );
    void PutShowLegendKey ( const _variant_t & _val );
    _variant_t GetText ( );
    void PutText ( const _variant_t & _val );
    _variant_t GetTop ( );
    void PutTop ( const _variant_t & _val );
    _variant_t GetType ( );
    void PutType ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
};

struct __declspec(uuid("000208b3-0000-0000-c000-000000000046"))
DataLabels : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAutoText,put=PutAutoText))
    _variant_t AutoText;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    _variant_t HorizontalAlignment;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNumberFormat,put=PutNumberFormat))
    _variant_t NumberFormat;
    __declspec(property(get=GetNumberFormatLinked,put=PutNumberFormatLinked))
    _variant_t NumberFormatLinked;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    _variant_t Orientation;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetShadow,put=PutShadow))
    _variant_t Shadow;
    __declspec(property(get=GetShowLegendKey,put=PutShowLegendKey))
    _variant_t ShowLegendKey;
    __declspec(property(get=GetType,put=PutType))
    _variant_t Type;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    _variant_t VerticalAlignment;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Select ( );

    // Properties:
    _variant_t GetAutoText ( );
    void PutAutoText ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetHorizontalAlignment ( );
    void PutHorizontalAlignment ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNumberFormat ( );
    void PutNumberFormat ( const _variant_t & _val );
    _variant_t GetNumberFormatLinked ( );
    void PutNumberFormatLinked ( const _variant_t & _val );
    _variant_t GetOrientation ( );
    void PutOrientation ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetShadow ( );
    void PutShadow ( const _variant_t & _val );
    _variant_t GetShowLegendKey ( );
    void PutShowLegendKey ( const _variant_t & _val );
    _variant_t GetType ( );
    void PutType ( const _variant_t & _val );
    _variant_t GetVerticalAlignment ( );
    void PutVerticalAlignment ( const _variant_t & _val );
};

struct __declspec(uuid("0002086a-0000-0000-c000-000000000046"))
Point : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDataLabel,put=PutDataLabel))
    _variant_t DataLabel;
    __declspec(property(get=GetExplosion,put=PutExplosion))
    _variant_t Explosion;
    __declspec(property(get=GetHasDataLabel,put=PutHasDataLabel))
    _variant_t HasDataLabel;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetInvertIfNegative,put=PutInvertIfNegative))
    _variant_t InvertIfNegative;
    __declspec(property(get=GetMarkerBackgroundColor,put=PutMarkerBackgroundColor))
    _variant_t MarkerBackgroundColor;
    __declspec(property(get=GetMarkerBackgroundColorIndex,put=PutMarkerBackgroundColorIndex))
    _variant_t MarkerBackgroundColorIndex;
    __declspec(property(get=GetMarkerForegroundColor,put=PutMarkerForegroundColor))
    _variant_t MarkerForegroundColor;
    __declspec(property(get=GetMarkerForegroundColorIndex,put=PutMarkerForegroundColorIndex))
    _variant_t MarkerForegroundColorIndex;
    __declspec(property(get=GetMarkerStyle,put=PutMarkerStyle))
    _variant_t MarkerStyle;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPictureType,put=PutPictureType))
    _variant_t PictureType;
    __declspec(property(get=GetPictureUnit,put=PutPictureUnit))
    _variant_t PictureUnit;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t ApplyDataLabels (
        const _variant_t & Type = vtMissing,
        const _variant_t & LegendKey = vtMissing );
    _variant_t ClearFormats ( );
    _variant_t Copy ( );
    _variant_t Delete ( );
    _variant_t Paste ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDataLabel ( );
    void PutDataLabel ( const _variant_t & _val );
    _variant_t GetExplosion ( );
    void PutExplosion ( const _variant_t & _val );
    _variant_t GetHasDataLabel ( );
    void PutHasDataLabel ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetInvertIfNegative ( );
    void PutInvertIfNegative ( const _variant_t & _val );
    _variant_t GetMarkerBackgroundColor ( );
    void PutMarkerBackgroundColor ( const _variant_t & _val );
    _variant_t GetMarkerBackgroundColorIndex ( );
    void PutMarkerBackgroundColorIndex ( const _variant_t & _val );
    _variant_t GetMarkerForegroundColor ( );
    void PutMarkerForegroundColor ( const _variant_t & _val );
    _variant_t GetMarkerForegroundColorIndex ( );
    void PutMarkerForegroundColorIndex ( const _variant_t & _val );
    _variant_t GetMarkerStyle ( );
    void PutMarkerStyle ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPictureType ( );
    void PutPictureType ( const _variant_t & _val );
    _variant_t GetPictureUnit ( );
    void PutPictureUnit ( const _variant_t & _val );
};

struct __declspec(uuid("00020869-0000-0000-c000-000000000046"))
Points : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("0002086b-0000-0000-c000-000000000046"))
Series : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAxisGroup,put=PutAxisGroup))
    _variant_t AxisGroup;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetErrorBars,put=PutErrorBars))
    _variant_t ErrorBars;
    __declspec(property(get=GetExplosion,put=PutExplosion))
    _variant_t Explosion;
    __declspec(property(get=GetFormula,put=PutFormula))
    _variant_t Formula;
    __declspec(property(get=GetFormulaLocal,put=PutFormulaLocal))
    _variant_t FormulaLocal;
    __declspec(property(get=GetFormulaR1C1,put=PutFormulaR1C1))
    _variant_t FormulaR1C1;
    __declspec(property(get=GetFormulaR1C1Local,put=PutFormulaR1C1Local))
    _variant_t FormulaR1C1Local;
    __declspec(property(get=GetHasDataLabels,put=PutHasDataLabels))
    _variant_t HasDataLabels;
    __declspec(property(get=GetHasErrorBars,put=PutHasErrorBars))
    _variant_t HasErrorBars;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetInvertIfNegative,put=PutInvertIfNegative))
    _variant_t InvertIfNegative;
    __declspec(property(get=GetMarkerBackgroundColor,put=PutMarkerBackgroundColor))
    _variant_t MarkerBackgroundColor;
    __declspec(property(get=GetMarkerBackgroundColorIndex,put=PutMarkerBackgroundColorIndex))
    _variant_t MarkerBackgroundColorIndex;
    __declspec(property(get=GetMarkerForegroundColor,put=PutMarkerForegroundColor))
    _variant_t MarkerForegroundColor;
    __declspec(property(get=GetMarkerForegroundColorIndex,put=PutMarkerForegroundColorIndex))
    _variant_t MarkerForegroundColorIndex;
    __declspec(property(get=GetMarkerStyle,put=PutMarkerStyle))
    _variant_t MarkerStyle;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPictureType,put=PutPictureType))
    _variant_t PictureType;
    __declspec(property(get=GetPictureUnit,put=PutPictureUnit))
    _variant_t PictureUnit;
    __declspec(property(get=GetPlotOrder,put=PutPlotOrder))
    _variant_t PlotOrder;
    __declspec(property(get=GetSmooth,put=PutSmooth))
    _variant_t Smooth;
    __declspec(property(get=GetType,put=PutType))
    _variant_t Type;
    __declspec(property(get=GetValues,put=PutValues))
    _variant_t Values;
    __declspec(property(get=GetXValues,put=PutXValues))
    _variant_t XValues;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t ApplyDataLabels (
        const _variant_t & Type = vtMissing,
        const _variant_t & LegendKey = vtMissing );
    _variant_t ClearFormats ( );
    _variant_t Copy ( );
    _variant_t DataLabels (
        const _variant_t & Index = vtMissing );
    _variant_t Delete ( );
    _variant_t ErrorBar (
        const _variant_t & Direction,
        const _variant_t & Include,
        const _variant_t & Type,
        const _variant_t & Amount = vtMissing,
        const _variant_t & MinusValues = vtMissing );
    _variant_t Paste ( );
    _variant_t Points (
        const _variant_t & Index = vtMissing );
    _variant_t Select ( );
    _variant_t Trendlines (
        const _variant_t & Index = vtMissing );

    // Properties:
    _variant_t GetAxisGroup ( );
    void PutAxisGroup ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetErrorBars ( );
    void PutErrorBars ( const _variant_t & _val );
    _variant_t GetExplosion ( );
    void PutExplosion ( const _variant_t & _val );
    _variant_t GetFormula ( );
    void PutFormula ( const _variant_t & _val );
    _variant_t GetFormulaLocal ( );
    void PutFormulaLocal ( const _variant_t & _val );
    _variant_t GetFormulaR1C1 ( );
    void PutFormulaR1C1 ( const _variant_t & _val );
    _variant_t GetFormulaR1C1Local ( );
    void PutFormulaR1C1Local ( const _variant_t & _val );
    _variant_t GetHasDataLabels ( );
    void PutHasDataLabels ( const _variant_t & _val );
    _variant_t GetHasErrorBars ( );
    void PutHasErrorBars ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetInvertIfNegative ( );
    void PutInvertIfNegative ( const _variant_t & _val );
    _variant_t GetMarkerBackgroundColor ( );
    void PutMarkerBackgroundColor ( const _variant_t & _val );
    _variant_t GetMarkerBackgroundColorIndex ( );
    void PutMarkerBackgroundColorIndex ( const _variant_t & _val );
    _variant_t GetMarkerForegroundColor ( );
    void PutMarkerForegroundColor ( const _variant_t & _val );
    _variant_t GetMarkerForegroundColorIndex ( );
    void PutMarkerForegroundColorIndex ( const _variant_t & _val );
    _variant_t GetMarkerStyle ( );
    void PutMarkerStyle ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPictureType ( );
    void PutPictureType ( const _variant_t & _val );
    _variant_t GetPictureUnit ( );
    void PutPictureUnit ( const _variant_t & _val );
    _variant_t GetPlotOrder ( );
    void PutPlotOrder ( const _variant_t & _val );
    _variant_t GetSmooth ( );
    void PutSmooth ( const _variant_t & _val );
    _variant_t GetType ( );
    void PutType ( const _variant_t & _val );
    _variant_t GetValues ( );
    void PutValues ( const _variant_t & _val );
    _variant_t GetXValues ( );
    void PutXValues ( const _variant_t & _val );
};

struct __declspec(uuid("0002086c-0000-0000-c000-000000000046"))
SeriesCollection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Source,
        const _variant_t & Rowcol = vtMissing,
        const _variant_t & SeriesLabels = vtMissing,
        const _variant_t & CategoryLabels = vtMissing,
        const _variant_t & Replace = vtMissing );
    _variant_t Application ( );
    _variant_t Extend (
        const _variant_t & Source,
        const _variant_t & Rowcol = vtMissing,
        const _variant_t & CategoryLabels = vtMissing );
    _variant_t Item (
        const _variant_t & Index );
    _variant_t Paste (
        const _variant_t & Rowcol = vtMissing,
        const _variant_t & SeriesLabels = vtMissing,
        const _variant_t & CategoryLabels = vtMissing,
        const _variant_t & Replace = vtMissing,
        const _variant_t & NewSeries = vtMissing );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208ba-0000-0000-c000-000000000046"))
LegendEntry : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetFont,put=PutFont))
    _variant_t Font;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetLegendKey,put=PutLegendKey))
    _variant_t LegendKey;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetFont ( );
    void PutFont ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetLegendKey ( );
    void PutLegendKey ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208bb-0000-0000-c000-000000000046"))
LegendEntries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("000208bc-0000-0000-c000-000000000046"))
LegendKey : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetInterior,put=PutInterior))
    _variant_t Interior;
    __declspec(property(get=GetInvertIfNegative,put=PutInvertIfNegative))
    _variant_t InvertIfNegative;
    __declspec(property(get=GetMarkerBackgroundColor,put=PutMarkerBackgroundColor))
    _variant_t MarkerBackgroundColor;
    __declspec(property(get=GetMarkerBackgroundColorIndex,put=PutMarkerBackgroundColorIndex))
    _variant_t MarkerBackgroundColorIndex;
    __declspec(property(get=GetMarkerForegroundColor,put=PutMarkerForegroundColor))
    _variant_t MarkerForegroundColor;
    __declspec(property(get=GetMarkerForegroundColorIndex,put=PutMarkerForegroundColorIndex))
    _variant_t MarkerForegroundColorIndex;
    __declspec(property(get=GetMarkerStyle,put=PutMarkerStyle))
    _variant_t MarkerStyle;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetSmooth,put=PutSmooth))
    _variant_t Smooth;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t ClearFormats ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetInterior ( );
    void PutInterior ( const _variant_t & _val );
    _variant_t GetInvertIfNegative ( );
    void PutInvertIfNegative ( const _variant_t & _val );
    _variant_t GetMarkerBackgroundColor ( );
    void PutMarkerBackgroundColor ( const _variant_t & _val );
    _variant_t GetMarkerBackgroundColorIndex ( );
    void PutMarkerBackgroundColorIndex ( const _variant_t & _val );
    _variant_t GetMarkerForegroundColor ( );
    void PutMarkerForegroundColor ( const _variant_t & _val );
    _variant_t GetMarkerForegroundColorIndex ( );
    void PutMarkerForegroundColorIndex ( const _variant_t & _val );
    _variant_t GetMarkerStyle ( );
    void PutMarkerStyle ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetSmooth ( );
    void PutSmooth ( const _variant_t & _val );
};

struct __declspec(uuid("000208be-0000-0000-c000-000000000046"))
Trendline : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBackward,put=PutBackward))
    _variant_t Backward;
    __declspec(property(get=GetBorder,put=PutBorder))
    _variant_t Border;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetDataLabel,put=PutDataLabel))
    _variant_t DataLabel;
    __declspec(property(get=GetDisplayEquation,put=PutDisplayEquation))
    _variant_t DisplayEquation;
    __declspec(property(get=GetDisplayRSquared,put=PutDisplayRSquared))
    _variant_t DisplayRSquared;
    __declspec(property(get=GetForward,put=PutForward))
    _variant_t Forward;
    __declspec(property(get=GetIndex,put=PutIndex))
    _variant_t Index;
    __declspec(property(get=GetIntercept,put=PutIntercept))
    _variant_t Intercept;
    __declspec(property(get=GetInterceptIsAuto,put=PutInterceptIsAuto))
    _variant_t InterceptIsAuto;
    __declspec(property(get=GetName,put=PutName))
    _variant_t Name;
    __declspec(property(get=GetNameIsAuto,put=PutNameIsAuto))
    _variant_t NameIsAuto;
    __declspec(property(get=GetOrder,put=PutOrder))
    _variant_t Order;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetPeriod,put=PutPeriod))
    _variant_t Period;
    __declspec(property(get=GetType,put=PutType))
    _variant_t Type;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t Application ( );
    _variant_t ClearFormats ( );
    _variant_t Delete ( );
    _variant_t Select ( );

    // Properties:
    _variant_t GetBackward ( );
    void PutBackward ( const _variant_t & _val );
    _variant_t GetBorder ( );
    void PutBorder ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetDataLabel ( );
    void PutDataLabel ( const _variant_t & _val );
    _variant_t GetDisplayEquation ( );
    void PutDisplayEquation ( const _variant_t & _val );
    _variant_t GetDisplayRSquared ( );
    void PutDisplayRSquared ( const _variant_t & _val );
    _variant_t GetForward ( );
    void PutForward ( const _variant_t & _val );
    _variant_t GetIndex ( );
    void PutIndex ( const _variant_t & _val );
    _variant_t GetIntercept ( );
    void PutIntercept ( const _variant_t & _val );
    _variant_t GetInterceptIsAuto ( );
    void PutInterceptIsAuto ( const _variant_t & _val );
    _variant_t GetName ( );
    void PutName ( const _variant_t & _val );
    _variant_t GetNameIsAuto ( );
    void PutNameIsAuto ( const _variant_t & _val );
    _variant_t GetOrder ( );
    void PutOrder ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetPeriod ( );
    void PutPeriod ( const _variant_t & _val );
    _variant_t GetType ( );
    void PutType ( const _variant_t & _val );
};

struct __declspec(uuid("000208bd-0000-0000-c000-000000000046"))
Trendlines : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount,put=PutCount))
    _variant_t Count;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t _NewEnum ( );
    _variant_t Add (
        const _variant_t & Type = vtMissing,
        const _variant_t & Order = vtMissing,
        const _variant_t & Period = vtMissing,
        const _variant_t & Forward = vtMissing,
        const _variant_t & Backward = vtMissing,
        const _variant_t & Intercept = vtMissing,
        const _variant_t & DisplayEquation = vtMissing,
        const _variant_t & DisplayRSquared = vtMissing,
        const _variant_t & Name = vtMissing );
    _variant_t Application ( );
    _variant_t Item (
        const _variant_t & Index = vtMissing );

    // Properties:
    _variant_t GetCount ( );
    void PutCount ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
};

struct __declspec(uuid("00020812-0000-0000-c000-000000000046"))
_ExcelApplication;
    // [ default ] dispinterface _Global

struct __declspec(uuid("000208d4-0000-0000-c000-000000000046"))
AutoCorrect : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCapitalizeNamesOfDays,put=PutCapitalizeNamesOfDays))
    _variant_t CapitalizeNamesOfDays;
    __declspec(property(get=GetCreator,put=PutCreator))
    _variant_t Creator;
    __declspec(property(get=GetParent,put=PutParent))
    _variant_t Parent;
    __declspec(property(get=GetReplacementList,put=PutReplacementList))
    _variant_t ReplacementList;
    __declspec(property(get=GetReplaceText,put=PutReplaceText))
    _variant_t ReplaceText;
    __declspec(property(get=GetTwoInitialCapitals,put=PutTwoInitialCapitals))
    _variant_t TwoInitialCapitals;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _variant_t AddReplacement (
        const _variant_t & What,
        const _variant_t & Replacement );
    _variant_t Application ( );
    _variant_t DeleteReplacement (
        const _variant_t & What );

    // Properties:
    _variant_t GetCapitalizeNamesOfDays ( );
    void PutCapitalizeNamesOfDays ( const _variant_t & _val );
    _variant_t GetCreator ( );
    void PutCreator ( const _variant_t & _val );
    _variant_t GetParent ( );
    void PutParent ( const _variant_t & _val );
    _variant_t GetReplacementList ( );
    void PutReplacementList ( const _variant_t & _val );
    _variant_t GetReplaceText ( );
    void PutReplaceText ( const _variant_t & _val );
    _variant_t GetTwoInitialCapitals ( );
    void PutTwoInitialCapitals ( const _variant_t & _val );
};

struct __declspec(uuid("00020810-0000-0000-c000-000000000046"))
_ExcelSheet;
    // [ default ] dispinterface Worksheet

struct __declspec(uuid("00020811-0000-0000-c000-000000000046"))
_ExcelChart;
    // [ default ] dispinterface Chart

//
// Function implementation mapping
//

#pragma start_map_region("xl5en32.tli")
__declspec(implementation_key(1)) _variant_t _Global::AddIns ( const _variant_t & Index );
__declspec(implementation_key(2)) _variant_t _Global::Application ( );
__declspec(implementation_key(3)) _variant_t _Global::Calculate ( );
__declspec(implementation_key(4)) _variant_t _Global::Cells ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(5)) _variant_t _Global::Charts ( const _variant_t & Index );
__declspec(implementation_key(6)) _variant_t _Global::Columns ( const _variant_t & Index );
__declspec(implementation_key(7)) _variant_t _Global::DDEExecute ( const _variant_t & Channel, const _variant_t & String );
__declspec(implementation_key(8)) _variant_t _Global::DDEInitiate ( const _variant_t & App, const _variant_t & Topic );
__declspec(implementation_key(9)) _variant_t _Global::DDEPoke ( const _variant_t & Channel, const _variant_t & Item, const _variant_t & Data );
__declspec(implementation_key(10)) _variant_t _Global::DDERequest ( const _variant_t & Channel, const _variant_t & Item );
__declspec(implementation_key(11)) _variant_t _Global::DDETerminate ( const _variant_t & Channel );
__declspec(implementation_key(12)) _variant_t _Global::DialogSheets ( const _variant_t & Index );
__declspec(implementation_key(13)) _variant_t _Global::_Evaluate ( const _variant_t & Name );
__declspec(implementation_key(14)) _variant_t _Global::Evaluate ( const _variant_t & Name );
__declspec(implementation_key(15)) _variant_t _Global::Excel4IntlMacroSheets ( const _variant_t & Index );
__declspec(implementation_key(16)) _variant_t _Global::Excel4MacroSheets ( const _variant_t & Index );
__declspec(implementation_key(17)) _variant_t _Global::ExecuteExcel4Macro ( const _variant_t & String );
__declspec(implementation_key(18)) _variant_t _Global::Intersect ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(19)) _variant_t _Global::MenuBars ( const _variant_t & Index );
__declspec(implementation_key(20)) _variant_t _Global::Modules ( const _variant_t & Index );
__declspec(implementation_key(21)) _variant_t _Global::Names ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo );
__declspec(implementation_key(22)) _variant_t _Global::Range ( const _variant_t & Cell1, const _variant_t & Cell2 );
__declspec(implementation_key(23)) _variant_t _Global::Rows ( const _variant_t & Index );
__declspec(implementation_key(24)) _variant_t _Global::Run ( const _variant_t & Macro, const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(25)) _variant_t _Global::SendKeys ( const _variant_t & Keys, const _variant_t & Wait );
__declspec(implementation_key(26)) _variant_t _Global::Sheets ( const _variant_t & Index );
__declspec(implementation_key(27)) _variant_t _Global::ShortcutMenus ( const _variant_t & Index );
__declspec(implementation_key(28)) _variant_t _Global::Toolbars ( const _variant_t & Index );
__declspec(implementation_key(29)) _variant_t _Global::Union ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(30)) _variant_t _Global::Windows ( const _variant_t & Index );
__declspec(implementation_key(31)) _variant_t _Global::Workbooks ( const _variant_t & Index );
__declspec(implementation_key(32)) _variant_t _Global::Worksheets ( const _variant_t & Index );
__declspec(implementation_key(33)) _variant_t _Global::GetActiveCell ( );
__declspec(implementation_key(34)) void _Global::PutActiveCell ( const _variant_t & _val );
__declspec(implementation_key(35)) _variant_t _Global::GetActiveChart ( );
__declspec(implementation_key(36)) void _Global::PutActiveChart ( const _variant_t & _val );
__declspec(implementation_key(37)) _variant_t _Global::GetActiveDialog ( );
__declspec(implementation_key(38)) void _Global::PutActiveDialog ( const _variant_t & _val );
__declspec(implementation_key(39)) _variant_t _Global::GetActiveMenuBar ( );
__declspec(implementation_key(40)) void _Global::PutActiveMenuBar ( const _variant_t & _val );
__declspec(implementation_key(41)) _variant_t _Global::GetActivePrinter ( );
__declspec(implementation_key(42)) void _Global::PutActivePrinter ( const _variant_t & _val );
__declspec(implementation_key(43)) _variant_t _Global::GetActiveSheet ( );
__declspec(implementation_key(44)) void _Global::PutActiveSheet ( const _variant_t & _val );
__declspec(implementation_key(45)) _variant_t _Global::GetActiveWindow ( );
__declspec(implementation_key(46)) void _Global::PutActiveWindow ( const _variant_t & _val );
__declspec(implementation_key(47)) _variant_t _Global::GetActiveWorkbook ( );
__declspec(implementation_key(48)) void _Global::PutActiveWorkbook ( const _variant_t & _val );
__declspec(implementation_key(49)) _variant_t _Global::GetCreator ( );
__declspec(implementation_key(50)) void _Global::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(51)) _variant_t _Global::GetDDEAppReturnCode ( );
__declspec(implementation_key(52)) void _Global::PutDDEAppReturnCode ( const _variant_t & _val );
__declspec(implementation_key(53)) _variant_t _Global::GetParent ( );
__declspec(implementation_key(54)) void _Global::PutParent ( const _variant_t & _val );
__declspec(implementation_key(55)) _variant_t _Global::GetSelection ( );
__declspec(implementation_key(56)) void _Global::PutSelection ( const _variant_t & _val );
__declspec(implementation_key(57)) _variant_t _Global::GetThisWorkbook ( );
__declspec(implementation_key(58)) void _Global::PutThisWorkbook ( const _variant_t & _val );
__declspec(implementation_key(59)) _variant_t Application::_WSFunction ( const _variant_t & Range, const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(60)) _variant_t Application::Acos ( );
__declspec(implementation_key(61)) _variant_t Application::Acosh ( );
__declspec(implementation_key(62)) _variant_t Application::ActivateMicrosoftApp ( const _variant_t & Index );
__declspec(implementation_key(63)) _variant_t Application::AddChartAutoFormat ( const _variant_t & Chart, const _variant_t & Name, const _variant_t & Description );
__declspec(implementation_key(64)) _variant_t Application::AddCustomList ( const _variant_t & ListArray, const _variant_t & ByRow );
__declspec(implementation_key(65)) _variant_t Application::AddIns ( const _variant_t & Index );
__declspec(implementation_key(66)) _variant_t Application::And ( );
__declspec(implementation_key(67)) _variant_t Application::_Application ( );
__declspec(implementation_key(68)) _variant_t Application::Asin ( );
__declspec(implementation_key(69)) _variant_t Application::Asinh ( );
__declspec(implementation_key(70)) _variant_t Application::Atan2 ( );
__declspec(implementation_key(71)) _variant_t Application::Atanh ( );
__declspec(implementation_key(72)) _variant_t Application::AveDev ( );
__declspec(implementation_key(73)) _variant_t Application::Average ( );
__declspec(implementation_key(74)) _variant_t Application::BetaDist ( );
__declspec(implementation_key(75)) _variant_t Application::BetaInv ( );
__declspec(implementation_key(76)) _variant_t Application::BinomDist ( );
__declspec(implementation_key(77)) _variant_t Application::Calculate ( );
__declspec(implementation_key(78)) _variant_t Application::Ceiling ( );
__declspec(implementation_key(79)) _variant_t Application::Cells ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(80)) _variant_t Application::CentimetersToPoints ( const _variant_t & Centimeters );
__declspec(implementation_key(81)) _variant_t Application::Charts ( const _variant_t & Index );
__declspec(implementation_key(82)) _variant_t Application::CheckSpelling ( const _variant_t & Word, const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase );
__declspec(implementation_key(83)) _variant_t Application::ChiDist ( );
__declspec(implementation_key(84)) _variant_t Application::ChiInv ( );
__declspec(implementation_key(85)) _variant_t Application::ChiTest ( );
__declspec(implementation_key(86)) _variant_t Application::Choose ( );
__declspec(implementation_key(87)) _variant_t Application::Clean ( );
__declspec(implementation_key(88)) _variant_t Application::Columns ( const _variant_t & Index );
__declspec(implementation_key(89)) _variant_t Application::Combin ( );
__declspec(implementation_key(90)) _variant_t Application::Confidence ( );
__declspec(implementation_key(91)) _variant_t Application::ConvertFormula ( const _variant_t & Formula, const _variant_t & FromReferenceStyle, const _variant_t & ToReferenceStyle, const _variant_t & ToAbsolute, const _variant_t & RelativeTo );
__declspec(implementation_key(92)) _variant_t Application::Correl ( );
__declspec(implementation_key(93)) _variant_t Application::Cosh ( );
__declspec(implementation_key(94)) _variant_t Application::Count ( );
__declspec(implementation_key(95)) _variant_t Application::CountA ( );
__declspec(implementation_key(96)) _variant_t Application::CountBlank ( );
__declspec(implementation_key(97)) _variant_t Application::CountIf ( );
__declspec(implementation_key(98)) _variant_t Application::Covar ( );
__declspec(implementation_key(99)) _variant_t Application::CritBinom ( );
__declspec(implementation_key(100)) _variant_t Application::DAverage ( );
__declspec(implementation_key(101)) _variant_t Application::Days360 ( );
__declspec(implementation_key(102)) _variant_t Application::Db ( );
__declspec(implementation_key(103)) _variant_t Application::DCount ( );
__declspec(implementation_key(104)) _variant_t Application::DCountA ( );
__declspec(implementation_key(105)) _variant_t Application::Ddb ( );
__declspec(implementation_key(106)) _variant_t Application::DDEExecute ( const _variant_t & Channel, const _variant_t & String );
__declspec(implementation_key(107)) _variant_t Application::DDEInitiate ( const _variant_t & App, const _variant_t & Topic );
__declspec(implementation_key(108)) _variant_t Application::DDEPoke ( const _variant_t & Channel, const _variant_t & Item, const _variant_t & Data );
__declspec(implementation_key(109)) _variant_t Application::DDERequest ( const _variant_t & Channel, const _variant_t & Item );
__declspec(implementation_key(110)) _variant_t Application::DDETerminate ( const _variant_t & Channel );
__declspec(implementation_key(111)) _variant_t Application::Degrees ( );
__declspec(implementation_key(112)) _variant_t Application::DeleteChartAutoFormat ( const _variant_t & Name );
__declspec(implementation_key(113)) _variant_t Application::DeleteCustomList ( const _variant_t & ListNum );
__declspec(implementation_key(114)) _variant_t Application::DevSq ( );
__declspec(implementation_key(115)) _variant_t Application::DGet ( );
__declspec(implementation_key(116)) _variant_t Application::Dialogs ( const _variant_t & Index );
__declspec(implementation_key(117)) _variant_t Application::DialogSheets ( const _variant_t & Index );
__declspec(implementation_key(118)) _variant_t Application::DMax ( );
__declspec(implementation_key(119)) _variant_t Application::DMin ( );
__declspec(implementation_key(120)) _variant_t Application::Dollar ( );
__declspec(implementation_key(121)) _variant_t Application::DoubleClick ( );
__declspec(implementation_key(122)) _variant_t Application::DProduct ( );
__declspec(implementation_key(123)) _variant_t Application::DStDev ( );
__declspec(implementation_key(124)) _variant_t Application::DStDevP ( );
__declspec(implementation_key(125)) _variant_t Application::DSum ( );
__declspec(implementation_key(126)) _variant_t Application::DVar ( );
__declspec(implementation_key(127)) _variant_t Application::DVarP ( );
__declspec(implementation_key(128)) _variant_t Application::_Evaluate ( const _variant_t & Name );
__declspec(implementation_key(129)) _variant_t Application::Evaluate ( const _variant_t & Name );
__declspec(implementation_key(130)) _variant_t Application::Even ( );
__declspec(implementation_key(131)) _variant_t Application::Excel4IntlMacroSheets ( const _variant_t & Index );
__declspec(implementation_key(132)) _variant_t Application::Excel4MacroSheets ( const _variant_t & Index );
__declspec(implementation_key(133)) _variant_t Application::ExecuteExcel4Macro ( const _variant_t & String );
__declspec(implementation_key(134)) _variant_t Application::ExponDist ( );
__declspec(implementation_key(135)) _variant_t Application::Fact ( );
__declspec(implementation_key(136)) _variant_t Application::FDist ( );
__declspec(implementation_key(137)) _variant_t Application::Find ( );
__declspec(implementation_key(138)) _variant_t Application::FindB ( );
__declspec(implementation_key(139)) _variant_t Application::FindFile ( );
__declspec(implementation_key(140)) _variant_t Application::FInv ( );
__declspec(implementation_key(141)) _variant_t Application::Fisher ( );
__declspec(implementation_key(142)) _variant_t Application::FisherInv ( );
__declspec(implementation_key(143)) _variant_t Application::Fixed ( );
__declspec(implementation_key(144)) _variant_t Application::Floor ( );
__declspec(implementation_key(145)) _variant_t Application::Forecast ( );
__declspec(implementation_key(146)) _variant_t Application::Frequency ( );
__declspec(implementation_key(147)) _variant_t Application::FTest ( );
__declspec(implementation_key(148)) _variant_t Application::Fv ( );
__declspec(implementation_key(149)) _variant_t Application::GammaDist ( );
__declspec(implementation_key(150)) _variant_t Application::GammaInv ( );
__declspec(implementation_key(151)) _variant_t Application::GammaLn ( );
__declspec(implementation_key(152)) _variant_t Application::GeoMean ( );
__declspec(implementation_key(153)) _variant_t Application::GetCustomListContents ( const _variant_t & ListNum );
__declspec(implementation_key(154)) _variant_t Application::GetCustomListNum ( const _variant_t & ListArray );
__declspec(implementation_key(155)) _variant_t Application::GetOpenFilename ( const _variant_t & FileFilter, const _variant_t & FilterIndex, const _variant_t & Title, const _variant_t & ButtonText, const _variant_t & MultiSelect );
__declspec(implementation_key(156)) _variant_t Application::GetSaveAsFilename ( const _variant_t & InitialFilename, const _variant_t & FileFilter, const _variant_t & FilterIndex, const _variant_t & Title, const _variant_t & ButtonText );
__declspec(implementation_key(157)) _variant_t Application::Goto ( const _variant_t & Reference, const _variant_t & Scroll );
__declspec(implementation_key(158)) _variant_t Application::Growth ( );
__declspec(implementation_key(159)) _variant_t Application::HarMean ( );
__declspec(implementation_key(160)) _variant_t Application::Help ( const _variant_t & HelpFile, const _variant_t & HelpContextID );
__declspec(implementation_key(161)) _variant_t Application::HLookup ( );
__declspec(implementation_key(162)) _variant_t Application::HypGeomDist ( );
__declspec(implementation_key(163)) _variant_t Application::InchesToPoints ( const _variant_t & Inches );
__declspec(implementation_key(164)) _variant_t Application::Index ( );
__declspec(implementation_key(165)) _variant_t Application::InputBox ( const _variant_t & Prompt, const _variant_t & Title, const _variant_t & Default, const _variant_t & Left, const _variant_t & Top, const _variant_t & HelpFile, const _variant_t & HelpContextID, const _variant_t & Type );
__declspec(implementation_key(166)) _variant_t Application::Intercept ( );
__declspec(implementation_key(167)) _variant_t Application::Intersect ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(168)) _variant_t Application::Ipmt ( );
__declspec(implementation_key(169)) _variant_t Application::Irr ( );
__declspec(implementation_key(170)) _variant_t Application::IsErr ( );
__declspec(implementation_key(171)) _variant_t Application::IsError ( );
__declspec(implementation_key(172)) _variant_t Application::IsLogical ( );
__declspec(implementation_key(173)) _variant_t Application::IsNA ( );
__declspec(implementation_key(174)) _variant_t Application::IsNonText ( );
__declspec(implementation_key(175)) _variant_t Application::IsNumber ( );
__declspec(implementation_key(176)) _variant_t Application::Ispmt ( );
__declspec(implementation_key(177)) _variant_t Application::IsText ( );
__declspec(implementation_key(178)) _variant_t Application::Kurt ( );
__declspec(implementation_key(179)) _variant_t Application::Large ( );
__declspec(implementation_key(180)) _variant_t Application::LinEst ( );
__declspec(implementation_key(181)) _variant_t Application::Ln ( );
__declspec(implementation_key(182)) _variant_t Application::Log ( );
__declspec(implementation_key(183)) _variant_t Application::Log10 ( );
__declspec(implementation_key(184)) _variant_t Application::LogEst ( );
__declspec(implementation_key(185)) _variant_t Application::LogInv ( );
__declspec(implementation_key(186)) _variant_t Application::LogNormDist ( );
__declspec(implementation_key(187)) _variant_t Application::Lookup ( );
__declspec(implementation_key(188)) _variant_t Application::MacroOptions ( const _variant_t & Macro, const _variant_t & Description, const _variant_t & HasMenu, const _variant_t & MenuText, const _variant_t & HasShortcutKey, const _variant_t & ShortcutKey, const _variant_t & Category, const _variant_t & StatusBar, const _variant_t & HelpContextID, const _variant_t & HelpFile );
__declspec(implementation_key(189)) _variant_t Application::MailLogoff ( );
__declspec(implementation_key(190)) _variant_t Application::MailLogon ( const _variant_t & Name, const _variant_t & Password, const _variant_t & DownloadNewMail );
__declspec(implementation_key(191)) _variant_t Application::Match ( );
__declspec(implementation_key(192)) _variant_t Application::Max ( );
__declspec(implementation_key(193)) _variant_t Application::MDeterm ( );
__declspec(implementation_key(194)) _variant_t Application::Median ( );
__declspec(implementation_key(195)) _variant_t Application::MenuBars ( const _variant_t & Index );
__declspec(implementation_key(196)) _variant_t Application::Min ( );
__declspec(implementation_key(197)) _variant_t Application::MInverse ( );
__declspec(implementation_key(198)) _variant_t Application::MIrr ( );
__declspec(implementation_key(199)) _variant_t Application::MMult ( );
__declspec(implementation_key(200)) _variant_t Application::Mode ( );
__declspec(implementation_key(201)) _variant_t Application::Modules ( const _variant_t & Index );
__declspec(implementation_key(202)) _variant_t Application::Names ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo );
__declspec(implementation_key(203)) _variant_t Application::NegBinomDist ( );
__declspec(implementation_key(204)) _variant_t Application::NextLetter ( );
__declspec(implementation_key(205)) _variant_t Application::NormDist ( );
__declspec(implementation_key(206)) _variant_t Application::NormInv ( );
__declspec(implementation_key(207)) _variant_t Application::NormSDist ( );
__declspec(implementation_key(208)) _variant_t Application::NormSInv ( );
__declspec(implementation_key(209)) _variant_t Application::NPer ( );
__declspec(implementation_key(210)) _variant_t Application::Npv ( );
__declspec(implementation_key(211)) _variant_t Application::Odd ( );
__declspec(implementation_key(212)) _variant_t Application::OnKey ( const _variant_t & Key, const _variant_t & Procedure );
__declspec(implementation_key(213)) _variant_t Application::OnRepeat ( const _variant_t & Text, const _variant_t & Procedure );
__declspec(implementation_key(214)) _variant_t Application::OnTime ( const _variant_t & EarliestTime, const _variant_t & Procedure, const _variant_t & LatestTime, const _variant_t & Schedule );
__declspec(implementation_key(215)) _variant_t Application::OnUndo ( const _variant_t & Text, const _variant_t & Procedure );
__declspec(implementation_key(216)) _variant_t Application::Or ( );
__declspec(implementation_key(217)) _variant_t Application::Pearson ( );
__declspec(implementation_key(218)) _variant_t Application::Percentile ( );
__declspec(implementation_key(219)) _variant_t Application::PercentRank ( );
__declspec(implementation_key(220)) _variant_t Application::Permut ( );
__declspec(implementation_key(221)) _variant_t Application::Pi ( );
__declspec(implementation_key(222)) _variant_t Application::Pmt ( );
__declspec(implementation_key(223)) _variant_t Application::Poisson ( );
__declspec(implementation_key(224)) _variant_t Application::Power ( );
__declspec(implementation_key(225)) _variant_t Application::Ppmt ( );
__declspec(implementation_key(226)) _variant_t Application::Prob ( );
__declspec(implementation_key(227)) _variant_t Application::Product ( );
__declspec(implementation_key(228)) _variant_t Application::Proper ( );
__declspec(implementation_key(229)) _variant_t Application::Pv ( );
__declspec(implementation_key(230)) _variant_t Application::Quartile ( );
__declspec(implementation_key(231)) _variant_t Application::Quit ( );
__declspec(implementation_key(232)) _variant_t Application::Radians ( );
__declspec(implementation_key(233)) _variant_t Application::Range ( const _variant_t & Cell1, const _variant_t & Cell2 );
__declspec(implementation_key(234)) _variant_t Application::Rank ( );
__declspec(implementation_key(235)) _variant_t Application::Rate ( );
__declspec(implementation_key(236)) _variant_t Application::RecordMacro ( const _variant_t & BasicCode, const _variant_t & XlmCode );
__declspec(implementation_key(237)) _variant_t Application::RegisterXLL ( const _variant_t & Filename );
__declspec(implementation_key(238)) _variant_t Application::Repeat ( );
__declspec(implementation_key(239)) _variant_t Application::Replace ( );
__declspec(implementation_key(240)) _variant_t Application::ReplaceB ( );
__declspec(implementation_key(241)) _variant_t Application::Rept ( );
__declspec(implementation_key(242)) _variant_t Application::ResetTipWizard ( );
__declspec(implementation_key(243)) _variant_t Application::Roman ( );
__declspec(implementation_key(244)) _variant_t Application::Round ( );
__declspec(implementation_key(245)) _variant_t Application::RoundDown ( );
__declspec(implementation_key(246)) _variant_t Application::RoundUp ( );
__declspec(implementation_key(247)) _variant_t Application::Rows ( const _variant_t & Index );
__declspec(implementation_key(248)) _variant_t Application::RSq ( );
__declspec(implementation_key(249)) _variant_t Application::Run ( const _variant_t & Macro, const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(250)) _variant_t Application::Save ( const _variant_t & Filename );
__declspec(implementation_key(251)) _variant_t Application::Search ( );
__declspec(implementation_key(252)) _variant_t Application::SearchB ( );
__declspec(implementation_key(253)) _variant_t Application::SendKeys ( const _variant_t & Keys, const _variant_t & Wait );
__declspec(implementation_key(254)) _variant_t Application::SetDefaultChart ( const _variant_t & FormatName );
__declspec(implementation_key(255)) _variant_t Application::Sheets ( const _variant_t & Index );
__declspec(implementation_key(256)) _variant_t Application::ShortcutMenus ( const _variant_t & Index );
__declspec(implementation_key(257)) _variant_t Application::Sinh ( );
__declspec(implementation_key(258)) _variant_t Application::Skew ( );
__declspec(implementation_key(259)) _variant_t Application::Sln ( );
__declspec(implementation_key(260)) _variant_t Application::Slope ( );
__declspec(implementation_key(261)) _variant_t Application::Small ( );
__declspec(implementation_key(262)) _variant_t Application::Standardize ( );
__declspec(implementation_key(263)) _variant_t Application::StDev ( );
__declspec(implementation_key(264)) _variant_t Application::StDevP ( );
__declspec(implementation_key(265)) _variant_t Application::StEyx ( );
__declspec(implementation_key(266)) _variant_t Application::Substitute ( );
__declspec(implementation_key(267)) _variant_t Application::Subtotal ( );
__declspec(implementation_key(268)) _variant_t Application::Sum ( );
__declspec(implementation_key(269)) _variant_t Application::SumIf ( );
__declspec(implementation_key(270)) _variant_t Application::SumProduct ( );
__declspec(implementation_key(271)) _variant_t Application::SumSq ( );
__declspec(implementation_key(272)) _variant_t Application::SumX2MY2 ( );
__declspec(implementation_key(273)) _variant_t Application::SumX2PY2 ( );
__declspec(implementation_key(274)) _variant_t Application::SumXMY2 ( );
__declspec(implementation_key(275)) _variant_t Application::Syd ( );
__declspec(implementation_key(276)) _variant_t Application::Tanh ( );
__declspec(implementation_key(277)) _variant_t Application::TDist ( );
__declspec(implementation_key(278)) _variant_t Application::Text ( );
__declspec(implementation_key(279)) _variant_t Application::TInv ( );
__declspec(implementation_key(280)) _variant_t Application::Toolbars ( const _variant_t & Index );
__declspec(implementation_key(281)) _variant_t Application::Transpose ( );
__declspec(implementation_key(282)) _variant_t Application::Trend ( );
__declspec(implementation_key(283)) _variant_t Application::Trim ( );
__declspec(implementation_key(284)) _variant_t Application::TrimMean ( );
__declspec(implementation_key(285)) _variant_t Application::TTest ( );
__declspec(implementation_key(286)) _variant_t Application::Undo ( );
__declspec(implementation_key(287)) _variant_t Application::Union ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(288)) _variant_t Application::USDollar ( );
__declspec(implementation_key(289)) _variant_t Application::Var ( );
__declspec(implementation_key(290)) _variant_t Application::VarP ( );
__declspec(implementation_key(291)) _variant_t Application::Vdb ( );
__declspec(implementation_key(292)) _variant_t Application::VLookup ( );
__declspec(implementation_key(293)) _variant_t Application::Volatile ( const _variant_t & Volatile );
__declspec(implementation_key(294)) _variant_t Application::Wait ( const _variant_t & Time );
__declspec(implementation_key(295)) _variant_t Application::Weekday ( );
__declspec(implementation_key(296)) _variant_t Application::Weibull ( );
__declspec(implementation_key(297)) _variant_t Application::Windows ( const _variant_t & Index );
__declspec(implementation_key(298)) _variant_t Application::Workbooks ( const _variant_t & Index );
__declspec(implementation_key(299)) _variant_t Application::Worksheets ( const _variant_t & Index );
__declspec(implementation_key(300)) _variant_t Application::ZTest ( );
__declspec(implementation_key(301)) _variant_t Application::GetActiveCell ( );
__declspec(implementation_key(302)) void Application::PutActiveCell ( const _variant_t & _val );
__declspec(implementation_key(303)) _variant_t Application::GetActiveChart ( );
__declspec(implementation_key(304)) void Application::PutActiveChart ( const _variant_t & _val );
__declspec(implementation_key(305)) _variant_t Application::GetActiveDialog ( );
__declspec(implementation_key(306)) void Application::PutActiveDialog ( const _variant_t & _val );
__declspec(implementation_key(307)) _variant_t Application::GetActiveMenuBar ( );
__declspec(implementation_key(308)) void Application::PutActiveMenuBar ( const _variant_t & _val );
__declspec(implementation_key(309)) _variant_t Application::GetActivePrinter ( );
__declspec(implementation_key(310)) void Application::PutActivePrinter ( const _variant_t & _val );
__declspec(implementation_key(311)) _variant_t Application::GetActiveSheet ( );
__declspec(implementation_key(312)) void Application::PutActiveSheet ( const _variant_t & _val );
__declspec(implementation_key(313)) _variant_t Application::GetActiveWindow ( );
__declspec(implementation_key(314)) void Application::PutActiveWindow ( const _variant_t & _val );
__declspec(implementation_key(315)) _variant_t Application::GetActiveWorkbook ( );
__declspec(implementation_key(316)) void Application::PutActiveWorkbook ( const _variant_t & _val );
__declspec(implementation_key(317)) _variant_t Application::GetAlertBeforeOverwriting ( );
__declspec(implementation_key(318)) void Application::PutAlertBeforeOverwriting ( const _variant_t & _val );
__declspec(implementation_key(319)) _variant_t Application::GetAltStartupPath ( );
__declspec(implementation_key(320)) void Application::PutAltStartupPath ( const _variant_t & _val );
__declspec(implementation_key(321)) _variant_t Application::GetAskToUpdateLinks ( );
__declspec(implementation_key(322)) void Application::PutAskToUpdateLinks ( const _variant_t & _val );
__declspec(implementation_key(323)) _variant_t Application::GetAutoCorrect ( );
__declspec(implementation_key(324)) void Application::PutAutoCorrect ( const _variant_t & _val );
__declspec(implementation_key(325)) _variant_t Application::GetBuild ( );
__declspec(implementation_key(326)) void Application::PutBuild ( const _variant_t & _val );
__declspec(implementation_key(327)) _variant_t Application::GetCalculateBeforeSave ( );
__declspec(implementation_key(328)) void Application::PutCalculateBeforeSave ( const _variant_t & _val );
__declspec(implementation_key(329)) _variant_t Application::GetCalculation ( );
__declspec(implementation_key(330)) void Application::PutCalculation ( const _variant_t & _val );
__declspec(implementation_key(331)) _variant_t Application::GetCaller ( );
__declspec(implementation_key(332)) void Application::PutCaller ( const _variant_t & _val );
__declspec(implementation_key(333)) _variant_t Application::GetCanPlaySounds ( );
__declspec(implementation_key(334)) void Application::PutCanPlaySounds ( const _variant_t & _val );
__declspec(implementation_key(335)) _variant_t Application::GetCanRecordSounds ( );
__declspec(implementation_key(336)) void Application::PutCanRecordSounds ( const _variant_t & _val );
__declspec(implementation_key(337)) _variant_t Application::GetCaption ( );
__declspec(implementation_key(338)) void Application::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(339)) _variant_t Application::GetCellDragAndDrop ( );
__declspec(implementation_key(340)) void Application::PutCellDragAndDrop ( const _variant_t & _val );
__declspec(implementation_key(341)) _variant_t Application::GetClipboardFormats ( );
__declspec(implementation_key(342)) void Application::PutClipboardFormats ( const _variant_t & _val );
__declspec(implementation_key(343)) _variant_t Application::GetColorButtons ( );
__declspec(implementation_key(344)) void Application::PutColorButtons ( const _variant_t & _val );
__declspec(implementation_key(345)) _variant_t Application::GetCommandUnderlines ( );
__declspec(implementation_key(346)) void Application::PutCommandUnderlines ( const _variant_t & _val );
__declspec(implementation_key(347)) _variant_t Application::GetConstrainNumeric ( );
__declspec(implementation_key(348)) void Application::PutConstrainNumeric ( const _variant_t & _val );
__declspec(implementation_key(349)) _variant_t Application::GetCopyObjectsWithCells ( );
__declspec(implementation_key(350)) void Application::PutCopyObjectsWithCells ( const _variant_t & _val );
__declspec(implementation_key(351)) _variant_t Application::GetCreator ( );
__declspec(implementation_key(352)) void Application::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(353)) _variant_t Application::GetCursor ( );
__declspec(implementation_key(354)) void Application::PutCursor ( const _variant_t & _val );
__declspec(implementation_key(355)) _variant_t Application::GetCustomListCount ( );
__declspec(implementation_key(356)) void Application::PutCustomListCount ( const _variant_t & _val );
__declspec(implementation_key(357)) _variant_t Application::GetCutCopyMode ( );
__declspec(implementation_key(358)) void Application::PutCutCopyMode ( const _variant_t & _val );
__declspec(implementation_key(359)) _variant_t Application::GetDataEntryMode ( );
__declspec(implementation_key(360)) void Application::PutDataEntryMode ( const _variant_t & _val );
__declspec(implementation_key(361)) _variant_t Application::GetDDEAppReturnCode ( );
__declspec(implementation_key(362)) void Application::PutDDEAppReturnCode ( const _variant_t & _val );
__declspec(implementation_key(363)) _variant_t Application::GetDefaultFilePath ( );
__declspec(implementation_key(364)) void Application::PutDefaultFilePath ( const _variant_t & _val );
__declspec(implementation_key(365)) _variant_t Application::GetDisplayAlerts ( );
__declspec(implementation_key(366)) void Application::PutDisplayAlerts ( const _variant_t & _val );
__declspec(implementation_key(367)) _variant_t Application::GetDisplayClipboardWindow ( );
__declspec(implementation_key(368)) void Application::PutDisplayClipboardWindow ( const _variant_t & _val );
__declspec(implementation_key(369)) _variant_t Application::GetDisplayExcel4Menus ( );
__declspec(implementation_key(370)) void Application::PutDisplayExcel4Menus ( const _variant_t & _val );
__declspec(implementation_key(371)) _variant_t Application::GetDisplayFormulaBar ( );
__declspec(implementation_key(372)) void Application::PutDisplayFormulaBar ( const _variant_t & _val );
__declspec(implementation_key(373)) _variant_t Application::GetDisplayFullScreen ( );
__declspec(implementation_key(374)) void Application::PutDisplayFullScreen ( const _variant_t & _val );
__declspec(implementation_key(375)) _variant_t Application::GetDisplayInfoWindow ( );
__declspec(implementation_key(376)) void Application::PutDisplayInfoWindow ( const _variant_t & _val );
__declspec(implementation_key(377)) _variant_t Application::GetDisplayNoteIndicator ( );
__declspec(implementation_key(378)) void Application::PutDisplayNoteIndicator ( const _variant_t & _val );
__declspec(implementation_key(379)) _variant_t Application::GetDisplayRecentFiles ( );
__declspec(implementation_key(380)) void Application::PutDisplayRecentFiles ( const _variant_t & _val );
__declspec(implementation_key(381)) _variant_t Application::GetDisplayScrollBars ( );
__declspec(implementation_key(382)) void Application::PutDisplayScrollBars ( const _variant_t & _val );
__declspec(implementation_key(383)) _variant_t Application::GetDisplayStatusBar ( );
__declspec(implementation_key(384)) void Application::PutDisplayStatusBar ( const _variant_t & _val );
__declspec(implementation_key(385)) _variant_t Application::GetEditDirectlyInCell ( );
__declspec(implementation_key(386)) void Application::PutEditDirectlyInCell ( const _variant_t & _val );
__declspec(implementation_key(387)) _variant_t Application::GetEnableAnimations ( );
__declspec(implementation_key(388)) void Application::PutEnableAnimations ( const _variant_t & _val );
__declspec(implementation_key(389)) _variant_t Application::GetEnableAutoComplete ( );
__declspec(implementation_key(390)) void Application::PutEnableAutoComplete ( const _variant_t & _val );
__declspec(implementation_key(391)) _variant_t Application::GetEnableCancelKey ( );
__declspec(implementation_key(392)) void Application::PutEnableCancelKey ( const _variant_t & _val );
__declspec(implementation_key(393)) _variant_t Application::GetEnableTipWizard ( );
__declspec(implementation_key(394)) void Application::PutEnableTipWizard ( const _variant_t & _val );
__declspec(implementation_key(395)) _variant_t Application::GetFileConverters ( );
__declspec(implementation_key(396)) void Application::PutFileConverters ( const _variant_t & _val );
__declspec(implementation_key(397)) _variant_t Application::GetFixedDecimal ( );
__declspec(implementation_key(398)) void Application::PutFixedDecimal ( const _variant_t & _val );
__declspec(implementation_key(399)) _variant_t Application::GetFixedDecimalPlaces ( );
__declspec(implementation_key(400)) void Application::PutFixedDecimalPlaces ( const _variant_t & _val );
__declspec(implementation_key(401)) _variant_t Application::GetHeight ( );
__declspec(implementation_key(402)) void Application::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(403)) _variant_t Application::GetIgnoreRemoteRequests ( );
__declspec(implementation_key(404)) void Application::PutIgnoreRemoteRequests ( const _variant_t & _val );
__declspec(implementation_key(405)) _variant_t Application::GetInteractive ( );
__declspec(implementation_key(406)) void Application::PutInteractive ( const _variant_t & _val );
__declspec(implementation_key(407)) _variant_t Application::GetInternational ( );
__declspec(implementation_key(408)) void Application::PutInternational ( const _variant_t & _val );
__declspec(implementation_key(409)) _variant_t Application::GetIteration ( );
__declspec(implementation_key(410)) void Application::PutIteration ( const _variant_t & _val );
__declspec(implementation_key(411)) _variant_t Application::GetLargeButtons ( );
__declspec(implementation_key(412)) void Application::PutLargeButtons ( const _variant_t & _val );
__declspec(implementation_key(413)) _variant_t Application::GetLeft ( );
__declspec(implementation_key(414)) void Application::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(415)) _variant_t Application::GetLibraryPath ( );
__declspec(implementation_key(416)) void Application::PutLibraryPath ( const _variant_t & _val );
__declspec(implementation_key(417)) _variant_t Application::GetMailSession ( );
__declspec(implementation_key(418)) void Application::PutMailSession ( const _variant_t & _val );
__declspec(implementation_key(419)) _variant_t Application::GetMailSystem ( );
__declspec(implementation_key(420)) void Application::PutMailSystem ( const _variant_t & _val );
__declspec(implementation_key(421)) _variant_t Application::GetMathCoprocessorAvailable ( );
__declspec(implementation_key(422)) void Application::PutMathCoprocessorAvailable ( const _variant_t & _val );
__declspec(implementation_key(423)) _variant_t Application::GetMaxChange ( );
__declspec(implementation_key(424)) void Application::PutMaxChange ( const _variant_t & _val );
__declspec(implementation_key(425)) _variant_t Application::GetMaxIterations ( );
__declspec(implementation_key(426)) void Application::PutMaxIterations ( const _variant_t & _val );
__declspec(implementation_key(427)) _variant_t Application::GetMemoryFree ( );
__declspec(implementation_key(428)) void Application::PutMemoryFree ( const _variant_t & _val );
__declspec(implementation_key(429)) _variant_t Application::GetMemoryTotal ( );
__declspec(implementation_key(430)) void Application::PutMemoryTotal ( const _variant_t & _val );
__declspec(implementation_key(431)) _variant_t Application::GetMemoryUsed ( );
__declspec(implementation_key(432)) void Application::PutMemoryUsed ( const _variant_t & _val );
__declspec(implementation_key(433)) _variant_t Application::GetMouseAvailable ( );
__declspec(implementation_key(434)) void Application::PutMouseAvailable ( const _variant_t & _val );
__declspec(implementation_key(435)) _variant_t Application::GetMoveAfterReturn ( );
__declspec(implementation_key(436)) void Application::PutMoveAfterReturn ( const _variant_t & _val );
__declspec(implementation_key(437)) _variant_t Application::GetMoveAfterReturnDirection ( );
__declspec(implementation_key(438)) void Application::PutMoveAfterReturnDirection ( const _variant_t & _val );
__declspec(implementation_key(439)) _variant_t Application::GetName ( );
__declspec(implementation_key(440)) void Application::PutName ( const _variant_t & _val );
__declspec(implementation_key(441)) _variant_t Application::GetNetworkTemplatesPath ( );
__declspec(implementation_key(442)) void Application::PutNetworkTemplatesPath ( const _variant_t & _val );
__declspec(implementation_key(443)) _variant_t Application::GetOnCalculate ( );
__declspec(implementation_key(444)) void Application::PutOnCalculate ( const _variant_t & _val );
__declspec(implementation_key(445)) _variant_t Application::GetOnData ( );
__declspec(implementation_key(446)) void Application::PutOnData ( const _variant_t & _val );
__declspec(implementation_key(447)) _variant_t Application::GetOnDoubleClick ( );
__declspec(implementation_key(448)) void Application::PutOnDoubleClick ( const _variant_t & _val );
__declspec(implementation_key(449)) _variant_t Application::GetOnEntry ( );
__declspec(implementation_key(450)) void Application::PutOnEntry ( const _variant_t & _val );
__declspec(implementation_key(451)) _variant_t Application::GetOnSheetActivate ( );
__declspec(implementation_key(452)) void Application::PutOnSheetActivate ( const _variant_t & _val );
__declspec(implementation_key(453)) _variant_t Application::GetOnSheetDeactivate ( );
__declspec(implementation_key(454)) void Application::PutOnSheetDeactivate ( const _variant_t & _val );
__declspec(implementation_key(455)) _variant_t Application::GetOnWindow ( );
__declspec(implementation_key(456)) void Application::PutOnWindow ( const _variant_t & _val );
__declspec(implementation_key(457)) _variant_t Application::GetOperatingSystem ( );
__declspec(implementation_key(458)) void Application::PutOperatingSystem ( const _variant_t & _val );
__declspec(implementation_key(459)) _variant_t Application::GetOrganizationName ( );
__declspec(implementation_key(460)) void Application::PutOrganizationName ( const _variant_t & _val );
__declspec(implementation_key(461)) _variant_t Application::GetParent ( );
__declspec(implementation_key(462)) void Application::PutParent ( const _variant_t & _val );
__declspec(implementation_key(463)) _variant_t Application::GetPath ( );
__declspec(implementation_key(464)) void Application::PutPath ( const _variant_t & _val );
__declspec(implementation_key(465)) _variant_t Application::GetPathSeparator ( );
__declspec(implementation_key(466)) void Application::PutPathSeparator ( const _variant_t & _val );
__declspec(implementation_key(467)) _variant_t Application::GetPreviousSelections ( );
__declspec(implementation_key(468)) void Application::PutPreviousSelections ( const _variant_t & _val );
__declspec(implementation_key(469)) _variant_t Application::GetPromptForSummaryInfo ( );
__declspec(implementation_key(470)) void Application::PutPromptForSummaryInfo ( const _variant_t & _val );
__declspec(implementation_key(471)) _variant_t Application::GetRecordRelative ( );
__declspec(implementation_key(472)) void Application::PutRecordRelative ( const _variant_t & _val );
__declspec(implementation_key(473)) _variant_t Application::GetReferenceStyle ( );
__declspec(implementation_key(474)) void Application::PutReferenceStyle ( const _variant_t & _val );
__declspec(implementation_key(475)) _variant_t Application::GetRegisteredFunctions ( );
__declspec(implementation_key(476)) void Application::PutRegisteredFunctions ( const _variant_t & _val );
__declspec(implementation_key(477)) _variant_t Application::GetScreenUpdating ( );
__declspec(implementation_key(478)) void Application::PutScreenUpdating ( const _variant_t & _val );
__declspec(implementation_key(479)) _variant_t Application::GetSelection ( );
__declspec(implementation_key(480)) void Application::PutSelection ( const _variant_t & _val );
__declspec(implementation_key(481)) _variant_t Application::GetSheetsInNewWorkbook ( );
__declspec(implementation_key(482)) void Application::PutSheetsInNewWorkbook ( const _variant_t & _val );
__declspec(implementation_key(483)) _variant_t Application::GetShowToolTips ( );
__declspec(implementation_key(484)) void Application::PutShowToolTips ( const _variant_t & _val );
__declspec(implementation_key(485)) _variant_t Application::GetStandardFont ( );
__declspec(implementation_key(486)) void Application::PutStandardFont ( const _variant_t & _val );
__declspec(implementation_key(487)) _variant_t Application::GetStandardFontSize ( );
__declspec(implementation_key(488)) void Application::PutStandardFontSize ( const _variant_t & _val );
__declspec(implementation_key(489)) _variant_t Application::GetStartupPath ( );
__declspec(implementation_key(490)) void Application::PutStartupPath ( const _variant_t & _val );
__declspec(implementation_key(491)) _variant_t Application::GetStatusBar ( );
__declspec(implementation_key(492)) void Application::PutStatusBar ( const _variant_t & _val );
__declspec(implementation_key(493)) _variant_t Application::GetTemplatesPath ( );
__declspec(implementation_key(494)) void Application::PutTemplatesPath ( const _variant_t & _val );
__declspec(implementation_key(495)) _variant_t Application::GetThisWorkbook ( );
__declspec(implementation_key(496)) void Application::PutThisWorkbook ( const _variant_t & _val );
__declspec(implementation_key(497)) _variant_t Application::GetTop ( );
__declspec(implementation_key(498)) void Application::PutTop ( const _variant_t & _val );
__declspec(implementation_key(499)) _variant_t Application::GetTransitionMenuKey ( );
__declspec(implementation_key(500)) void Application::PutTransitionMenuKey ( const _variant_t & _val );
__declspec(implementation_key(501)) _variant_t Application::GetTransitionMenuKeyAction ( );
__declspec(implementation_key(502)) void Application::PutTransitionMenuKeyAction ( const _variant_t & _val );
__declspec(implementation_key(503)) _variant_t Application::GetTransitionNavigKeys ( );
__declspec(implementation_key(504)) void Application::PutTransitionNavigKeys ( const _variant_t & _val );
__declspec(implementation_key(505)) _variant_t Application::GetUsableHeight ( );
__declspec(implementation_key(506)) void Application::PutUsableHeight ( const _variant_t & _val );
__declspec(implementation_key(507)) _variant_t Application::GetUsableWidth ( );
__declspec(implementation_key(508)) void Application::PutUsableWidth ( const _variant_t & _val );
__declspec(implementation_key(509)) _variant_t Application::GetUserName ( );
__declspec(implementation_key(510)) void Application::PutUserName ( const _variant_t & _val );
__declspec(implementation_key(511)) _variant_t Application::GetValue ( );
__declspec(implementation_key(512)) void Application::PutValue ( const _variant_t & _val );
__declspec(implementation_key(513)) _variant_t Application::GetVersion ( );
__declspec(implementation_key(514)) void Application::PutVersion ( const _variant_t & _val );
__declspec(implementation_key(515)) _variant_t Application::GetVisible ( );
__declspec(implementation_key(516)) void Application::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(517)) _variant_t Application::GetWidth ( );
__declspec(implementation_key(518)) void Application::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(519)) _variant_t Application::GetWindowsForPens ( );
__declspec(implementation_key(520)) void Application::PutWindowsForPens ( const _variant_t & _val );
__declspec(implementation_key(521)) _variant_t Application::GetWindowState ( );
__declspec(implementation_key(522)) void Application::PutWindowState ( const _variant_t & _val );
__declspec(implementation_key(523)) _variant_t Style::Application ( );
__declspec(implementation_key(524)) _variant_t Style::Borders ( const _variant_t & Index );
__declspec(implementation_key(525)) _variant_t Style::Delete ( );
__declspec(implementation_key(526)) _variant_t Style::GetAddIndent ( );
__declspec(implementation_key(527)) void Style::PutAddIndent ( const _variant_t & _val );
__declspec(implementation_key(528)) _variant_t Style::GetCreator ( );
__declspec(implementation_key(529)) void Style::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(530)) _variant_t Style::GetFont ( );
__declspec(implementation_key(531)) void Style::PutFont ( const _variant_t & _val );
__declspec(implementation_key(532)) _variant_t Style::GetFormulaHidden ( );
__declspec(implementation_key(533)) void Style::PutFormulaHidden ( const _variant_t & _val );
__declspec(implementation_key(534)) _variant_t Style::GetHorizontalAlignment ( );
__declspec(implementation_key(535)) void Style::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(536)) _variant_t Style::GetIncludeAlignment ( );
__declspec(implementation_key(537)) void Style::PutIncludeAlignment ( const _variant_t & _val );
__declspec(implementation_key(538)) _variant_t Style::GetIncludeBorder ( );
__declspec(implementation_key(539)) void Style::PutIncludeBorder ( const _variant_t & _val );
__declspec(implementation_key(540)) _variant_t Style::GetIncludeFont ( );
__declspec(implementation_key(541)) void Style::PutIncludeFont ( const _variant_t & _val );
__declspec(implementation_key(542)) _variant_t Style::GetIncludeNumber ( );
__declspec(implementation_key(543)) void Style::PutIncludeNumber ( const _variant_t & _val );
__declspec(implementation_key(544)) _variant_t Style::GetIncludePatterns ( );
__declspec(implementation_key(545)) void Style::PutIncludePatterns ( const _variant_t & _val );
__declspec(implementation_key(546)) _variant_t Style::GetIncludeProtection ( );
__declspec(implementation_key(547)) void Style::PutIncludeProtection ( const _variant_t & _val );
__declspec(implementation_key(548)) _variant_t Style::GetInterior ( );
__declspec(implementation_key(549)) void Style::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(550)) _variant_t Style::GetLocked ( );
__declspec(implementation_key(551)) void Style::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(552)) _variant_t Style::GetName ( );
__declspec(implementation_key(553)) void Style::PutName ( const _variant_t & _val );
__declspec(implementation_key(554)) _variant_t Style::GetNameLocal ( );
__declspec(implementation_key(555)) void Style::PutNameLocal ( const _variant_t & _val );
__declspec(implementation_key(556)) _variant_t Style::GetNumberFormat ( );
__declspec(implementation_key(557)) void Style::PutNumberFormat ( const _variant_t & _val );
__declspec(implementation_key(558)) _variant_t Style::GetNumberFormatLocal ( );
__declspec(implementation_key(559)) void Style::PutNumberFormatLocal ( const _variant_t & _val );
__declspec(implementation_key(560)) _variant_t Style::GetOrientation ( );
__declspec(implementation_key(561)) void Style::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(562)) _variant_t Style::GetParent ( );
__declspec(implementation_key(563)) void Style::PutParent ( const _variant_t & _val );
__declspec(implementation_key(564)) _variant_t Style::GetValue ( );
__declspec(implementation_key(565)) void Style::PutValue ( const _variant_t & _val );
__declspec(implementation_key(566)) _variant_t Style::GetVerticalAlignment ( );
__declspec(implementation_key(567)) void Style::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(568)) _variant_t Style::GetWrapText ( );
__declspec(implementation_key(569)) void Style::PutWrapText ( const _variant_t & _val );
__declspec(implementation_key(570)) _variant_t Styles::_NewEnum ( );
__declspec(implementation_key(571)) _variant_t Styles::Add ( const _variant_t & Name, const _variant_t & BasedOn );
__declspec(implementation_key(572)) _variant_t Styles::Application ( );
__declspec(implementation_key(573)) _variant_t Styles::Item ( const _variant_t & Index );
__declspec(implementation_key(574)) _variant_t Styles::Merge ( const _variant_t & Workbook );
__declspec(implementation_key(575)) _variant_t Styles::GetCount ( );
__declspec(implementation_key(576)) void Styles::PutCount ( const _variant_t & _val );
__declspec(implementation_key(577)) _variant_t Styles::GetCreator ( );
__declspec(implementation_key(578)) void Styles::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(579)) _variant_t Styles::GetParent ( );
__declspec(implementation_key(580)) void Styles::PutParent ( const _variant_t & _val );
__declspec(implementation_key(581)) _variant_t Toolbar::Application ( );
__declspec(implementation_key(582)) _variant_t Toolbar::Delete ( );
__declspec(implementation_key(583)) _variant_t Toolbar::Reset ( );
__declspec(implementation_key(584)) _variant_t Toolbar::ToolbarButtons ( const _variant_t & Index );
__declspec(implementation_key(585)) _variant_t Toolbar::GetBuiltIn ( );
__declspec(implementation_key(586)) void Toolbar::PutBuiltIn ( const _variant_t & _val );
__declspec(implementation_key(587)) _variant_t Toolbar::GetCreator ( );
__declspec(implementation_key(588)) void Toolbar::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(589)) _variant_t Toolbar::GetHeight ( );
__declspec(implementation_key(590)) void Toolbar::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(591)) _variant_t Toolbar::GetLeft ( );
__declspec(implementation_key(592)) void Toolbar::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(593)) _variant_t Toolbar::GetName ( );
__declspec(implementation_key(594)) void Toolbar::PutName ( const _variant_t & _val );
__declspec(implementation_key(595)) _variant_t Toolbar::GetParent ( );
__declspec(implementation_key(596)) void Toolbar::PutParent ( const _variant_t & _val );
__declspec(implementation_key(597)) _variant_t Toolbar::GetPosition ( );
__declspec(implementation_key(598)) void Toolbar::PutPosition ( const _variant_t & _val );
__declspec(implementation_key(599)) _variant_t Toolbar::GetProtection ( );
__declspec(implementation_key(600)) void Toolbar::PutProtection ( const _variant_t & _val );
__declspec(implementation_key(601)) _variant_t Toolbar::GetTop ( );
__declspec(implementation_key(602)) void Toolbar::PutTop ( const _variant_t & _val );
__declspec(implementation_key(603)) _variant_t Toolbar::GetVisible ( );
__declspec(implementation_key(604)) void Toolbar::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(605)) _variant_t Toolbar::GetWidth ( );
__declspec(implementation_key(606)) void Toolbar::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(607)) _variant_t Toolbars::_NewEnum ( );
__declspec(implementation_key(608)) _variant_t Toolbars::Add ( const _variant_t & Name );
__declspec(implementation_key(609)) _variant_t Toolbars::Application ( );
__declspec(implementation_key(610)) _variant_t Toolbars::Item ( const _variant_t & Index );
__declspec(implementation_key(611)) _variant_t Toolbars::GetCount ( );
__declspec(implementation_key(612)) void Toolbars::PutCount ( const _variant_t & _val );
__declspec(implementation_key(613)) _variant_t Toolbars::GetCreator ( );
__declspec(implementation_key(614)) void Toolbars::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(615)) _variant_t Toolbars::GetParent ( );
__declspec(implementation_key(616)) void Toolbars::PutParent ( const _variant_t & _val );
__declspec(implementation_key(617)) _variant_t ToolbarButton::Application ( );
__declspec(implementation_key(618)) _variant_t ToolbarButton::Copy ( const _variant_t & Toolbar, const _variant_t & Before );
__declspec(implementation_key(619)) _variant_t ToolbarButton::CopyFace ( );
__declspec(implementation_key(620)) _variant_t ToolbarButton::Delete ( );
__declspec(implementation_key(621)) _variant_t ToolbarButton::Edit ( );
__declspec(implementation_key(622)) _variant_t ToolbarButton::Move ( const _variant_t & Toolbar, const _variant_t & Before );
__declspec(implementation_key(623)) _variant_t ToolbarButton::PasteFace ( );
__declspec(implementation_key(624)) _variant_t ToolbarButton::Reset ( );
__declspec(implementation_key(625)) _variant_t ToolbarButton::GetBuiltIn ( );
__declspec(implementation_key(626)) void ToolbarButton::PutBuiltIn ( const _variant_t & _val );
__declspec(implementation_key(627)) _variant_t ToolbarButton::GetBuiltInFace ( );
__declspec(implementation_key(628)) void ToolbarButton::PutBuiltInFace ( const _variant_t & _val );
__declspec(implementation_key(629)) _variant_t ToolbarButton::GetCreator ( );
__declspec(implementation_key(630)) void ToolbarButton::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(631)) _variant_t ToolbarButton::GetEnabled ( );
__declspec(implementation_key(632)) void ToolbarButton::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(633)) _variant_t ToolbarButton::GetHelpContextID ( );
__declspec(implementation_key(634)) void ToolbarButton::PutHelpContextID ( const _variant_t & _val );
__declspec(implementation_key(635)) _variant_t ToolbarButton::GetHelpFile ( );
__declspec(implementation_key(636)) void ToolbarButton::PutHelpFile ( const _variant_t & _val );
__declspec(implementation_key(637)) _variant_t ToolbarButton::GetId ( );
__declspec(implementation_key(638)) void ToolbarButton::PutId ( const _variant_t & _val );
__declspec(implementation_key(639)) _variant_t ToolbarButton::GetIsGap ( );
__declspec(implementation_key(640)) void ToolbarButton::PutIsGap ( const _variant_t & _val );
__declspec(implementation_key(641)) _variant_t ToolbarButton::GetName ( );
__declspec(implementation_key(642)) void ToolbarButton::PutName ( const _variant_t & _val );
__declspec(implementation_key(643)) _variant_t ToolbarButton::GetOnAction ( );
__declspec(implementation_key(644)) void ToolbarButton::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(645)) _variant_t ToolbarButton::GetParent ( );
__declspec(implementation_key(646)) void ToolbarButton::PutParent ( const _variant_t & _val );
__declspec(implementation_key(647)) _variant_t ToolbarButton::GetPushed ( );
__declspec(implementation_key(648)) void ToolbarButton::PutPushed ( const _variant_t & _val );
__declspec(implementation_key(649)) _variant_t ToolbarButton::GetStatusBar ( );
__declspec(implementation_key(650)) void ToolbarButton::PutStatusBar ( const _variant_t & _val );
__declspec(implementation_key(651)) _variant_t ToolbarButton::GetWidth ( );
__declspec(implementation_key(652)) void ToolbarButton::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(653)) _variant_t ToolbarButtons::_NewEnum ( );
__declspec(implementation_key(654)) _variant_t ToolbarButtons::Add ( const _variant_t & Button, const _variant_t & Before, const _variant_t & OnAction, const _variant_t & Pushed, const _variant_t & Enabled, const _variant_t & StatusBar, const _variant_t & HelpFile, const _variant_t & HelpContextID );
__declspec(implementation_key(655)) _variant_t ToolbarButtons::Application ( );
__declspec(implementation_key(656)) _variant_t ToolbarButtons::Item ( const _variant_t & Index );
__declspec(implementation_key(657)) _variant_t ToolbarButtons::GetCount ( );
__declspec(implementation_key(658)) void ToolbarButtons::PutCount ( const _variant_t & _val );
__declspec(implementation_key(659)) _variant_t ToolbarButtons::GetCreator ( );
__declspec(implementation_key(660)) void ToolbarButtons::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(661)) _variant_t ToolbarButtons::GetParent ( );
__declspec(implementation_key(662)) void ToolbarButtons::PutParent ( const _variant_t & _val );
__declspec(implementation_key(663)) _variant_t AddIn::Application ( );
__declspec(implementation_key(664)) _variant_t AddIn::GetAuthor ( );
__declspec(implementation_key(665)) void AddIn::PutAuthor ( const _variant_t & _val );
__declspec(implementation_key(666)) _variant_t AddIn::GetComments ( );
__declspec(implementation_key(667)) void AddIn::PutComments ( const _variant_t & _val );
__declspec(implementation_key(668)) _variant_t AddIn::GetCreator ( );
__declspec(implementation_key(669)) void AddIn::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(670)) _variant_t AddIn::GetFullName ( );
__declspec(implementation_key(671)) void AddIn::PutFullName ( const _variant_t & _val );
__declspec(implementation_key(672)) _variant_t AddIn::GetInstalled ( );
__declspec(implementation_key(673)) void AddIn::PutInstalled ( const _variant_t & _val );
__declspec(implementation_key(674)) _variant_t AddIn::GetKeywords ( );
__declspec(implementation_key(675)) void AddIn::PutKeywords ( const _variant_t & _val );
__declspec(implementation_key(676)) _variant_t AddIn::GetName ( );
__declspec(implementation_key(677)) void AddIn::PutName ( const _variant_t & _val );
__declspec(implementation_key(678)) _variant_t AddIn::GetParent ( );
__declspec(implementation_key(679)) void AddIn::PutParent ( const _variant_t & _val );
__declspec(implementation_key(680)) _variant_t AddIn::GetPath ( );
__declspec(implementation_key(681)) void AddIn::PutPath ( const _variant_t & _val );
__declspec(implementation_key(682)) _variant_t AddIn::GetSubject ( );
__declspec(implementation_key(683)) void AddIn::PutSubject ( const _variant_t & _val );
__declspec(implementation_key(684)) _variant_t AddIn::GetTitle ( );
__declspec(implementation_key(685)) void AddIn::PutTitle ( const _variant_t & _val );
__declspec(implementation_key(686)) _variant_t AddIns::_NewEnum ( );
__declspec(implementation_key(687)) _variant_t AddIns::Add ( const _variant_t & Filename, const _variant_t & CopyFile );
__declspec(implementation_key(688)) _variant_t AddIns::Application ( );
__declspec(implementation_key(689)) _variant_t AddIns::Item ( const _variant_t & Index );
__declspec(implementation_key(690)) _variant_t AddIns::GetCount ( );
__declspec(implementation_key(691)) void AddIns::PutCount ( const _variant_t & _val );
__declspec(implementation_key(692)) _variant_t AddIns::GetCreator ( );
__declspec(implementation_key(693)) void AddIns::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(694)) _variant_t AddIns::GetParent ( );
__declspec(implementation_key(695)) void AddIns::PutParent ( const _variant_t & _val );
__declspec(implementation_key(696)) _variant_t Areas::_NewEnum ( );
__declspec(implementation_key(697)) _variant_t Areas::Application ( );
__declspec(implementation_key(698)) _variant_t Areas::Item ( const _variant_t & Index );
__declspec(implementation_key(699)) _variant_t Areas::GetCount ( );
__declspec(implementation_key(700)) void Areas::PutCount ( const _variant_t & _val );
__declspec(implementation_key(701)) _variant_t Areas::GetCreator ( );
__declspec(implementation_key(702)) void Areas::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(703)) _variant_t Areas::GetParent ( );
__declspec(implementation_key(704)) void Areas::PutParent ( const _variant_t & _val );
__declspec(implementation_key(705)) _variant_t Range::_Dummy ( const _variant_t & Activate, const _variant_t & DirectObject );
__declspec(implementation_key(706)) _variant_t Range::_NewEnum ( );
__declspec(implementation_key(707)) _variant_t Range::Activate ( );
__declspec(implementation_key(708)) _variant_t Range::Address ( const _variant_t & RowAbsolute, const _variant_t & ColumnAbsolute, const _variant_t & ReferenceStyle, const _variant_t & External, const _variant_t & RelativeTo );
__declspec(implementation_key(709)) _variant_t Range::AddressLocal ( const _variant_t & RowAbsolute, const _variant_t & ColumnAbsolute, const _variant_t & ReferenceStyle, const _variant_t & External, const _variant_t & RelativeTo );
__declspec(implementation_key(710)) _variant_t Range::AdvancedFilter ( const _variant_t & Action, const _variant_t & CriteriaRange, const _variant_t & CopyToRange, const _variant_t & Unique );
__declspec(implementation_key(711)) _variant_t Range::Application ( );
__declspec(implementation_key(712)) _variant_t Range::ApplyNames ( const _variant_t & Names, const _variant_t & IgnoreRelativeAbsolute, const _variant_t & UseRowColumnNames, const _variant_t & OmitColumn, const _variant_t & OmitRow, const _variant_t & Order, const _variant_t & AppendLast );
__declspec(implementation_key(713)) _variant_t Range::ApplyOutlineStyles ( );
__declspec(implementation_key(714)) _variant_t Range::Areas ( const _variant_t & Index );
__declspec(implementation_key(715)) _variant_t Range::AutoComplete ( const _variant_t & String );
__declspec(implementation_key(716)) _variant_t Range::AutoFill ( const _variant_t & Destination, const _variant_t & Type );
__declspec(implementation_key(717)) _variant_t Range::AutoFilter ( const _variant_t & Field, const _variant_t & Criteria1, const _variant_t & Operator, const _variant_t & Criteria2 );
__declspec(implementation_key(718)) _variant_t Range::AutoFit ( );
__declspec(implementation_key(719)) _variant_t Range::AutoFormat ( const _variant_t & Format, const _variant_t & Number, const _variant_t & Font, const _variant_t & Alignment, const _variant_t & Border, const _variant_t & Pattern, const _variant_t & Width );
__declspec(implementation_key(720)) _variant_t Range::AutoOutline ( );
__declspec(implementation_key(721)) _variant_t Range::BorderAround ( const _variant_t & LineStyle, const _variant_t & Weight, const _variant_t & ColorIndex, const _variant_t & Color );
__declspec(implementation_key(722)) _variant_t Range::Borders ( const _variant_t & Index );
__declspec(implementation_key(723)) _variant_t Range::Calculate ( );
__declspec(implementation_key(724)) _variant_t Range::Cells ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(725)) _variant_t Range::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(726)) _variant_t Range::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(727)) _variant_t Range::Clear ( );
__declspec(implementation_key(728)) _variant_t Range::ClearContents ( );
__declspec(implementation_key(729)) _variant_t Range::ClearFormats ( );
__declspec(implementation_key(730)) _variant_t Range::ClearNotes ( );
__declspec(implementation_key(731)) _variant_t Range::ClearOutline ( );
__declspec(implementation_key(732)) _variant_t Range::ColumnDifferences ( const _variant_t & Comparison );
__declspec(implementation_key(733)) _variant_t Range::Columns ( const _variant_t & Index );
__declspec(implementation_key(734)) _variant_t Range::Consolidate ( const _variant_t & Sources, const _variant_t & Function, const _variant_t & TopRow, const _variant_t & LeftColumn, const _variant_t & CreateLinks );
__declspec(implementation_key(735)) _variant_t Range::Copy ( const _variant_t & Destination );
__declspec(implementation_key(736)) _variant_t Range::CopyFromRecordset ( const _variant_t & Data, const _variant_t & MaxRows, const _variant_t & MaxColumns );
__declspec(implementation_key(737)) _variant_t Range::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(738)) _variant_t Range::CreateNames ( const _variant_t & Top, const _variant_t & Left, const _variant_t & Bottom, const _variant_t & Right );
__declspec(implementation_key(739)) _variant_t Range::CreatePublisher ( const _variant_t & Edition, const _variant_t & Appearance, const _variant_t & ContainsPICT, const _variant_t & ContainsBIFF, const _variant_t & ContainsRTF, const _variant_t & ContainsVALU );
__declspec(implementation_key(740)) _variant_t Range::Cut ( const _variant_t & Destination );
__declspec(implementation_key(741)) _variant_t Range::DataSeries ( const _variant_t & Rowcol, const _variant_t & Type, const _variant_t & Date, const _variant_t & Step, const _variant_t & Stop, const _variant_t & Trend );
__declspec(implementation_key(742)) _variant_t Range::Delete ( const _variant_t & Shift );
__declspec(implementation_key(743)) _variant_t Range::DialogBoxXL ( );
__declspec(implementation_key(744)) _variant_t Range::End ( const _variant_t & Direction );
__declspec(implementation_key(745)) _variant_t Range::FillDown ( );
__declspec(implementation_key(746)) _variant_t Range::FillLeft ( );
__declspec(implementation_key(747)) _variant_t Range::FillRight ( );
__declspec(implementation_key(748)) _variant_t Range::FillUp ( );
__declspec(implementation_key(749)) _variant_t Range::Find ( const _variant_t & What, const _variant_t & After, const _variant_t & LookIn, const _variant_t & LookAt, const _variant_t & SearchOrder, const _variant_t & SearchDirection, const _variant_t & MatchCase, const _variant_t & MatchByte );
__declspec(implementation_key(750)) _variant_t Range::FindNext ( const _variant_t & After );
__declspec(implementation_key(751)) _variant_t Range::FindPrevious ( const _variant_t & After );
__declspec(implementation_key(752)) _variant_t Range::FunctionWizard ( );
__declspec(implementation_key(753)) _variant_t Range::GoalSeek ( const _variant_t & Goal, const _variant_t & ChangingCell );
__declspec(implementation_key(754)) _variant_t Range::Group ( const _variant_t & Start, const _variant_t & End, const _variant_t & By, const _variant_t & Periods );
__declspec(implementation_key(755)) _variant_t Range::Insert ( const _variant_t & Shift );
__declspec(implementation_key(756)) _variant_t Range::Item ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(757)) _variant_t Range::Justify ( );
__declspec(implementation_key(758)) _variant_t Range::ListNames ( );
__declspec(implementation_key(759)) _variant_t Range::NavigateArrow ( const _variant_t & TowardPrecedent, const _variant_t & ArrowNumber, const _variant_t & LinkNumber );
__declspec(implementation_key(760)) _variant_t Range::NoteText ( const _variant_t & Text, const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(761)) _variant_t Range::Offset ( const _variant_t & RowOffset, const _variant_t & ColumnOffset );
__declspec(implementation_key(762)) _variant_t Range::Parse ( const _variant_t & ParseLine, const _variant_t & Destination );
__declspec(implementation_key(763)) _variant_t Range::PasteSpecial ( const _variant_t & Paste, const _variant_t & Operation, const _variant_t & SkipBlanks, const _variant_t & Transpose );
__declspec(implementation_key(764)) _variant_t Range::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(765)) _variant_t Range::PrintPreview ( );
__declspec(implementation_key(766)) _variant_t Range::_Range ( const _variant_t & Cell1, const _variant_t & Cell2 );
__declspec(implementation_key(767)) _variant_t Range::RemoveSubtotal ( );
__declspec(implementation_key(768)) _variant_t Range::Replace ( const _variant_t & What, const _variant_t & Replacement, const _variant_t & LookAt, const _variant_t & SearchOrder, const _variant_t & MatchCase, const _variant_t & MatchByte );
__declspec(implementation_key(769)) _variant_t Range::Resize ( const _variant_t & RowSize, const _variant_t & ColumnSize );
__declspec(implementation_key(770)) _variant_t Range::RowDifferences ( const _variant_t & Comparison );
__declspec(implementation_key(771)) _variant_t Range::Rows ( const _variant_t & Index );
__declspec(implementation_key(772)) _variant_t Range::Run ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(773)) _variant_t Range::Select ( );
__declspec(implementation_key(774)) _variant_t Range::Show ( );
__declspec(implementation_key(775)) _variant_t Range::ShowDependents ( const _variant_t & Remove );
__declspec(implementation_key(776)) _variant_t Range::ShowErrors ( );
__declspec(implementation_key(777)) _variant_t Range::ShowPrecedents ( const _variant_t & Remove );
__declspec(implementation_key(778)) _variant_t Range::Sort ( const _variant_t & Key1, const _variant_t & Order1, const _variant_t & Key2, const _variant_t & Type, const _variant_t & Order2, const _variant_t & Key3, const _variant_t & Order3, const _variant_t & Header, const _variant_t & OrderCustom, const _variant_t & MatchCase, const _variant_t & Orientation );
__declspec(implementation_key(779)) _variant_t Range::SortSpecial ( const _variant_t & SortMethod, const _variant_t & Key1, const _variant_t & Order1, const _variant_t & Type, const _variant_t & Key2, const _variant_t & Order2, const _variant_t & Key3, const _variant_t & Order3, const _variant_t & Header, const _variant_t & OrderCustom, const _variant_t & MatchCase, const _variant_t & Orientation );
__declspec(implementation_key(780)) _variant_t Range::SpecialCells ( const _variant_t & Type, const _variant_t & Value );
__declspec(implementation_key(781)) _variant_t Range::SubscribeTo ( const _variant_t & Edition, const _variant_t & Format );
__declspec(implementation_key(782)) _variant_t Range::Subtotal ( const _variant_t & GroupBy, const _variant_t & Function, const _variant_t & TotalList, const _variant_t & Replace, const _variant_t & PageBreaks, const _variant_t & SummaryBelowData );
__declspec(implementation_key(783)) _variant_t Range::Table ( const _variant_t & RowInput, const _variant_t & ColumnInput );
__declspec(implementation_key(784)) _variant_t Range::TextToColumns ( const _variant_t & Destination, const _variant_t & DataType, const _variant_t & TextQualifier, const _variant_t & ConsecutiveDelimiter, const _variant_t & Tab, const _variant_t & Semicolon, const _variant_t & Comma, const _variant_t & Space, const _variant_t & Other, const _variant_t & OtherChar, const _variant_t & FieldInfo );
__declspec(implementation_key(785)) _variant_t Range::Ungroup ( );
__declspec(implementation_key(786)) _variant_t Range::Worksheet ( );
__declspec(implementation_key(787)) _variant_t Range::GetAddIndent ( );
__declspec(implementation_key(788)) void Range::PutAddIndent ( const _variant_t & _val );
__declspec(implementation_key(789)) _variant_t Range::GetColumn ( );
__declspec(implementation_key(790)) void Range::PutColumn ( const _variant_t & _val );
__declspec(implementation_key(791)) _variant_t Range::GetColumnWidth ( );
__declspec(implementation_key(792)) void Range::PutColumnWidth ( const _variant_t & _val );
__declspec(implementation_key(793)) _variant_t Range::GetCount ( );
__declspec(implementation_key(794)) void Range::PutCount ( const _variant_t & _val );
__declspec(implementation_key(795)) _variant_t Range::GetCreator ( );
__declspec(implementation_key(796)) void Range::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(797)) _variant_t Range::GetCurrentArray ( );
__declspec(implementation_key(798)) void Range::PutCurrentArray ( const _variant_t & _val );
__declspec(implementation_key(799)) _variant_t Range::GetCurrentRegion ( );
__declspec(implementation_key(800)) void Range::PutCurrentRegion ( const _variant_t & _val );
__declspec(implementation_key(801)) _variant_t Range::GetDependents ( );
__declspec(implementation_key(802)) void Range::PutDependents ( const _variant_t & _val );
__declspec(implementation_key(803)) _variant_t Range::GetDirectDependents ( );
__declspec(implementation_key(804)) void Range::PutDirectDependents ( const _variant_t & _val );
__declspec(implementation_key(805)) _variant_t Range::GetDirectPrecedents ( );
__declspec(implementation_key(806)) void Range::PutDirectPrecedents ( const _variant_t & _val );
__declspec(implementation_key(807)) _variant_t Range::GetEntireColumn ( );
__declspec(implementation_key(808)) void Range::PutEntireColumn ( const _variant_t & _val );
__declspec(implementation_key(809)) _variant_t Range::GetEntireRow ( );
__declspec(implementation_key(810)) void Range::PutEntireRow ( const _variant_t & _val );
__declspec(implementation_key(811)) _variant_t Range::GetFont ( );
__declspec(implementation_key(812)) void Range::PutFont ( const _variant_t & _val );
__declspec(implementation_key(813)) _variant_t Range::GetFormula ( );
__declspec(implementation_key(814)) void Range::PutFormula ( const _variant_t & _val );
__declspec(implementation_key(815)) _variant_t Range::GetFormulaArray ( );
__declspec(implementation_key(816)) void Range::PutFormulaArray ( const _variant_t & _val );
__declspec(implementation_key(817)) _variant_t Range::GetFormulaHidden ( );
__declspec(implementation_key(818)) void Range::PutFormulaHidden ( const _variant_t & _val );
__declspec(implementation_key(819)) _variant_t Range::GetFormulaLocal ( );
__declspec(implementation_key(820)) void Range::PutFormulaLocal ( const _variant_t & _val );
__declspec(implementation_key(821)) _variant_t Range::GetFormulaR1C1 ( );
__declspec(implementation_key(822)) void Range::PutFormulaR1C1 ( const _variant_t & _val );
__declspec(implementation_key(823)) _variant_t Range::GetFormulaR1C1Local ( );
__declspec(implementation_key(824)) void Range::PutFormulaR1C1Local ( const _variant_t & _val );
__declspec(implementation_key(825)) _variant_t Range::GetHasArray ( );
__declspec(implementation_key(826)) void Range::PutHasArray ( const _variant_t & _val );
__declspec(implementation_key(827)) _variant_t Range::GetHasFormula ( );
__declspec(implementation_key(828)) void Range::PutHasFormula ( const _variant_t & _val );
__declspec(implementation_key(829)) _variant_t Range::GetHeight ( );
__declspec(implementation_key(830)) void Range::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(831)) _variant_t Range::GetHidden ( );
__declspec(implementation_key(832)) void Range::PutHidden ( const _variant_t & _val );
__declspec(implementation_key(833)) _variant_t Range::GetHorizontalAlignment ( );
__declspec(implementation_key(834)) void Range::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(835)) _variant_t Range::GetInterior ( );
__declspec(implementation_key(836)) void Range::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(837)) _variant_t Range::GetLeft ( );
__declspec(implementation_key(838)) void Range::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(839)) _variant_t Range::GetListHeaderRows ( );
__declspec(implementation_key(840)) void Range::PutListHeaderRows ( const _variant_t & _val );
__declspec(implementation_key(841)) _variant_t Range::GetLocationInTable ( );
__declspec(implementation_key(842)) void Range::PutLocationInTable ( const _variant_t & _val );
__declspec(implementation_key(843)) _variant_t Range::GetLocked ( );
__declspec(implementation_key(844)) void Range::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(845)) _variant_t Range::GetName ( );
__declspec(implementation_key(846)) void Range::PutName ( const _variant_t & _val );
__declspec(implementation_key(847)) _variant_t Range::GetNext ( );
__declspec(implementation_key(848)) void Range::PutNext ( const _variant_t & _val );
__declspec(implementation_key(849)) _variant_t Range::GetNumberFormat ( );
__declspec(implementation_key(850)) void Range::PutNumberFormat ( const _variant_t & _val );
__declspec(implementation_key(851)) _variant_t Range::GetNumberFormatLocal ( );
__declspec(implementation_key(852)) void Range::PutNumberFormatLocal ( const _variant_t & _val );
__declspec(implementation_key(853)) _variant_t Range::GetOrientation ( );
__declspec(implementation_key(854)) void Range::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(855)) _variant_t Range::GetOutlineLevel ( );
__declspec(implementation_key(856)) void Range::PutOutlineLevel ( const _variant_t & _val );
__declspec(implementation_key(857)) _variant_t Range::GetPageBreak ( );
__declspec(implementation_key(858)) void Range::PutPageBreak ( const _variant_t & _val );
__declspec(implementation_key(859)) _variant_t Range::GetParent ( );
__declspec(implementation_key(860)) void Range::PutParent ( const _variant_t & _val );
__declspec(implementation_key(861)) _variant_t Range::GetPivotField ( );
__declspec(implementation_key(862)) void Range::PutPivotField ( const _variant_t & _val );
__declspec(implementation_key(863)) _variant_t Range::GetPivotItem ( );
__declspec(implementation_key(864)) void Range::PutPivotItem ( const _variant_t & _val );
__declspec(implementation_key(865)) _variant_t Range::GetPivotTable ( );
__declspec(implementation_key(866)) void Range::PutPivotTable ( const _variant_t & _val );
__declspec(implementation_key(867)) _variant_t Range::GetPrecedents ( );
__declspec(implementation_key(868)) void Range::PutPrecedents ( const _variant_t & _val );
__declspec(implementation_key(869)) _variant_t Range::GetPrefixCharacter ( );
__declspec(implementation_key(870)) void Range::PutPrefixCharacter ( const _variant_t & _val );
__declspec(implementation_key(871)) _variant_t Range::GetPrevious ( );
__declspec(implementation_key(872)) void Range::PutPrevious ( const _variant_t & _val );
__declspec(implementation_key(873)) _variant_t Range::GetRow ( );
__declspec(implementation_key(874)) void Range::PutRow ( const _variant_t & _val );
__declspec(implementation_key(875)) _variant_t Range::GetRowHeight ( );
__declspec(implementation_key(876)) void Range::PutRowHeight ( const _variant_t & _val );
__declspec(implementation_key(877)) _variant_t Range::GetShowDetail ( );
__declspec(implementation_key(878)) void Range::PutShowDetail ( const _variant_t & _val );
__declspec(implementation_key(879)) _variant_t Range::GetSoundNote ( );
__declspec(implementation_key(880)) void Range::PutSoundNote ( const _variant_t & _val );
__declspec(implementation_key(881)) _variant_t Range::GetStyle ( );
__declspec(implementation_key(882)) void Range::PutStyle ( const _variant_t & _val );
__declspec(implementation_key(883)) _variant_t Range::GetSummary ( );
__declspec(implementation_key(884)) void Range::PutSummary ( const _variant_t & _val );
__declspec(implementation_key(885)) _variant_t Range::GetText ( );
__declspec(implementation_key(886)) void Range::PutText ( const _variant_t & _val );
__declspec(implementation_key(887)) _variant_t Range::GetTop ( );
__declspec(implementation_key(888)) void Range::PutTop ( const _variant_t & _val );
__declspec(implementation_key(889)) _variant_t Range::GetUseStandardHeight ( );
__declspec(implementation_key(890)) void Range::PutUseStandardHeight ( const _variant_t & _val );
__declspec(implementation_key(891)) _variant_t Range::GetUseStandardWidth ( );
__declspec(implementation_key(892)) void Range::PutUseStandardWidth ( const _variant_t & _val );
__declspec(implementation_key(893)) _variant_t Range::GetValue ( );
__declspec(implementation_key(894)) void Range::PutValue ( const _variant_t & _val );
__declspec(implementation_key(895)) _variant_t Range::GetVerticalAlignment ( );
__declspec(implementation_key(896)) void Range::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(897)) _variant_t Range::GetWidth ( );
__declspec(implementation_key(898)) void Range::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(899)) _variant_t Range::GetWrapText ( );
__declspec(implementation_key(900)) void Range::PutWrapText ( const _variant_t & _val );
__declspec(implementation_key(901)) _variant_t Workbook::Activate ( );
__declspec(implementation_key(902)) _variant_t Workbook::Application ( );
__declspec(implementation_key(903)) _variant_t Workbook::BuiltinDocumentProperties ( const _variant_t & Index );
__declspec(implementation_key(904)) _variant_t Workbook::ChangeFileAccess ( const _variant_t & Mode, const _variant_t & WritePassword, const _variant_t & Notify );
__declspec(implementation_key(905)) _variant_t Workbook::ChangeLink ( const _variant_t & Name, const _variant_t & NewName, const _variant_t & Type );
__declspec(implementation_key(906)) _variant_t Workbook::Charts ( const _variant_t & Index );
__declspec(implementation_key(907)) _variant_t Workbook::Close ( const _variant_t & SaveChanges, const _variant_t & Filename, const _variant_t & RouteWorkbook );
__declspec(implementation_key(908)) _variant_t Workbook::CustomDocumentProperties ( const _variant_t & Index );
__declspec(implementation_key(909)) _variant_t Workbook::DeleteNumberFormat ( const _variant_t & NumberFormat );
__declspec(implementation_key(910)) _variant_t Workbook::DialogSheets ( const _variant_t & Index );
__declspec(implementation_key(911)) _variant_t Workbook::Excel4IntlMacroSheets ( const _variant_t & Index );
__declspec(implementation_key(912)) _variant_t Workbook::Excel4MacroSheets ( const _variant_t & Index );
__declspec(implementation_key(913)) _variant_t Workbook::ExclusiveAccess ( );
__declspec(implementation_key(914)) _variant_t Workbook::ForwardMailer ( );
__declspec(implementation_key(915)) _variant_t Workbook::LinkInfo ( const _variant_t & Name, const _variant_t & LinkInfo, const _variant_t & Type, const _variant_t & EditionRef );
__declspec(implementation_key(916)) _variant_t Workbook::LinkSources ( const _variant_t & Type );
__declspec(implementation_key(917)) _variant_t Workbook::Modules ( const _variant_t & Index );
__declspec(implementation_key(918)) _variant_t Workbook::Names ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo );
__declspec(implementation_key(919)) _variant_t Workbook::NewWindow ( );
__declspec(implementation_key(920)) _variant_t Workbook::OpenLinks ( const _variant_t & Name, const _variant_t & ReadOnly, const _variant_t & Type );
__declspec(implementation_key(921)) _variant_t Workbook::Post ( const _variant_t & DestName );
__declspec(implementation_key(922)) _variant_t Workbook::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(923)) _variant_t Workbook::PrintPreview ( );
__declspec(implementation_key(924)) _variant_t Workbook::Protect ( const _variant_t & Password, const _variant_t & Structure, const _variant_t & Windows );
__declspec(implementation_key(925)) _variant_t Workbook::Reply ( );
__declspec(implementation_key(926)) _variant_t Workbook::ReplyAll ( );
__declspec(implementation_key(927)) _variant_t Workbook::Route ( );
__declspec(implementation_key(928)) _variant_t Workbook::RunAutoMacros ( const _variant_t & Which );
__declspec(implementation_key(929)) _variant_t Workbook::Save ( );
__declspec(implementation_key(930)) _variant_t Workbook::SaveAs ( const _variant_t & Filename, const _variant_t & FileFormat, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ReadOnlyRecommended, const _variant_t & CreateBackup, const _variant_t & AccessMode, const _variant_t & ConflictResolution );
__declspec(implementation_key(931)) _variant_t Workbook::SaveCopyAs ( const _variant_t & Filename );
__declspec(implementation_key(932)) _variant_t Workbook::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt );
__declspec(implementation_key(933)) _variant_t Workbook::SendMailer ( const _variant_t & FileFormat, const _variant_t & Priority );
__declspec(implementation_key(934)) _variant_t Workbook::SetLinkOnData ( const _variant_t & Name, const _variant_t & Procedure );
__declspec(implementation_key(935)) _variant_t Workbook::Sheets ( const _variant_t & Index );
__declspec(implementation_key(936)) _variant_t Workbook::Styles ( const _variant_t & Index );
__declspec(implementation_key(937)) _variant_t Workbook::Unprotect ( const _variant_t & Password );
__declspec(implementation_key(938)) _variant_t Workbook::UpdateFromFile ( );
__declspec(implementation_key(939)) _variant_t Workbook::UpdateLink ( const _variant_t & Name, const _variant_t & Type );
__declspec(implementation_key(940)) _variant_t Workbook::Windows ( const _variant_t & Index );
__declspec(implementation_key(941)) _variant_t Workbook::Worksheets ( const _variant_t & Index );
__declspec(implementation_key(942)) _variant_t Workbook::GetActiveChart ( );
__declspec(implementation_key(943)) void Workbook::PutActiveChart ( const _variant_t & _val );
__declspec(implementation_key(944)) _variant_t Workbook::GetActiveSheet ( );
__declspec(implementation_key(945)) void Workbook::PutActiveSheet ( const _variant_t & _val );
__declspec(implementation_key(946)) _variant_t Workbook::GetAuthor ( );
__declspec(implementation_key(947)) void Workbook::PutAuthor ( const _variant_t & _val );
__declspec(implementation_key(948)) _variant_t Workbook::GetColors ( );
__declspec(implementation_key(949)) void Workbook::PutColors ( const _variant_t & _val );
__declspec(implementation_key(950)) _variant_t Workbook::GetComments ( );
__declspec(implementation_key(951)) void Workbook::PutComments ( const _variant_t & _val );
__declspec(implementation_key(952)) _variant_t Workbook::GetContainer ( );
__declspec(implementation_key(953)) void Workbook::PutContainer ( const _variant_t & _val );
__declspec(implementation_key(954)) _variant_t Workbook::GetCreateBackup ( );
__declspec(implementation_key(955)) void Workbook::PutCreateBackup ( const _variant_t & _val );
__declspec(implementation_key(956)) _variant_t Workbook::GetCreator ( );
__declspec(implementation_key(957)) void Workbook::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(958)) _variant_t Workbook::GetDate1904 ( );
__declspec(implementation_key(959)) void Workbook::PutDate1904 ( const _variant_t & _val );
__declspec(implementation_key(960)) _variant_t Workbook::GetDisplayDrawingObjects ( );
__declspec(implementation_key(961)) void Workbook::PutDisplayDrawingObjects ( const _variant_t & _val );
__declspec(implementation_key(962)) _variant_t Workbook::GetFileFormat ( );
__declspec(implementation_key(963)) void Workbook::PutFileFormat ( const _variant_t & _val );
__declspec(implementation_key(964)) _variant_t Workbook::GetFullName ( );
__declspec(implementation_key(965)) void Workbook::PutFullName ( const _variant_t & _val );
__declspec(implementation_key(966)) _variant_t Workbook::GetHasMailer ( );
__declspec(implementation_key(967)) void Workbook::PutHasMailer ( const _variant_t & _val );
__declspec(implementation_key(968)) _variant_t Workbook::GetHasPassword ( );
__declspec(implementation_key(969)) void Workbook::PutHasPassword ( const _variant_t & _val );
__declspec(implementation_key(970)) _variant_t Workbook::GetHasRoutingSlip ( );
__declspec(implementation_key(971)) void Workbook::PutHasRoutingSlip ( const _variant_t & _val );
__declspec(implementation_key(972)) _variant_t Workbook::GetKeywords ( );
__declspec(implementation_key(973)) void Workbook::PutKeywords ( const _variant_t & _val );
__declspec(implementation_key(974)) _variant_t Workbook::GetMailer ( );
__declspec(implementation_key(975)) void Workbook::PutMailer ( const _variant_t & _val );
__declspec(implementation_key(976)) _variant_t Workbook::GetMultiUserEditing ( );
__declspec(implementation_key(977)) void Workbook::PutMultiUserEditing ( const _variant_t & _val );
__declspec(implementation_key(978)) _variant_t Workbook::GetName ( );
__declspec(implementation_key(979)) void Workbook::PutName ( const _variant_t & _val );
__declspec(implementation_key(980)) _variant_t Workbook::GetOnSave ( );
__declspec(implementation_key(981)) void Workbook::PutOnSave ( const _variant_t & _val );
__declspec(implementation_key(982)) _variant_t Workbook::GetOnSheetActivate ( );
__declspec(implementation_key(983)) void Workbook::PutOnSheetActivate ( const _variant_t & _val );
__declspec(implementation_key(984)) _variant_t Workbook::GetOnSheetDeactivate ( );
__declspec(implementation_key(985)) void Workbook::PutOnSheetDeactivate ( const _variant_t & _val );
__declspec(implementation_key(986)) _variant_t Workbook::GetParent ( );
__declspec(implementation_key(987)) void Workbook::PutParent ( const _variant_t & _val );
__declspec(implementation_key(988)) _variant_t Workbook::GetPath ( );
__declspec(implementation_key(989)) void Workbook::PutPath ( const _variant_t & _val );
__declspec(implementation_key(990)) _variant_t Workbook::GetPrecisionAsDisplayed ( );
__declspec(implementation_key(991)) void Workbook::PutPrecisionAsDisplayed ( const _variant_t & _val );
__declspec(implementation_key(992)) _variant_t Workbook::GetProtectStructure ( );
__declspec(implementation_key(993)) void Workbook::PutProtectStructure ( const _variant_t & _val );
__declspec(implementation_key(994)) _variant_t Workbook::GetProtectWindows ( );
__declspec(implementation_key(995)) void Workbook::PutProtectWindows ( const _variant_t & _val );
__declspec(implementation_key(996)) _variant_t Workbook::GetReadOnly ( );
__declspec(implementation_key(997)) void Workbook::PutReadOnly ( const _variant_t & _val );
__declspec(implementation_key(998)) _variant_t Workbook::GetReadOnlyRecommended ( );
__declspec(implementation_key(999)) void Workbook::PutReadOnlyRecommended ( const _variant_t & _val );
__declspec(implementation_key(1000)) _variant_t Workbook::GetRevisionNumber ( );
__declspec(implementation_key(1001)) void Workbook::PutRevisionNumber ( const _variant_t & _val );
__declspec(implementation_key(1002)) _variant_t Workbook::GetRouted ( );
__declspec(implementation_key(1003)) void Workbook::PutRouted ( const _variant_t & _val );
__declspec(implementation_key(1004)) _variant_t Workbook::GetRoutingSlip ( );
__declspec(implementation_key(1005)) void Workbook::PutRoutingSlip ( const _variant_t & _val );
__declspec(implementation_key(1006)) _variant_t Workbook::GetSaved ( );
__declspec(implementation_key(1007)) void Workbook::PutSaved ( const _variant_t & _val );
__declspec(implementation_key(1008)) _variant_t Workbook::GetSaveLinkValues ( );
__declspec(implementation_key(1009)) void Workbook::PutSaveLinkValues ( const _variant_t & _val );
__declspec(implementation_key(1010)) _variant_t Workbook::GetShowConflictHistory ( );
__declspec(implementation_key(1011)) void Workbook::PutShowConflictHistory ( const _variant_t & _val );
__declspec(implementation_key(1012)) _variant_t Workbook::GetSubject ( );
__declspec(implementation_key(1013)) void Workbook::PutSubject ( const _variant_t & _val );
__declspec(implementation_key(1014)) _variant_t Workbook::GetTitle ( );
__declspec(implementation_key(1015)) void Workbook::PutTitle ( const _variant_t & _val );
__declspec(implementation_key(1016)) _variant_t Workbook::GetUpdateRemoteReferences ( );
__declspec(implementation_key(1017)) void Workbook::PutUpdateRemoteReferences ( const _variant_t & _val );
__declspec(implementation_key(1018)) _variant_t Workbook::GetUserStatus ( );
__declspec(implementation_key(1019)) void Workbook::PutUserStatus ( const _variant_t & _val );
__declspec(implementation_key(1020)) _variant_t Workbook::GetWriteReserved ( );
__declspec(implementation_key(1021)) void Workbook::PutWriteReserved ( const _variant_t & _val );
__declspec(implementation_key(1022)) _variant_t Workbook::GetWriteReservedBy ( );
__declspec(implementation_key(1023)) void Workbook::PutWriteReservedBy ( const _variant_t & _val );
__declspec(implementation_key(1024)) _variant_t Workbooks::_NewEnum ( );
__declspec(implementation_key(1025)) _variant_t Workbooks::Add ( const _variant_t & Template );
__declspec(implementation_key(1026)) _variant_t Workbooks::Application ( );
__declspec(implementation_key(1027)) _variant_t Workbooks::Close ( );
__declspec(implementation_key(1028)) _variant_t Workbooks::Item ( const _variant_t & Index );
__declspec(implementation_key(1029)) _variant_t Workbooks::Open ( const _variant_t & Filename, const _variant_t & UpdateLinks, const _variant_t & ReadOnly, const _variant_t & Format, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & IgnoreReadOnlyRecommended, const _variant_t & Origin, const _variant_t & Delimiter, const _variant_t & Editable, const _variant_t & Notify, const _variant_t & Converter );
__declspec(implementation_key(1030)) _variant_t Workbooks::OpenText ( const _variant_t & Filename, const _variant_t & Origin, const _variant_t & StartRow, const _variant_t & DataType, const _variant_t & TextQualifier, const _variant_t & ConsecutiveDelimiter, const _variant_t & Tab, const _variant_t & Semicolon, const _variant_t & Comma, const _variant_t & Space, const _variant_t & Other, const _variant_t & OtherChar, const _variant_t & FieldInfo );
__declspec(implementation_key(1031)) _variant_t Workbooks::GetCount ( );
__declspec(implementation_key(1032)) void Workbooks::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1033)) _variant_t Workbooks::GetCreator ( );
__declspec(implementation_key(1034)) void Workbooks::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1035)) _variant_t Workbooks::GetParent ( );
__declspec(implementation_key(1036)) void Workbooks::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1037)) _variant_t Sheets::_NewEnum ( );
__declspec(implementation_key(1038)) _variant_t Sheets::Add ( const _variant_t & Before, const _variant_t & After, const _variant_t & Count, const _variant_t & Type );
__declspec(implementation_key(1039)) _variant_t Sheets::Application ( );
__declspec(implementation_key(1040)) _variant_t Sheets::Copy ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(1041)) _variant_t Sheets::Delete ( );
__declspec(implementation_key(1042)) _variant_t Sheets::FillAcrossSheets ( const _variant_t & Range, const _variant_t & Type );
__declspec(implementation_key(1043)) _variant_t Sheets::Item ( const _variant_t & Index );
__declspec(implementation_key(1044)) _variant_t Sheets::Move ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(1045)) _variant_t Sheets::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(1046)) _variant_t Sheets::PrintPreview ( );
__declspec(implementation_key(1047)) _variant_t Sheets::Select ( const _variant_t & Replace );
__declspec(implementation_key(1048)) _variant_t Sheets::GetCount ( );
__declspec(implementation_key(1049)) void Sheets::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1050)) _variant_t Sheets::GetCreator ( );
__declspec(implementation_key(1051)) void Sheets::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1052)) _variant_t Sheets::GetParent ( );
__declspec(implementation_key(1053)) void Sheets::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1054)) _variant_t Sheets::GetVisible ( );
__declspec(implementation_key(1055)) void Sheets::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(1056)) _variant_t Worksheet::Activate ( );
__declspec(implementation_key(1057)) _variant_t Worksheet::Application ( );
__declspec(implementation_key(1058)) _variant_t Worksheet::Arcs ( const _variant_t & Index );
__declspec(implementation_key(1059)) _variant_t Worksheet::Buttons ( const _variant_t & Index );
__declspec(implementation_key(1060)) _variant_t Worksheet::Calculate ( );
__declspec(implementation_key(1061)) _variant_t Worksheet::Cells ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(1062)) _variant_t Worksheet::ChartObjects ( const _variant_t & Index );
__declspec(implementation_key(1063)) _variant_t Worksheet::CheckBoxes ( const _variant_t & Index );
__declspec(implementation_key(1064)) _variant_t Worksheet::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(1065)) _variant_t Worksheet::ClearArrows ( );
__declspec(implementation_key(1066)) _variant_t Worksheet::Columns ( const _variant_t & Index );
__declspec(implementation_key(1067)) _variant_t Worksheet::Copy ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(1068)) _variant_t Worksheet::Delete ( );
__declspec(implementation_key(1069)) _variant_t Worksheet::DrawingObjects ( const _variant_t & Index );
__declspec(implementation_key(1070)) _variant_t Worksheet::Drawings ( const _variant_t & Index );
__declspec(implementation_key(1071)) _variant_t Worksheet::DropDowns ( const _variant_t & Index );
__declspec(implementation_key(1072)) _variant_t Worksheet::_Evaluate ( const _variant_t & Name );
__declspec(implementation_key(1073)) _variant_t Worksheet::Evaluate ( const _variant_t & Name );
__declspec(implementation_key(1074)) _variant_t Worksheet::GroupBoxes ( const _variant_t & Index );
__declspec(implementation_key(1075)) _variant_t Worksheet::GroupObjects ( const _variant_t & Index );
__declspec(implementation_key(1076)) _variant_t Worksheet::Labels ( const _variant_t & Index );
__declspec(implementation_key(1077)) _variant_t Worksheet::Lines ( const _variant_t & Index );
__declspec(implementation_key(1078)) _variant_t Worksheet::ListBoxes ( const _variant_t & Index );
__declspec(implementation_key(1079)) _variant_t Worksheet::Move ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(1080)) _variant_t Worksheet::Names ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo );
__declspec(implementation_key(1081)) _variant_t Worksheet::OLEObjects ( const _variant_t & Index );
__declspec(implementation_key(1082)) _variant_t Worksheet::OptionButtons ( const _variant_t & Index );
__declspec(implementation_key(1083)) _variant_t Worksheet::Ovals ( const _variant_t & Index );
__declspec(implementation_key(1084)) _variant_t Worksheet::Paste ( const _variant_t & Destination, const _variant_t & Link );
__declspec(implementation_key(1085)) _variant_t Worksheet::PasteSpecial ( const _variant_t & Format, const _variant_t & Link, const _variant_t & DisplayAsIcon, const _variant_t & IconFileName, const _variant_t & IconIndex, const _variant_t & IconLabel );
__declspec(implementation_key(1086)) _variant_t Worksheet::Pictures ( const _variant_t & Index );
__declspec(implementation_key(1087)) _variant_t Worksheet::PivotTables ( const _variant_t & Index );
__declspec(implementation_key(1088)) _variant_t Worksheet::PivotTableWizard ( const _variant_t & SourceType, const _variant_t & SourceData, const _variant_t & TableDestination, const _variant_t & TableName, const _variant_t & RowGrand, const _variant_t & ColumnGrand, const _variant_t & SaveData, const _variant_t & HasAutoFormat, const _variant_t & AutoPage, const _variant_t & Reserved );
__declspec(implementation_key(1089)) _variant_t Worksheet::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(1090)) _variant_t Worksheet::PrintPreview ( );
__declspec(implementation_key(1091)) _variant_t Worksheet::Protect ( const _variant_t & Password, const _variant_t & DrawingObjects, const _variant_t & Contents, const _variant_t & Scenarios, const _variant_t & UserInterfaceOnly );
__declspec(implementation_key(1092)) _variant_t Worksheet::Range ( const _variant_t & Cell1, const _variant_t & Cell2 );
__declspec(implementation_key(1093)) _variant_t Worksheet::Rectangles ( const _variant_t & Index );
__declspec(implementation_key(1094)) _variant_t Worksheet::Rows ( const _variant_t & Index );
__declspec(implementation_key(1095)) _variant_t Worksheet::SaveAs ( const _variant_t & Filename, const _variant_t & FileFormat, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ReadOnlyRecommended, const _variant_t & CreateBackup );
__declspec(implementation_key(1096)) _variant_t Worksheet::Scenarios ( const _variant_t & Index );
__declspec(implementation_key(1097)) _variant_t Worksheet::ScrollBars ( const _variant_t & Index );
__declspec(implementation_key(1098)) _variant_t Worksheet::Select ( const _variant_t & Replace );
__declspec(implementation_key(1099)) _variant_t Worksheet::SetBackgroundPicture ( const _variant_t & Filename );
__declspec(implementation_key(1100)) _variant_t Worksheet::ShowAllData ( );
__declspec(implementation_key(1101)) _variant_t Worksheet::ShowDataForm ( );
__declspec(implementation_key(1102)) _variant_t Worksheet::Spinners ( const _variant_t & Index );
__declspec(implementation_key(1103)) _variant_t Worksheet::TextBoxes ( const _variant_t & Index );
__declspec(implementation_key(1104)) _variant_t Worksheet::Unprotect ( const _variant_t & Password );
__declspec(implementation_key(1105)) _variant_t Worksheet::GetAutoFilterMode ( );
__declspec(implementation_key(1106)) void Worksheet::PutAutoFilterMode ( const _variant_t & _val );
__declspec(implementation_key(1107)) _variant_t Worksheet::GetCircularReference ( );
__declspec(implementation_key(1108)) void Worksheet::PutCircularReference ( const _variant_t & _val );
__declspec(implementation_key(1109)) _variant_t Worksheet::GetConsolidationFunction ( );
__declspec(implementation_key(1110)) void Worksheet::PutConsolidationFunction ( const _variant_t & _val );
__declspec(implementation_key(1111)) _variant_t Worksheet::GetConsolidationOptions ( );
__declspec(implementation_key(1112)) void Worksheet::PutConsolidationOptions ( const _variant_t & _val );
__declspec(implementation_key(1113)) _variant_t Worksheet::GetConsolidationSources ( );
__declspec(implementation_key(1114)) void Worksheet::PutConsolidationSources ( const _variant_t & _val );
__declspec(implementation_key(1115)) _variant_t Worksheet::GetCreator ( );
__declspec(implementation_key(1116)) void Worksheet::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1117)) _variant_t Worksheet::GetDisplayAutomaticPageBreaks ( );
__declspec(implementation_key(1118)) void Worksheet::PutDisplayAutomaticPageBreaks ( const _variant_t & _val );
__declspec(implementation_key(1119)) _variant_t Worksheet::GetEnableAutoFilter ( );
__declspec(implementation_key(1120)) void Worksheet::PutEnableAutoFilter ( const _variant_t & _val );
__declspec(implementation_key(1121)) _variant_t Worksheet::GetEnableOutlining ( );
__declspec(implementation_key(1122)) void Worksheet::PutEnableOutlining ( const _variant_t & _val );
__declspec(implementation_key(1123)) _variant_t Worksheet::GetEnablePivotTable ( );
__declspec(implementation_key(1124)) void Worksheet::PutEnablePivotTable ( const _variant_t & _val );
__declspec(implementation_key(1125)) _variant_t Worksheet::GetFilterMode ( );
__declspec(implementation_key(1126)) void Worksheet::PutFilterMode ( const _variant_t & _val );
__declspec(implementation_key(1127)) _variant_t Worksheet::GetIndex ( );
__declspec(implementation_key(1128)) void Worksheet::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(1129)) _variant_t Worksheet::GetName ( );
__declspec(implementation_key(1130)) void Worksheet::PutName ( const _variant_t & _val );
__declspec(implementation_key(1131)) _variant_t Worksheet::GetNext ( );
__declspec(implementation_key(1132)) void Worksheet::PutNext ( const _variant_t & _val );
__declspec(implementation_key(1133)) _variant_t Worksheet::GetOnCalculate ( );
__declspec(implementation_key(1134)) void Worksheet::PutOnCalculate ( const _variant_t & _val );
__declspec(implementation_key(1135)) _variant_t Worksheet::GetOnData ( );
__declspec(implementation_key(1136)) void Worksheet::PutOnData ( const _variant_t & _val );
__declspec(implementation_key(1137)) _variant_t Worksheet::GetOnDoubleClick ( );
__declspec(implementation_key(1138)) void Worksheet::PutOnDoubleClick ( const _variant_t & _val );
__declspec(implementation_key(1139)) _variant_t Worksheet::GetOnEntry ( );
__declspec(implementation_key(1140)) void Worksheet::PutOnEntry ( const _variant_t & _val );
__declspec(implementation_key(1141)) _variant_t Worksheet::GetOnSheetActivate ( );
__declspec(implementation_key(1142)) void Worksheet::PutOnSheetActivate ( const _variant_t & _val );
__declspec(implementation_key(1143)) _variant_t Worksheet::GetOnSheetDeactivate ( );
__declspec(implementation_key(1144)) void Worksheet::PutOnSheetDeactivate ( const _variant_t & _val );
__declspec(implementation_key(1145)) _variant_t Worksheet::GetOutline ( );
__declspec(implementation_key(1146)) void Worksheet::PutOutline ( const _variant_t & _val );
__declspec(implementation_key(1147)) _variant_t Worksheet::GetPageSetup ( );
__declspec(implementation_key(1148)) void Worksheet::PutPageSetup ( const _variant_t & _val );
__declspec(implementation_key(1149)) _variant_t Worksheet::GetParent ( );
__declspec(implementation_key(1150)) void Worksheet::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1151)) _variant_t Worksheet::GetPrevious ( );
__declspec(implementation_key(1152)) void Worksheet::PutPrevious ( const _variant_t & _val );
__declspec(implementation_key(1153)) _variant_t Worksheet::GetProtectContents ( );
__declspec(implementation_key(1154)) void Worksheet::PutProtectContents ( const _variant_t & _val );
__declspec(implementation_key(1155)) _variant_t Worksheet::GetProtectDrawingObjects ( );
__declspec(implementation_key(1156)) void Worksheet::PutProtectDrawingObjects ( const _variant_t & _val );
__declspec(implementation_key(1157)) _variant_t Worksheet::GetProtectionMode ( );
__declspec(implementation_key(1158)) void Worksheet::PutProtectionMode ( const _variant_t & _val );
__declspec(implementation_key(1159)) _variant_t Worksheet::GetProtectScenarios ( );
__declspec(implementation_key(1160)) void Worksheet::PutProtectScenarios ( const _variant_t & _val );
__declspec(implementation_key(1161)) _variant_t Worksheet::GetStandardHeight ( );
__declspec(implementation_key(1162)) void Worksheet::PutStandardHeight ( const _variant_t & _val );
__declspec(implementation_key(1163)) _variant_t Worksheet::GetStandardWidth ( );
__declspec(implementation_key(1164)) void Worksheet::PutStandardWidth ( const _variant_t & _val );
__declspec(implementation_key(1165)) _variant_t Worksheet::GetTransitionExpEval ( );
__declspec(implementation_key(1166)) void Worksheet::PutTransitionExpEval ( const _variant_t & _val );
__declspec(implementation_key(1167)) _variant_t Worksheet::GetTransitionFormEntry ( );
__declspec(implementation_key(1168)) void Worksheet::PutTransitionFormEntry ( const _variant_t & _val );
__declspec(implementation_key(1169)) _variant_t Worksheet::GetType ( );
__declspec(implementation_key(1170)) void Worksheet::PutType ( const _variant_t & _val );
__declspec(implementation_key(1171)) _variant_t Worksheet::GetUsedRange ( );
__declspec(implementation_key(1172)) void Worksheet::PutUsedRange ( const _variant_t & _val );
__declspec(implementation_key(1173)) _variant_t Worksheet::GetVisible ( );
__declspec(implementation_key(1174)) void Worksheet::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(1175)) _variant_t Worksheets::_NewEnum ( );
__declspec(implementation_key(1176)) _variant_t Worksheets::Add ( const _variant_t & Before, const _variant_t & After, const _variant_t & Count, const _variant_t & Type );
__declspec(implementation_key(1177)) _variant_t Worksheets::Application ( );
__declspec(implementation_key(1178)) _variant_t Worksheets::Copy ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(1179)) _variant_t Worksheets::Delete ( );
__declspec(implementation_key(1180)) _variant_t Worksheets::FillAcrossSheets ( const _variant_t & Range, const _variant_t & Type );
__declspec(implementation_key(1181)) _variant_t Worksheets::Item ( const _variant_t & Index );
__declspec(implementation_key(1182)) _variant_t Worksheets::Move ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(1183)) _variant_t Worksheets::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(1184)) _variant_t Worksheets::PrintPreview ( );
__declspec(implementation_key(1185)) _variant_t Worksheets::Select ( const _variant_t & Replace );
__declspec(implementation_key(1186)) _variant_t Worksheets::GetCount ( );
__declspec(implementation_key(1187)) void Worksheets::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1188)) _variant_t Worksheets::GetCreator ( );
__declspec(implementation_key(1189)) void Worksheets::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1190)) _variant_t Worksheets::GetParent ( );
__declspec(implementation_key(1191)) void Worksheets::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1192)) _variant_t Worksheets::GetVisible ( );
__declspec(implementation_key(1193)) void Worksheets::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(1194)) _variant_t PivotTable::AddFields ( const _variant_t & RowFields, const _variant_t & ColumnFields, const _variant_t & PageFields, const _variant_t & AddToTable );
__declspec(implementation_key(1195)) _variant_t PivotTable::Application ( );
__declspec(implementation_key(1196)) _variant_t PivotTable::PivotFields ( const _variant_t & Index );
__declspec(implementation_key(1197)) _variant_t PivotTable::RefreshTable ( );
__declspec(implementation_key(1198)) _variant_t PivotTable::ShowPages ( const _variant_t & PageField );
__declspec(implementation_key(1199)) _variant_t PivotTable::GetColumnFields ( );
__declspec(implementation_key(1200)) void PivotTable::PutColumnFields ( const _variant_t & _val );
__declspec(implementation_key(1201)) _variant_t PivotTable::GetColumnGrand ( );
__declspec(implementation_key(1202)) void PivotTable::PutColumnGrand ( const _variant_t & _val );
__declspec(implementation_key(1203)) _variant_t PivotTable::GetColumnRange ( );
__declspec(implementation_key(1204)) void PivotTable::PutColumnRange ( const _variant_t & _val );
__declspec(implementation_key(1205)) _variant_t PivotTable::GetCreator ( );
__declspec(implementation_key(1206)) void PivotTable::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1207)) _variant_t PivotTable::GetDataBodyRange ( );
__declspec(implementation_key(1208)) void PivotTable::PutDataBodyRange ( const _variant_t & _val );
__declspec(implementation_key(1209)) _variant_t PivotTable::GetDataFields ( );
__declspec(implementation_key(1210)) void PivotTable::PutDataFields ( const _variant_t & _val );
__declspec(implementation_key(1211)) _variant_t PivotTable::GetDataLabelRange ( );
__declspec(implementation_key(1212)) void PivotTable::PutDataLabelRange ( const _variant_t & _val );
__declspec(implementation_key(1213)) _variant_t PivotTable::GetHasAutoFormat ( );
__declspec(implementation_key(1214)) void PivotTable::PutHasAutoFormat ( const _variant_t & _val );
__declspec(implementation_key(1215)) _variant_t PivotTable::GetHiddenFields ( );
__declspec(implementation_key(1216)) void PivotTable::PutHiddenFields ( const _variant_t & _val );
__declspec(implementation_key(1217)) _variant_t PivotTable::GetInnerDetail ( );
__declspec(implementation_key(1218)) void PivotTable::PutInnerDetail ( const _variant_t & _val );
__declspec(implementation_key(1219)) _variant_t PivotTable::GetName ( );
__declspec(implementation_key(1220)) void PivotTable::PutName ( const _variant_t & _val );
__declspec(implementation_key(1221)) _variant_t PivotTable::GetPageFields ( );
__declspec(implementation_key(1222)) void PivotTable::PutPageFields ( const _variant_t & _val );
__declspec(implementation_key(1223)) _variant_t PivotTable::GetPageRange ( );
__declspec(implementation_key(1224)) void PivotTable::PutPageRange ( const _variant_t & _val );
__declspec(implementation_key(1225)) _variant_t PivotTable::GetParent ( );
__declspec(implementation_key(1226)) void PivotTable::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1227)) _variant_t PivotTable::GetRefreshDate ( );
__declspec(implementation_key(1228)) void PivotTable::PutRefreshDate ( const _variant_t & _val );
__declspec(implementation_key(1229)) _variant_t PivotTable::GetRefreshName ( );
__declspec(implementation_key(1230)) void PivotTable::PutRefreshName ( const _variant_t & _val );
__declspec(implementation_key(1231)) _variant_t PivotTable::GetRowFields ( );
__declspec(implementation_key(1232)) void PivotTable::PutRowFields ( const _variant_t & _val );
__declspec(implementation_key(1233)) _variant_t PivotTable::GetRowGrand ( );
__declspec(implementation_key(1234)) void PivotTable::PutRowGrand ( const _variant_t & _val );
__declspec(implementation_key(1235)) _variant_t PivotTable::GetRowRange ( );
__declspec(implementation_key(1236)) void PivotTable::PutRowRange ( const _variant_t & _val );
__declspec(implementation_key(1237)) _variant_t PivotTable::GetSaveData ( );
__declspec(implementation_key(1238)) void PivotTable::PutSaveData ( const _variant_t & _val );
__declspec(implementation_key(1239)) _variant_t PivotTable::GetSourceData ( );
__declspec(implementation_key(1240)) void PivotTable::PutSourceData ( const _variant_t & _val );
__declspec(implementation_key(1241)) _variant_t PivotTable::GetTableRange1 ( );
__declspec(implementation_key(1242)) void PivotTable::PutTableRange1 ( const _variant_t & _val );
__declspec(implementation_key(1243)) _variant_t PivotTable::GetTableRange2 ( );
__declspec(implementation_key(1244)) void PivotTable::PutTableRange2 ( const _variant_t & _val );
__declspec(implementation_key(1245)) _variant_t PivotTable::GetValue ( );
__declspec(implementation_key(1246)) void PivotTable::PutValue ( const _variant_t & _val );
__declspec(implementation_key(1247)) _variant_t PivotTable::GetVisibleFields ( );
__declspec(implementation_key(1248)) void PivotTable::PutVisibleFields ( const _variant_t & _val );
__declspec(implementation_key(1249)) _variant_t PivotTables::_NewEnum ( );
__declspec(implementation_key(1250)) _variant_t PivotTables::Application ( );
__declspec(implementation_key(1251)) _variant_t PivotTables::Item ( const _variant_t & Index );
__declspec(implementation_key(1252)) _variant_t PivotTables::GetCount ( );
__declspec(implementation_key(1253)) void PivotTables::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1254)) _variant_t PivotTables::GetCreator ( );
__declspec(implementation_key(1255)) void PivotTables::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1256)) _variant_t PivotTables::GetParent ( );
__declspec(implementation_key(1257)) void PivotTables::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1258)) _variant_t PivotField::Application ( );
__declspec(implementation_key(1259)) _variant_t PivotField::PivotItems ( const _variant_t & Index );
__declspec(implementation_key(1260)) _variant_t PivotField::GetBaseField ( );
__declspec(implementation_key(1261)) void PivotField::PutBaseField ( const _variant_t & _val );
__declspec(implementation_key(1262)) _variant_t PivotField::GetBaseItem ( );
__declspec(implementation_key(1263)) void PivotField::PutBaseItem ( const _variant_t & _val );
__declspec(implementation_key(1264)) _variant_t PivotField::GetCalculation ( );
__declspec(implementation_key(1265)) void PivotField::PutCalculation ( const _variant_t & _val );
__declspec(implementation_key(1266)) _variant_t PivotField::GetChildField ( );
__declspec(implementation_key(1267)) void PivotField::PutChildField ( const _variant_t & _val );
__declspec(implementation_key(1268)) _variant_t PivotField::GetChildItems ( );
__declspec(implementation_key(1269)) void PivotField::PutChildItems ( const _variant_t & _val );
__declspec(implementation_key(1270)) _variant_t PivotField::GetCreator ( );
__declspec(implementation_key(1271)) void PivotField::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1272)) _variant_t PivotField::GetCurrentPage ( );
__declspec(implementation_key(1273)) void PivotField::PutCurrentPage ( const _variant_t & _val );
__declspec(implementation_key(1274)) _variant_t PivotField::GetDataRange ( );
__declspec(implementation_key(1275)) void PivotField::PutDataRange ( const _variant_t & _val );
__declspec(implementation_key(1276)) _variant_t PivotField::GetDataType ( );
__declspec(implementation_key(1277)) void PivotField::PutDataType ( const _variant_t & _val );
__declspec(implementation_key(1278)) _variant_t PivotField::GetFunction ( );
__declspec(implementation_key(1279)) void PivotField::PutFunction ( const _variant_t & _val );
__declspec(implementation_key(1280)) _variant_t PivotField::GetGroupLevel ( );
__declspec(implementation_key(1281)) void PivotField::PutGroupLevel ( const _variant_t & _val );
__declspec(implementation_key(1282)) _variant_t PivotField::GetHiddenItems ( );
__declspec(implementation_key(1283)) void PivotField::PutHiddenItems ( const _variant_t & _val );
__declspec(implementation_key(1284)) _variant_t PivotField::GetLabelRange ( );
__declspec(implementation_key(1285)) void PivotField::PutLabelRange ( const _variant_t & _val );
__declspec(implementation_key(1286)) _variant_t PivotField::GetName ( );
__declspec(implementation_key(1287)) void PivotField::PutName ( const _variant_t & _val );
__declspec(implementation_key(1288)) _variant_t PivotField::GetNumberFormat ( );
__declspec(implementation_key(1289)) void PivotField::PutNumberFormat ( const _variant_t & _val );
__declspec(implementation_key(1290)) _variant_t PivotField::GetOrientation ( );
__declspec(implementation_key(1291)) void PivotField::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(1292)) _variant_t PivotField::GetParent ( );
__declspec(implementation_key(1293)) void PivotField::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1294)) _variant_t PivotField::GetParentField ( );
__declspec(implementation_key(1295)) void PivotField::PutParentField ( const _variant_t & _val );
__declspec(implementation_key(1296)) _variant_t PivotField::GetParentItems ( );
__declspec(implementation_key(1297)) void PivotField::PutParentItems ( const _variant_t & _val );
__declspec(implementation_key(1298)) _variant_t PivotField::GetPosition ( );
__declspec(implementation_key(1299)) void PivotField::PutPosition ( const _variant_t & _val );
__declspec(implementation_key(1300)) _variant_t PivotField::GetSourceName ( );
__declspec(implementation_key(1301)) void PivotField::PutSourceName ( const _variant_t & _val );
__declspec(implementation_key(1302)) _variant_t PivotField::GetSubtotals ( );
__declspec(implementation_key(1303)) void PivotField::PutSubtotals ( const _variant_t & _val );
__declspec(implementation_key(1304)) _variant_t PivotField::GetTotalLevels ( );
__declspec(implementation_key(1305)) void PivotField::PutTotalLevels ( const _variant_t & _val );
__declspec(implementation_key(1306)) _variant_t PivotField::GetValue ( );
__declspec(implementation_key(1307)) void PivotField::PutValue ( const _variant_t & _val );
__declspec(implementation_key(1308)) _variant_t PivotField::GetVisibleItems ( );
__declspec(implementation_key(1309)) void PivotField::PutVisibleItems ( const _variant_t & _val );
__declspec(implementation_key(1310)) _variant_t PivotFields::_NewEnum ( );
__declspec(implementation_key(1311)) _variant_t PivotFields::Application ( );
__declspec(implementation_key(1312)) _variant_t PivotFields::Item ( const _variant_t & Index );
__declspec(implementation_key(1313)) _variant_t PivotFields::GetCount ( );
__declspec(implementation_key(1314)) void PivotFields::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1315)) _variant_t PivotFields::GetCreator ( );
__declspec(implementation_key(1316)) void PivotFields::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1317)) _variant_t PivotFields::GetParent ( );
__declspec(implementation_key(1318)) void PivotFields::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1319)) _variant_t PivotItem::Application ( );
__declspec(implementation_key(1320)) _variant_t PivotItem::GetChildItems ( );
__declspec(implementation_key(1321)) void PivotItem::PutChildItems ( const _variant_t & _val );
__declspec(implementation_key(1322)) _variant_t PivotItem::GetCreator ( );
__declspec(implementation_key(1323)) void PivotItem::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1324)) _variant_t PivotItem::GetDataRange ( );
__declspec(implementation_key(1325)) void PivotItem::PutDataRange ( const _variant_t & _val );
__declspec(implementation_key(1326)) _variant_t PivotItem::GetLabelRange ( );
__declspec(implementation_key(1327)) void PivotItem::PutLabelRange ( const _variant_t & _val );
__declspec(implementation_key(1328)) _variant_t PivotItem::GetName ( );
__declspec(implementation_key(1329)) void PivotItem::PutName ( const _variant_t & _val );
__declspec(implementation_key(1330)) _variant_t PivotItem::GetParent ( );
__declspec(implementation_key(1331)) void PivotItem::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1332)) _variant_t PivotItem::GetParentItem ( );
__declspec(implementation_key(1333)) void PivotItem::PutParentItem ( const _variant_t & _val );
__declspec(implementation_key(1334)) _variant_t PivotItem::GetParentShowDetail ( );
__declspec(implementation_key(1335)) void PivotItem::PutParentShowDetail ( const _variant_t & _val );
__declspec(implementation_key(1336)) _variant_t PivotItem::GetPosition ( );
__declspec(implementation_key(1337)) void PivotItem::PutPosition ( const _variant_t & _val );
__declspec(implementation_key(1338)) _variant_t PivotItem::GetShowDetail ( );
__declspec(implementation_key(1339)) void PivotItem::PutShowDetail ( const _variant_t & _val );
__declspec(implementation_key(1340)) _variant_t PivotItem::GetSourceName ( );
__declspec(implementation_key(1341)) void PivotItem::PutSourceName ( const _variant_t & _val );
__declspec(implementation_key(1342)) _variant_t PivotItem::GetValue ( );
__declspec(implementation_key(1343)) void PivotItem::PutValue ( const _variant_t & _val );
__declspec(implementation_key(1344)) _variant_t PivotItem::GetVisible ( );
__declspec(implementation_key(1345)) void PivotItem::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(1346)) _variant_t PivotItems::_NewEnum ( );
__declspec(implementation_key(1347)) _variant_t PivotItems::Application ( );
__declspec(implementation_key(1348)) _variant_t PivotItems::Item ( const _variant_t & Index );
__declspec(implementation_key(1349)) _variant_t PivotItems::GetCount ( );
__declspec(implementation_key(1350)) void PivotItems::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1351)) _variant_t PivotItems::GetCreator ( );
__declspec(implementation_key(1352)) void PivotItems::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1353)) _variant_t PivotItems::GetParent ( );
__declspec(implementation_key(1354)) void PivotItems::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1355)) _variant_t Scenario::Application ( );
__declspec(implementation_key(1356)) _variant_t Scenario::ChangeScenario ( const _variant_t & ChangingCells, const _variant_t & Values );
__declspec(implementation_key(1357)) _variant_t Scenario::Delete ( );
__declspec(implementation_key(1358)) _variant_t Scenario::Show ( );
__declspec(implementation_key(1359)) _variant_t Scenario::GetChangingCells ( );
__declspec(implementation_key(1360)) void Scenario::PutChangingCells ( const _variant_t & _val );
__declspec(implementation_key(1361)) _variant_t Scenario::GetComment ( );
__declspec(implementation_key(1362)) void Scenario::PutComment ( const _variant_t & _val );
__declspec(implementation_key(1363)) _variant_t Scenario::GetCreator ( );
__declspec(implementation_key(1364)) void Scenario::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1365)) _variant_t Scenario::GetHidden ( );
__declspec(implementation_key(1366)) void Scenario::PutHidden ( const _variant_t & _val );
__declspec(implementation_key(1367)) _variant_t Scenario::GetIndex ( );
__declspec(implementation_key(1368)) void Scenario::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(1369)) _variant_t Scenario::GetLocked ( );
__declspec(implementation_key(1370)) void Scenario::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(1371)) _variant_t Scenario::GetName ( );
__declspec(implementation_key(1372)) void Scenario::PutName ( const _variant_t & _val );
__declspec(implementation_key(1373)) _variant_t Scenario::GetParent ( );
__declspec(implementation_key(1374)) void Scenario::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1375)) _variant_t Scenario::GetValues ( );
__declspec(implementation_key(1376)) void Scenario::PutValues ( const _variant_t & _val );
__declspec(implementation_key(1377)) _variant_t Scenarios::_NewEnum ( );
__declspec(implementation_key(1378)) _variant_t Scenarios::Add ( const _variant_t & Name, const _variant_t & ChangingCells, const _variant_t & Values, const _variant_t & Comment, const _variant_t & Locked, const _variant_t & Hidden );
__declspec(implementation_key(1379)) _variant_t Scenarios::Application ( );
__declspec(implementation_key(1380)) _variant_t Scenarios::CreateSummary ( const _variant_t & ReportType, const _variant_t & ResultCells );
__declspec(implementation_key(1381)) _variant_t Scenarios::Item ( const _variant_t & Index );
__declspec(implementation_key(1382)) _variant_t Scenarios::Merge ( const _variant_t & Source );
__declspec(implementation_key(1383)) _variant_t Scenarios::GetCount ( );
__declspec(implementation_key(1384)) void Scenarios::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1385)) _variant_t Scenarios::GetCreator ( );
__declspec(implementation_key(1386)) void Scenarios::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1387)) _variant_t Scenarios::GetParent ( );
__declspec(implementation_key(1388)) void Scenarios::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1389)) _variant_t MenuBar::Activate ( );
__declspec(implementation_key(1390)) _variant_t MenuBar::Application ( );
__declspec(implementation_key(1391)) _variant_t MenuBar::BuiltIn ( );
__declspec(implementation_key(1392)) _variant_t MenuBar::Delete ( );
__declspec(implementation_key(1393)) _variant_t MenuBar::Menus ( const _variant_t & Index );
__declspec(implementation_key(1394)) _variant_t MenuBar::Reset ( );
__declspec(implementation_key(1395)) _variant_t MenuBar::GetCaption ( );
__declspec(implementation_key(1396)) void MenuBar::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(1397)) _variant_t MenuBar::GetCreator ( );
__declspec(implementation_key(1398)) void MenuBar::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1399)) _variant_t MenuBar::GetIndex ( );
__declspec(implementation_key(1400)) void MenuBar::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(1401)) _variant_t MenuBar::GetParent ( );
__declspec(implementation_key(1402)) void MenuBar::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1403)) _variant_t MenuBars::_NewEnum ( );
__declspec(implementation_key(1404)) _variant_t MenuBars::Add ( const _variant_t & Name );
__declspec(implementation_key(1405)) _variant_t MenuBars::Application ( );
__declspec(implementation_key(1406)) _variant_t MenuBars::Item ( const _variant_t & Index );
__declspec(implementation_key(1407)) _variant_t MenuBars::GetCount ( );
__declspec(implementation_key(1408)) void MenuBars::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1409)) _variant_t MenuBars::GetCreator ( );
__declspec(implementation_key(1410)) void MenuBars::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1411)) _variant_t MenuBars::GetParent ( );
__declspec(implementation_key(1412)) void MenuBars::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1413)) _variant_t Menu::Application ( );
__declspec(implementation_key(1414)) _variant_t Menu::Delete ( );
__declspec(implementation_key(1415)) _variant_t Menu::MenuItems ( const _variant_t & Index );
__declspec(implementation_key(1416)) _variant_t Menu::GetCaption ( );
__declspec(implementation_key(1417)) void Menu::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(1418)) _variant_t Menu::GetCreator ( );
__declspec(implementation_key(1419)) void Menu::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1420)) _variant_t Menu::GetEnabled ( );
__declspec(implementation_key(1421)) void Menu::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(1422)) _variant_t Menu::GetIndex ( );
__declspec(implementation_key(1423)) void Menu::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(1424)) _variant_t Menu::GetParent ( );
__declspec(implementation_key(1425)) void Menu::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1426)) _variant_t Menus::_NewEnum ( );
__declspec(implementation_key(1427)) _variant_t Menus::Add ( const _variant_t & Caption, const _variant_t & Before, const _variant_t & Restore );
__declspec(implementation_key(1428)) _variant_t Menus::Application ( );
__declspec(implementation_key(1429)) _variant_t Menus::Item ( const _variant_t & Index );
__declspec(implementation_key(1430)) _variant_t Menus::GetCount ( );
__declspec(implementation_key(1431)) void Menus::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1432)) _variant_t Menus::GetCreator ( );
__declspec(implementation_key(1433)) void Menus::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1434)) _variant_t Menus::GetParent ( );
__declspec(implementation_key(1435)) void Menus::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1436)) _variant_t MenuItem::Application ( );
__declspec(implementation_key(1437)) _variant_t MenuItem::Delete ( );
__declspec(implementation_key(1438)) _variant_t MenuItem::GetCaption ( );
__declspec(implementation_key(1439)) void MenuItem::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(1440)) _variant_t MenuItem::GetChecked ( );
__declspec(implementation_key(1441)) void MenuItem::PutChecked ( const _variant_t & _val );
__declspec(implementation_key(1442)) _variant_t MenuItem::GetCreator ( );
__declspec(implementation_key(1443)) void MenuItem::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1444)) _variant_t MenuItem::GetEnabled ( );
__declspec(implementation_key(1445)) void MenuItem::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(1446)) _variant_t MenuItem::GetHelpContextID ( );
__declspec(implementation_key(1447)) void MenuItem::PutHelpContextID ( const _variant_t & _val );
__declspec(implementation_key(1448)) _variant_t MenuItem::GetHelpFile ( );
__declspec(implementation_key(1449)) void MenuItem::PutHelpFile ( const _variant_t & _val );
__declspec(implementation_key(1450)) _variant_t MenuItem::GetIndex ( );
__declspec(implementation_key(1451)) void MenuItem::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(1452)) _variant_t MenuItem::GetOnAction ( );
__declspec(implementation_key(1453)) void MenuItem::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(1454)) _variant_t MenuItem::GetParent ( );
__declspec(implementation_key(1455)) void MenuItem::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1456)) _variant_t MenuItem::GetStatusBar ( );
__declspec(implementation_key(1457)) void MenuItem::PutStatusBar ( const _variant_t & _val );
__declspec(implementation_key(1458)) _variant_t MenuItems::_NewEnum ( );
__declspec(implementation_key(1459)) _variant_t MenuItems::Add ( const _variant_t & Caption, const _variant_t & OnAction, const _variant_t & ShortcutKey, const _variant_t & Before, const _variant_t & Restore, const _variant_t & StatusBar, const _variant_t & HelpFile, const _variant_t & HelpContextID );
__declspec(implementation_key(1460)) _variant_t MenuItems::AddMenu ( const _variant_t & Caption, const _variant_t & Before, const _variant_t & Restore );
__declspec(implementation_key(1461)) _variant_t MenuItems::Application ( );
__declspec(implementation_key(1462)) _variant_t MenuItems::Item ( const _variant_t & Index );
__declspec(implementation_key(1463)) _variant_t MenuItems::GetCount ( );
__declspec(implementation_key(1464)) void MenuItems::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1465)) _variant_t MenuItems::GetCreator ( );
__declspec(implementation_key(1466)) void MenuItems::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1467)) _variant_t MenuItems::GetParent ( );
__declspec(implementation_key(1468)) void MenuItems::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1469)) _variant_t Window::Activate ( );
__declspec(implementation_key(1470)) _variant_t Window::ActivateNext ( );
__declspec(implementation_key(1471)) _variant_t Window::ActivatePrevious ( );
__declspec(implementation_key(1472)) _variant_t Window::Application ( );
__declspec(implementation_key(1473)) _variant_t Window::Close ( const _variant_t & SaveChanges, const _variant_t & Filename, const _variant_t & RouteWorkbook );
__declspec(implementation_key(1474)) _variant_t Window::LargeScroll ( const _variant_t & Down, const _variant_t & Up, const _variant_t & ToRight, const _variant_t & ToLeft );
__declspec(implementation_key(1475)) _variant_t Window::NewWindow ( );
__declspec(implementation_key(1476)) _variant_t Window::Panes ( const _variant_t & Index );
__declspec(implementation_key(1477)) _variant_t Window::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(1478)) _variant_t Window::PrintPreview ( );
__declspec(implementation_key(1479)) _variant_t Window::ScrollWorkbookTabs ( const _variant_t & Sheets, const _variant_t & Position );
__declspec(implementation_key(1480)) _variant_t Window::SetInfoDisplay ( const _variant_t & Cell, const _variant_t & Formula, const _variant_t & Value, const _variant_t & Format, const _variant_t & Protection, const _variant_t & Names, const _variant_t & Precedents, const _variant_t & Dependents, const _variant_t & Note );
__declspec(implementation_key(1481)) _variant_t Window::SmallScroll ( const _variant_t & Down, const _variant_t & Up, const _variant_t & ToRight, const _variant_t & ToLeft );
__declspec(implementation_key(1482)) _variant_t Window::GetActiveCell ( );
__declspec(implementation_key(1483)) void Window::PutActiveCell ( const _variant_t & _val );
__declspec(implementation_key(1484)) _variant_t Window::GetActiveChart ( );
__declspec(implementation_key(1485)) void Window::PutActiveChart ( const _variant_t & _val );
__declspec(implementation_key(1486)) _variant_t Window::GetActivePane ( );
__declspec(implementation_key(1487)) void Window::PutActivePane ( const _variant_t & _val );
__declspec(implementation_key(1488)) _variant_t Window::GetActiveSheet ( );
__declspec(implementation_key(1489)) void Window::PutActiveSheet ( const _variant_t & _val );
__declspec(implementation_key(1490)) _variant_t Window::GetCaption ( );
__declspec(implementation_key(1491)) void Window::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(1492)) _variant_t Window::GetCreator ( );
__declspec(implementation_key(1493)) void Window::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1494)) _variant_t Window::GetDisplayFormulas ( );
__declspec(implementation_key(1495)) void Window::PutDisplayFormulas ( const _variant_t & _val );
__declspec(implementation_key(1496)) _variant_t Window::GetDisplayGridlines ( );
__declspec(implementation_key(1497)) void Window::PutDisplayGridlines ( const _variant_t & _val );
__declspec(implementation_key(1498)) _variant_t Window::GetDisplayHeadings ( );
__declspec(implementation_key(1499)) void Window::PutDisplayHeadings ( const _variant_t & _val );
__declspec(implementation_key(1500)) _variant_t Window::GetDisplayHorizontalScrollBar ( );
__declspec(implementation_key(1501)) void Window::PutDisplayHorizontalScrollBar ( const _variant_t & _val );
__declspec(implementation_key(1502)) _variant_t Window::GetDisplayOutline ( );
__declspec(implementation_key(1503)) void Window::PutDisplayOutline ( const _variant_t & _val );
__declspec(implementation_key(1504)) _variant_t Window::GetDisplayRightToLeft ( );
__declspec(implementation_key(1505)) void Window::PutDisplayRightToLeft ( const _variant_t & _val );
__declspec(implementation_key(1506)) _variant_t Window::GetDisplayVerticalScrollBar ( );
__declspec(implementation_key(1507)) void Window::PutDisplayVerticalScrollBar ( const _variant_t & _val );
__declspec(implementation_key(1508)) _variant_t Window::GetDisplayWorkbookTabs ( );
__declspec(implementation_key(1509)) void Window::PutDisplayWorkbookTabs ( const _variant_t & _val );
__declspec(implementation_key(1510)) _variant_t Window::GetDisplayZeros ( );
__declspec(implementation_key(1511)) void Window::PutDisplayZeros ( const _variant_t & _val );
__declspec(implementation_key(1512)) _variant_t Window::GetFreezePanes ( );
__declspec(implementation_key(1513)) void Window::PutFreezePanes ( const _variant_t & _val );
__declspec(implementation_key(1514)) _variant_t Window::GetGridlineColor ( );
__declspec(implementation_key(1515)) void Window::PutGridlineColor ( const _variant_t & _val );
__declspec(implementation_key(1516)) _variant_t Window::GetGridlineColorIndex ( );
__declspec(implementation_key(1517)) void Window::PutGridlineColorIndex ( const _variant_t & _val );
__declspec(implementation_key(1518)) _variant_t Window::GetHeight ( );
__declspec(implementation_key(1519)) void Window::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(1520)) _variant_t Window::GetIndex ( );
__declspec(implementation_key(1521)) void Window::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(1522)) _variant_t Window::GetLeft ( );
__declspec(implementation_key(1523)) void Window::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(1524)) _variant_t Window::GetOnWindow ( );
__declspec(implementation_key(1525)) void Window::PutOnWindow ( const _variant_t & _val );
__declspec(implementation_key(1526)) _variant_t Window::GetPageSetup ( );
__declspec(implementation_key(1527)) void Window::PutPageSetup ( const _variant_t & _val );
__declspec(implementation_key(1528)) _variant_t Window::GetParent ( );
__declspec(implementation_key(1529)) void Window::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1530)) _variant_t Window::GetRangeSelection ( );
__declspec(implementation_key(1531)) void Window::PutRangeSelection ( const _variant_t & _val );
__declspec(implementation_key(1532)) _variant_t Window::GetScrollColumn ( );
__declspec(implementation_key(1533)) void Window::PutScrollColumn ( const _variant_t & _val );
__declspec(implementation_key(1534)) _variant_t Window::GetScrollRow ( );
__declspec(implementation_key(1535)) void Window::PutScrollRow ( const _variant_t & _val );
__declspec(implementation_key(1536)) _variant_t Window::GetSelectedSheets ( );
__declspec(implementation_key(1537)) void Window::PutSelectedSheets ( const _variant_t & _val );
__declspec(implementation_key(1538)) _variant_t Window::GetSelection ( );
__declspec(implementation_key(1539)) void Window::PutSelection ( const _variant_t & _val );
__declspec(implementation_key(1540)) _variant_t Window::GetSplit ( );
__declspec(implementation_key(1541)) void Window::PutSplit ( const _variant_t & _val );
__declspec(implementation_key(1542)) _variant_t Window::GetSplitColumn ( );
__declspec(implementation_key(1543)) void Window::PutSplitColumn ( const _variant_t & _val );
__declspec(implementation_key(1544)) _variant_t Window::GetSplitHorizontal ( );
__declspec(implementation_key(1545)) void Window::PutSplitHorizontal ( const _variant_t & _val );
__declspec(implementation_key(1546)) _variant_t Window::GetSplitRow ( );
__declspec(implementation_key(1547)) void Window::PutSplitRow ( const _variant_t & _val );
__declspec(implementation_key(1548)) _variant_t Window::GetSplitVertical ( );
__declspec(implementation_key(1549)) void Window::PutSplitVertical ( const _variant_t & _val );
__declspec(implementation_key(1550)) _variant_t Window::GetTabRatio ( );
__declspec(implementation_key(1551)) void Window::PutTabRatio ( const _variant_t & _val );
__declspec(implementation_key(1552)) _variant_t Window::GetTop ( );
__declspec(implementation_key(1553)) void Window::PutTop ( const _variant_t & _val );
__declspec(implementation_key(1554)) _variant_t Window::GetType ( );
__declspec(implementation_key(1555)) void Window::PutType ( const _variant_t & _val );
__declspec(implementation_key(1556)) _variant_t Window::GetUsableHeight ( );
__declspec(implementation_key(1557)) void Window::PutUsableHeight ( const _variant_t & _val );
__declspec(implementation_key(1558)) _variant_t Window::GetUsableWidth ( );
__declspec(implementation_key(1559)) void Window::PutUsableWidth ( const _variant_t & _val );
__declspec(implementation_key(1560)) _variant_t Window::GetVisible ( );
__declspec(implementation_key(1561)) void Window::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(1562)) _variant_t Window::GetVisibleRange ( );
__declspec(implementation_key(1563)) void Window::PutVisibleRange ( const _variant_t & _val );
__declspec(implementation_key(1564)) _variant_t Window::GetWidth ( );
__declspec(implementation_key(1565)) void Window::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(1566)) _variant_t Window::GetWindowNumber ( );
__declspec(implementation_key(1567)) void Window::PutWindowNumber ( const _variant_t & _val );
__declspec(implementation_key(1568)) _variant_t Window::GetWindowState ( );
__declspec(implementation_key(1569)) void Window::PutWindowState ( const _variant_t & _val );
__declspec(implementation_key(1570)) _variant_t Window::GetZoom ( );
__declspec(implementation_key(1571)) void Window::PutZoom ( const _variant_t & _val );
__declspec(implementation_key(1572)) _variant_t Windows::_NewEnum ( );
__declspec(implementation_key(1573)) _variant_t Windows::Application ( );
__declspec(implementation_key(1574)) _variant_t Windows::Arrange ( const _variant_t & ArrangeStyle, const _variant_t & ActiveWorkbook, const _variant_t & SyncHorizontal, const _variant_t & SyncVertical );
__declspec(implementation_key(1575)) _variant_t Windows::Item ( const _variant_t & Index );
__declspec(implementation_key(1576)) _variant_t Windows::GetCount ( );
__declspec(implementation_key(1577)) void Windows::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1578)) _variant_t Windows::GetCreator ( );
__declspec(implementation_key(1579)) void Windows::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1580)) _variant_t Windows::GetParent ( );
__declspec(implementation_key(1581)) void Windows::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1582)) _variant_t Pane::Activate ( );
__declspec(implementation_key(1583)) _variant_t Pane::Application ( );
__declspec(implementation_key(1584)) _variant_t Pane::LargeScroll ( const _variant_t & Down, const _variant_t & Up, const _variant_t & ToRight, const _variant_t & ToLeft );
__declspec(implementation_key(1585)) _variant_t Pane::SmallScroll ( const _variant_t & Down, const _variant_t & Up, const _variant_t & ToRight, const _variant_t & ToLeft );
__declspec(implementation_key(1586)) _variant_t Pane::GetCreator ( );
__declspec(implementation_key(1587)) void Pane::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1588)) _variant_t Pane::GetIndex ( );
__declspec(implementation_key(1589)) void Pane::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(1590)) _variant_t Pane::GetParent ( );
__declspec(implementation_key(1591)) void Pane::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1592)) _variant_t Pane::GetScrollColumn ( );
__declspec(implementation_key(1593)) void Pane::PutScrollColumn ( const _variant_t & _val );
__declspec(implementation_key(1594)) _variant_t Pane::GetScrollRow ( );
__declspec(implementation_key(1595)) void Pane::PutScrollRow ( const _variant_t & _val );
__declspec(implementation_key(1596)) _variant_t Pane::GetVisibleRange ( );
__declspec(implementation_key(1597)) void Pane::PutVisibleRange ( const _variant_t & _val );
__declspec(implementation_key(1598)) _variant_t Panes::Application ( );
__declspec(implementation_key(1599)) _variant_t Panes::Item ( const _variant_t & Index );
__declspec(implementation_key(1600)) _variant_t Panes::GetCount ( );
__declspec(implementation_key(1601)) void Panes::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1602)) _variant_t Panes::GetCreator ( );
__declspec(implementation_key(1603)) void Panes::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1604)) _variant_t Panes::GetParent ( );
__declspec(implementation_key(1605)) void Panes::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1606)) _variant_t Name::Application ( );
__declspec(implementation_key(1607)) _variant_t Name::Delete ( );
__declspec(implementation_key(1608)) _variant_t Name::GetCategory ( );
__declspec(implementation_key(1609)) void Name::PutCategory ( const _variant_t & _val );
__declspec(implementation_key(1610)) _variant_t Name::GetCategoryLocal ( );
__declspec(implementation_key(1611)) void Name::PutCategoryLocal ( const _variant_t & _val );
__declspec(implementation_key(1612)) _variant_t Name::GetCreator ( );
__declspec(implementation_key(1613)) void Name::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1614)) _variant_t Name::GetIndex ( );
__declspec(implementation_key(1615)) void Name::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(1616)) _variant_t Name::GetMacroType ( );
__declspec(implementation_key(1617)) void Name::PutMacroType ( const _variant_t & _val );
__declspec(implementation_key(1618)) _variant_t Name::GetName ( );
__declspec(implementation_key(1619)) void Name::PutName ( const _variant_t & _val );
__declspec(implementation_key(1620)) _variant_t Name::GetNameLocal ( );
__declspec(implementation_key(1621)) void Name::PutNameLocal ( const _variant_t & _val );
__declspec(implementation_key(1622)) _variant_t Name::GetParent ( );
__declspec(implementation_key(1623)) void Name::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1624)) _variant_t Name::GetRefersTo ( );
__declspec(implementation_key(1625)) void Name::PutRefersTo ( const _variant_t & _val );
__declspec(implementation_key(1626)) _variant_t Name::GetRefersToLocal ( );
__declspec(implementation_key(1627)) void Name::PutRefersToLocal ( const _variant_t & _val );
__declspec(implementation_key(1628)) _variant_t Name::GetRefersToR1C1 ( );
__declspec(implementation_key(1629)) void Name::PutRefersToR1C1 ( const _variant_t & _val );
__declspec(implementation_key(1630)) _variant_t Name::GetRefersToR1C1Local ( );
__declspec(implementation_key(1631)) void Name::PutRefersToR1C1Local ( const _variant_t & _val );
__declspec(implementation_key(1632)) _variant_t Name::GetRefersToRange ( );
__declspec(implementation_key(1633)) void Name::PutRefersToRange ( const _variant_t & _val );
__declspec(implementation_key(1634)) _variant_t Name::GetShortcutKey ( );
__declspec(implementation_key(1635)) void Name::PutShortcutKey ( const _variant_t & _val );
__declspec(implementation_key(1636)) _variant_t Name::GetValue ( );
__declspec(implementation_key(1637)) void Name::PutValue ( const _variant_t & _val );
__declspec(implementation_key(1638)) _variant_t Name::GetVisible ( );
__declspec(implementation_key(1639)) void Name::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(1640)) _variant_t Names::_NewEnum ( );
__declspec(implementation_key(1641)) _variant_t Names::Add ( const _variant_t & Name, const _variant_t & RefersTo, const _variant_t & Visible, const _variant_t & MacroType, const _variant_t & ShortcutKey, const _variant_t & Category, const _variant_t & NameLocal, const _variant_t & RefersToLocal, const _variant_t & CategoryLocal, const _variant_t & RefersToR1C1, const _variant_t & RefersToR1C1Local );
__declspec(implementation_key(1642)) _variant_t Names::Application ( );
__declspec(implementation_key(1643)) _variant_t Names::Item ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo );
__declspec(implementation_key(1644)) _variant_t Names::GetCount ( );
__declspec(implementation_key(1645)) void Names::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1646)) _variant_t Names::GetCreator ( );
__declspec(implementation_key(1647)) void Names::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1648)) _variant_t Names::GetParent ( );
__declspec(implementation_key(1649)) void Names::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1650)) _variant_t DrawingObjects::_NewEnum ( );
__declspec(implementation_key(1651)) _variant_t DrawingObjects::AddItem ( const _variant_t & Text, const _variant_t & Index );
__declspec(implementation_key(1652)) _variant_t DrawingObjects::Application ( );
__declspec(implementation_key(1653)) _variant_t DrawingObjects::BringToFront ( );
__declspec(implementation_key(1654)) _variant_t DrawingObjects::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(1655)) _variant_t DrawingObjects::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(1656)) _variant_t DrawingObjects::Copy ( );
__declspec(implementation_key(1657)) _variant_t DrawingObjects::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(1658)) _variant_t DrawingObjects::Cut ( );
__declspec(implementation_key(1659)) _variant_t DrawingObjects::Delete ( );
__declspec(implementation_key(1660)) _variant_t DrawingObjects::Duplicate ( );
__declspec(implementation_key(1661)) _variant_t DrawingObjects::Group ( );
__declspec(implementation_key(1662)) _variant_t DrawingObjects::Item ( const _variant_t & Index );
__declspec(implementation_key(1663)) _variant_t DrawingObjects::LinkCombo ( const _variant_t & Link );
__declspec(implementation_key(1664)) _variant_t DrawingObjects::RemoveAllItems ( );
__declspec(implementation_key(1665)) _variant_t DrawingObjects::RemoveItem ( const _variant_t & Index, const _variant_t & Count );
__declspec(implementation_key(1666)) _variant_t DrawingObjects::Reshape ( const _variant_t & Vertex, const _variant_t & Insert, const _variant_t & Left, const _variant_t & Top );
__declspec(implementation_key(1667)) _variant_t DrawingObjects::Select ( const _variant_t & Replace );
__declspec(implementation_key(1668)) _variant_t DrawingObjects::SendToBack ( );
__declspec(implementation_key(1669)) _variant_t DrawingObjects::Ungroup ( );
__declspec(implementation_key(1670)) _variant_t DrawingObjects::GetAccelerator ( );
__declspec(implementation_key(1671)) void DrawingObjects::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(1672)) _variant_t DrawingObjects::GetAddIndent ( );
__declspec(implementation_key(1673)) void DrawingObjects::PutAddIndent ( const _variant_t & _val );
__declspec(implementation_key(1674)) _variant_t DrawingObjects::GetArrowHeadLength ( );
__declspec(implementation_key(1675)) void DrawingObjects::PutArrowHeadLength ( const _variant_t & _val );
__declspec(implementation_key(1676)) _variant_t DrawingObjects::GetArrowHeadStyle ( );
__declspec(implementation_key(1677)) void DrawingObjects::PutArrowHeadStyle ( const _variant_t & _val );
__declspec(implementation_key(1678)) _variant_t DrawingObjects::GetArrowHeadWidth ( );
__declspec(implementation_key(1679)) void DrawingObjects::PutArrowHeadWidth ( const _variant_t & _val );
__declspec(implementation_key(1680)) _variant_t DrawingObjects::GetAutoSize ( );
__declspec(implementation_key(1681)) void DrawingObjects::PutAutoSize ( const _variant_t & _val );
__declspec(implementation_key(1682)) _variant_t DrawingObjects::GetBorder ( );
__declspec(implementation_key(1683)) void DrawingObjects::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(1684)) _variant_t DrawingObjects::GetCancelButton ( );
__declspec(implementation_key(1685)) void DrawingObjects::PutCancelButton ( const _variant_t & _val );
__declspec(implementation_key(1686)) _variant_t DrawingObjects::GetCaption ( );
__declspec(implementation_key(1687)) void DrawingObjects::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(1688)) _variant_t DrawingObjects::GetCount ( );
__declspec(implementation_key(1689)) void DrawingObjects::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1690)) _variant_t DrawingObjects::GetCreator ( );
__declspec(implementation_key(1691)) void DrawingObjects::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1692)) _variant_t DrawingObjects::GetDefaultButton ( );
__declspec(implementation_key(1693)) void DrawingObjects::PutDefaultButton ( const _variant_t & _val );
__declspec(implementation_key(1694)) _variant_t DrawingObjects::GetDismissButton ( );
__declspec(implementation_key(1695)) void DrawingObjects::PutDismissButton ( const _variant_t & _val );
__declspec(implementation_key(1696)) _variant_t DrawingObjects::GetDisplay3DShading ( );
__declspec(implementation_key(1697)) void DrawingObjects::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(1698)) _variant_t DrawingObjects::GetDisplayVerticalScrollBar ( );
__declspec(implementation_key(1699)) void DrawingObjects::PutDisplayVerticalScrollBar ( const _variant_t & _val );
__declspec(implementation_key(1700)) _variant_t DrawingObjects::GetDropDownLines ( );
__declspec(implementation_key(1701)) void DrawingObjects::PutDropDownLines ( const _variant_t & _val );
__declspec(implementation_key(1702)) _variant_t DrawingObjects::GetEnabled ( );
__declspec(implementation_key(1703)) void DrawingObjects::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(1704)) _variant_t DrawingObjects::GetFont ( );
__declspec(implementation_key(1705)) void DrawingObjects::PutFont ( const _variant_t & _val );
__declspec(implementation_key(1706)) _variant_t DrawingObjects::GetHeight ( );
__declspec(implementation_key(1707)) void DrawingObjects::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(1708)) _variant_t DrawingObjects::GetHelpButton ( );
__declspec(implementation_key(1709)) void DrawingObjects::PutHelpButton ( const _variant_t & _val );
__declspec(implementation_key(1710)) _variant_t DrawingObjects::GetHorizontalAlignment ( );
__declspec(implementation_key(1711)) void DrawingObjects::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(1712)) _variant_t DrawingObjects::GetInputType ( );
__declspec(implementation_key(1713)) void DrawingObjects::PutInputType ( const _variant_t & _val );
__declspec(implementation_key(1714)) _variant_t DrawingObjects::GetInterior ( );
__declspec(implementation_key(1715)) void DrawingObjects::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(1716)) _variant_t DrawingObjects::GetLargeChange ( );
__declspec(implementation_key(1717)) void DrawingObjects::PutLargeChange ( const _variant_t & _val );
__declspec(implementation_key(1718)) _variant_t DrawingObjects::GetLeft ( );
__declspec(implementation_key(1719)) void DrawingObjects::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(1720)) _variant_t DrawingObjects::GetLinkedCell ( );
__declspec(implementation_key(1721)) void DrawingObjects::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(1722)) _variant_t DrawingObjects::GetList ( );
__declspec(implementation_key(1723)) void DrawingObjects::PutList ( const _variant_t & _val );
__declspec(implementation_key(1724)) _variant_t DrawingObjects::GetListFillRange ( );
__declspec(implementation_key(1725)) void DrawingObjects::PutListFillRange ( const _variant_t & _val );
__declspec(implementation_key(1726)) _variant_t DrawingObjects::GetListIndex ( );
__declspec(implementation_key(1727)) void DrawingObjects::PutListIndex ( const _variant_t & _val );
__declspec(implementation_key(1728)) _variant_t DrawingObjects::GetLocked ( );
__declspec(implementation_key(1729)) void DrawingObjects::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(1730)) _variant_t DrawingObjects::GetLockedText ( );
__declspec(implementation_key(1731)) void DrawingObjects::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(1732)) _variant_t DrawingObjects::GetMax ( );
__declspec(implementation_key(1733)) void DrawingObjects::PutMax ( const _variant_t & _val );
__declspec(implementation_key(1734)) _variant_t DrawingObjects::GetMin ( );
__declspec(implementation_key(1735)) void DrawingObjects::PutMin ( const _variant_t & _val );
__declspec(implementation_key(1736)) _variant_t DrawingObjects::GetMultiLine ( );
__declspec(implementation_key(1737)) void DrawingObjects::PutMultiLine ( const _variant_t & _val );
__declspec(implementation_key(1738)) _variant_t DrawingObjects::GetMultiSelect ( );
__declspec(implementation_key(1739)) void DrawingObjects::PutMultiSelect ( const _variant_t & _val );
__declspec(implementation_key(1740)) _variant_t DrawingObjects::GetOnAction ( );
__declspec(implementation_key(1741)) void DrawingObjects::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(1742)) _variant_t DrawingObjects::GetOrientation ( );
__declspec(implementation_key(1743)) void DrawingObjects::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(1744)) _variant_t DrawingObjects::GetParent ( );
__declspec(implementation_key(1745)) void DrawingObjects::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1746)) _variant_t DrawingObjects::GetPhoneticAccelerator ( );
__declspec(implementation_key(1747)) void DrawingObjects::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(1748)) _variant_t DrawingObjects::GetPlacement ( );
__declspec(implementation_key(1749)) void DrawingObjects::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(1750)) _variant_t DrawingObjects::GetPrintObject ( );
__declspec(implementation_key(1751)) void DrawingObjects::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(1752)) _variant_t DrawingObjects::GetRoundedCorners ( );
__declspec(implementation_key(1753)) void DrawingObjects::PutRoundedCorners ( const _variant_t & _val );
__declspec(implementation_key(1754)) _variant_t DrawingObjects::GetSelected ( );
__declspec(implementation_key(1755)) void DrawingObjects::PutSelected ( const _variant_t & _val );
__declspec(implementation_key(1756)) _variant_t DrawingObjects::GetShadow ( );
__declspec(implementation_key(1757)) void DrawingObjects::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(1758)) _variant_t DrawingObjects::GetSmallChange ( );
__declspec(implementation_key(1759)) void DrawingObjects::PutSmallChange ( const _variant_t & _val );
__declspec(implementation_key(1760)) _variant_t DrawingObjects::GetText ( );
__declspec(implementation_key(1761)) void DrawingObjects::PutText ( const _variant_t & _val );
__declspec(implementation_key(1762)) _variant_t DrawingObjects::GetTop ( );
__declspec(implementation_key(1763)) void DrawingObjects::PutTop ( const _variant_t & _val );
__declspec(implementation_key(1764)) _variant_t DrawingObjects::GetValue ( );
__declspec(implementation_key(1765)) void DrawingObjects::PutValue ( const _variant_t & _val );
__declspec(implementation_key(1766)) _variant_t DrawingObjects::GetVerticalAlignment ( );
__declspec(implementation_key(1767)) void DrawingObjects::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(1768)) _variant_t DrawingObjects::GetVertices ( );
__declspec(implementation_key(1769)) void DrawingObjects::PutVertices ( const _variant_t & _val );
__declspec(implementation_key(1770)) _variant_t DrawingObjects::GetVisible ( );
__declspec(implementation_key(1771)) void DrawingObjects::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(1772)) _variant_t DrawingObjects::GetWidth ( );
__declspec(implementation_key(1773)) void DrawingObjects::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(1774)) _variant_t DrawingObjects::GetZOrder ( );
__declspec(implementation_key(1775)) void DrawingObjects::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(1776)) _variant_t GroupObject::Application ( );
__declspec(implementation_key(1777)) _variant_t GroupObject::BringToFront ( );
__declspec(implementation_key(1778)) _variant_t GroupObject::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(1779)) _variant_t GroupObject::Copy ( );
__declspec(implementation_key(1780)) _variant_t GroupObject::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(1781)) _variant_t GroupObject::Cut ( );
__declspec(implementation_key(1782)) _variant_t GroupObject::Delete ( );
__declspec(implementation_key(1783)) _variant_t GroupObject::Duplicate ( );
__declspec(implementation_key(1784)) _variant_t GroupObject::Select ( const _variant_t & Replace );
__declspec(implementation_key(1785)) _variant_t GroupObject::SendToBack ( );
__declspec(implementation_key(1786)) _variant_t GroupObject::Ungroup ( );
__declspec(implementation_key(1787)) _variant_t GroupObject::GetAddIndent ( );
__declspec(implementation_key(1788)) void GroupObject::PutAddIndent ( const _variant_t & _val );
__declspec(implementation_key(1789)) _variant_t GroupObject::GetArrowHeadLength ( );
__declspec(implementation_key(1790)) void GroupObject::PutArrowHeadLength ( const _variant_t & _val );
__declspec(implementation_key(1791)) _variant_t GroupObject::GetArrowHeadStyle ( );
__declspec(implementation_key(1792)) void GroupObject::PutArrowHeadStyle ( const _variant_t & _val );
__declspec(implementation_key(1793)) _variant_t GroupObject::GetArrowHeadWidth ( );
__declspec(implementation_key(1794)) void GroupObject::PutArrowHeadWidth ( const _variant_t & _val );
__declspec(implementation_key(1795)) _variant_t GroupObject::GetAutoSize ( );
__declspec(implementation_key(1796)) void GroupObject::PutAutoSize ( const _variant_t & _val );
__declspec(implementation_key(1797)) _variant_t GroupObject::GetBorder ( );
__declspec(implementation_key(1798)) void GroupObject::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(1799)) _variant_t GroupObject::GetBottomRightCell ( );
__declspec(implementation_key(1800)) void GroupObject::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(1801)) _variant_t GroupObject::GetCreator ( );
__declspec(implementation_key(1802)) void GroupObject::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1803)) _variant_t GroupObject::GetEnabled ( );
__declspec(implementation_key(1804)) void GroupObject::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(1805)) _variant_t GroupObject::GetFont ( );
__declspec(implementation_key(1806)) void GroupObject::PutFont ( const _variant_t & _val );
__declspec(implementation_key(1807)) _variant_t GroupObject::GetHeight ( );
__declspec(implementation_key(1808)) void GroupObject::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(1809)) _variant_t GroupObject::GetHorizontalAlignment ( );
__declspec(implementation_key(1810)) void GroupObject::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(1811)) _variant_t GroupObject::GetIndex ( );
__declspec(implementation_key(1812)) void GroupObject::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(1813)) _variant_t GroupObject::GetInterior ( );
__declspec(implementation_key(1814)) void GroupObject::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(1815)) _variant_t GroupObject::GetLeft ( );
__declspec(implementation_key(1816)) void GroupObject::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(1817)) _variant_t GroupObject::GetLocked ( );
__declspec(implementation_key(1818)) void GroupObject::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(1819)) _variant_t GroupObject::GetName ( );
__declspec(implementation_key(1820)) void GroupObject::PutName ( const _variant_t & _val );
__declspec(implementation_key(1821)) _variant_t GroupObject::GetOnAction ( );
__declspec(implementation_key(1822)) void GroupObject::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(1823)) _variant_t GroupObject::GetOrientation ( );
__declspec(implementation_key(1824)) void GroupObject::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(1825)) _variant_t GroupObject::GetParent ( );
__declspec(implementation_key(1826)) void GroupObject::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1827)) _variant_t GroupObject::GetPlacement ( );
__declspec(implementation_key(1828)) void GroupObject::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(1829)) _variant_t GroupObject::GetPrintObject ( );
__declspec(implementation_key(1830)) void GroupObject::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(1831)) _variant_t GroupObject::GetRoundedCorners ( );
__declspec(implementation_key(1832)) void GroupObject::PutRoundedCorners ( const _variant_t & _val );
__declspec(implementation_key(1833)) _variant_t GroupObject::GetShadow ( );
__declspec(implementation_key(1834)) void GroupObject::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(1835)) _variant_t GroupObject::GetTop ( );
__declspec(implementation_key(1836)) void GroupObject::PutTop ( const _variant_t & _val );
__declspec(implementation_key(1837)) _variant_t GroupObject::GetTopLeftCell ( );
__declspec(implementation_key(1838)) void GroupObject::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(1839)) _variant_t GroupObject::GetVerticalAlignment ( );
__declspec(implementation_key(1840)) void GroupObject::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(1841)) _variant_t GroupObject::GetVisible ( );
__declspec(implementation_key(1842)) void GroupObject::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(1843)) _variant_t GroupObject::GetWidth ( );
__declspec(implementation_key(1844)) void GroupObject::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(1845)) _variant_t GroupObject::GetZOrder ( );
__declspec(implementation_key(1846)) void GroupObject::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(1847)) _variant_t GroupObjects::_NewEnum ( );
__declspec(implementation_key(1848)) _variant_t GroupObjects::Application ( );
__declspec(implementation_key(1849)) _variant_t GroupObjects::BringToFront ( );
__declspec(implementation_key(1850)) _variant_t GroupObjects::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(1851)) _variant_t GroupObjects::Copy ( );
__declspec(implementation_key(1852)) _variant_t GroupObjects::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(1853)) _variant_t GroupObjects::Cut ( );
__declspec(implementation_key(1854)) _variant_t GroupObjects::Delete ( );
__declspec(implementation_key(1855)) _variant_t GroupObjects::Duplicate ( );
__declspec(implementation_key(1856)) _variant_t GroupObjects::Group ( );
__declspec(implementation_key(1857)) _variant_t GroupObjects::Item ( const _variant_t & Index );
__declspec(implementation_key(1858)) _variant_t GroupObjects::Select ( const _variant_t & Replace );
__declspec(implementation_key(1859)) _variant_t GroupObjects::SendToBack ( );
__declspec(implementation_key(1860)) _variant_t GroupObjects::Ungroup ( );
__declspec(implementation_key(1861)) _variant_t GroupObjects::GetAddIndent ( );
__declspec(implementation_key(1862)) void GroupObjects::PutAddIndent ( const _variant_t & _val );
__declspec(implementation_key(1863)) _variant_t GroupObjects::GetArrowHeadLength ( );
__declspec(implementation_key(1864)) void GroupObjects::PutArrowHeadLength ( const _variant_t & _val );
__declspec(implementation_key(1865)) _variant_t GroupObjects::GetArrowHeadStyle ( );
__declspec(implementation_key(1866)) void GroupObjects::PutArrowHeadStyle ( const _variant_t & _val );
__declspec(implementation_key(1867)) _variant_t GroupObjects::GetArrowHeadWidth ( );
__declspec(implementation_key(1868)) void GroupObjects::PutArrowHeadWidth ( const _variant_t & _val );
__declspec(implementation_key(1869)) _variant_t GroupObjects::GetAutoSize ( );
__declspec(implementation_key(1870)) void GroupObjects::PutAutoSize ( const _variant_t & _val );
__declspec(implementation_key(1871)) _variant_t GroupObjects::GetBorder ( );
__declspec(implementation_key(1872)) void GroupObjects::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(1873)) _variant_t GroupObjects::GetCount ( );
__declspec(implementation_key(1874)) void GroupObjects::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1875)) _variant_t GroupObjects::GetCreator ( );
__declspec(implementation_key(1876)) void GroupObjects::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1877)) _variant_t GroupObjects::GetEnabled ( );
__declspec(implementation_key(1878)) void GroupObjects::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(1879)) _variant_t GroupObjects::GetFont ( );
__declspec(implementation_key(1880)) void GroupObjects::PutFont ( const _variant_t & _val );
__declspec(implementation_key(1881)) _variant_t GroupObjects::GetHeight ( );
__declspec(implementation_key(1882)) void GroupObjects::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(1883)) _variant_t GroupObjects::GetHorizontalAlignment ( );
__declspec(implementation_key(1884)) void GroupObjects::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(1885)) _variant_t GroupObjects::GetInterior ( );
__declspec(implementation_key(1886)) void GroupObjects::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(1887)) _variant_t GroupObjects::GetLeft ( );
__declspec(implementation_key(1888)) void GroupObjects::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(1889)) _variant_t GroupObjects::GetLocked ( );
__declspec(implementation_key(1890)) void GroupObjects::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(1891)) _variant_t GroupObjects::GetOnAction ( );
__declspec(implementation_key(1892)) void GroupObjects::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(1893)) _variant_t GroupObjects::GetOrientation ( );
__declspec(implementation_key(1894)) void GroupObjects::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(1895)) _variant_t GroupObjects::GetParent ( );
__declspec(implementation_key(1896)) void GroupObjects::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1897)) _variant_t GroupObjects::GetPlacement ( );
__declspec(implementation_key(1898)) void GroupObjects::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(1899)) _variant_t GroupObjects::GetPrintObject ( );
__declspec(implementation_key(1900)) void GroupObjects::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(1901)) _variant_t GroupObjects::GetRoundedCorners ( );
__declspec(implementation_key(1902)) void GroupObjects::PutRoundedCorners ( const _variant_t & _val );
__declspec(implementation_key(1903)) _variant_t GroupObjects::GetShadow ( );
__declspec(implementation_key(1904)) void GroupObjects::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(1905)) _variant_t GroupObjects::GetTop ( );
__declspec(implementation_key(1906)) void GroupObjects::PutTop ( const _variant_t & _val );
__declspec(implementation_key(1907)) _variant_t GroupObjects::GetVerticalAlignment ( );
__declspec(implementation_key(1908)) void GroupObjects::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(1909)) _variant_t GroupObjects::GetVisible ( );
__declspec(implementation_key(1910)) void GroupObjects::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(1911)) _variant_t GroupObjects::GetWidth ( );
__declspec(implementation_key(1912)) void GroupObjects::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(1913)) _variant_t GroupObjects::GetZOrder ( );
__declspec(implementation_key(1914)) void GroupObjects::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(1915)) _variant_t Line::Application ( );
__declspec(implementation_key(1916)) _variant_t Line::BringToFront ( );
__declspec(implementation_key(1917)) _variant_t Line::Copy ( );
__declspec(implementation_key(1918)) _variant_t Line::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(1919)) _variant_t Line::Cut ( );
__declspec(implementation_key(1920)) _variant_t Line::Delete ( );
__declspec(implementation_key(1921)) _variant_t Line::Duplicate ( );
__declspec(implementation_key(1922)) _variant_t Line::Select ( const _variant_t & Replace );
__declspec(implementation_key(1923)) _variant_t Line::SendToBack ( );
__declspec(implementation_key(1924)) _variant_t Line::GetArrowHeadLength ( );
__declspec(implementation_key(1925)) void Line::PutArrowHeadLength ( const _variant_t & _val );
__declspec(implementation_key(1926)) _variant_t Line::GetArrowHeadStyle ( );
__declspec(implementation_key(1927)) void Line::PutArrowHeadStyle ( const _variant_t & _val );
__declspec(implementation_key(1928)) _variant_t Line::GetArrowHeadWidth ( );
__declspec(implementation_key(1929)) void Line::PutArrowHeadWidth ( const _variant_t & _val );
__declspec(implementation_key(1930)) _variant_t Line::GetBorder ( );
__declspec(implementation_key(1931)) void Line::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(1932)) _variant_t Line::GetBottomRightCell ( );
__declspec(implementation_key(1933)) void Line::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(1934)) _variant_t Line::GetCreator ( );
__declspec(implementation_key(1935)) void Line::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1936)) _variant_t Line::GetEnabled ( );
__declspec(implementation_key(1937)) void Line::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(1938)) _variant_t Line::GetHeight ( );
__declspec(implementation_key(1939)) void Line::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(1940)) _variant_t Line::GetIndex ( );
__declspec(implementation_key(1941)) void Line::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(1942)) _variant_t Line::GetLeft ( );
__declspec(implementation_key(1943)) void Line::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(1944)) _variant_t Line::GetLocked ( );
__declspec(implementation_key(1945)) void Line::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(1946)) _variant_t Line::GetName ( );
__declspec(implementation_key(1947)) void Line::PutName ( const _variant_t & _val );
__declspec(implementation_key(1948)) _variant_t Line::GetOnAction ( );
__declspec(implementation_key(1949)) void Line::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(1950)) _variant_t Line::GetParent ( );
__declspec(implementation_key(1951)) void Line::PutParent ( const _variant_t & _val );
__declspec(implementation_key(1952)) _variant_t Line::GetPlacement ( );
__declspec(implementation_key(1953)) void Line::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(1954)) _variant_t Line::GetPrintObject ( );
__declspec(implementation_key(1955)) void Line::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(1956)) _variant_t Line::GetTop ( );
__declspec(implementation_key(1957)) void Line::PutTop ( const _variant_t & _val );
__declspec(implementation_key(1958)) _variant_t Line::GetTopLeftCell ( );
__declspec(implementation_key(1959)) void Line::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(1960)) _variant_t Line::GetVisible ( );
__declspec(implementation_key(1961)) void Line::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(1962)) _variant_t Line::GetWidth ( );
__declspec(implementation_key(1963)) void Line::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(1964)) _variant_t Line::GetZOrder ( );
__declspec(implementation_key(1965)) void Line::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(1966)) _variant_t Lines::_NewEnum ( );
__declspec(implementation_key(1967)) _variant_t Lines::Add ( const _variant_t & X1, const _variant_t & Y1, const _variant_t & X2, const _variant_t & Y2 );
__declspec(implementation_key(1968)) _variant_t Lines::Application ( );
__declspec(implementation_key(1969)) _variant_t Lines::BringToFront ( );
__declspec(implementation_key(1970)) _variant_t Lines::Copy ( );
__declspec(implementation_key(1971)) _variant_t Lines::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(1972)) _variant_t Lines::Cut ( );
__declspec(implementation_key(1973)) _variant_t Lines::Delete ( );
__declspec(implementation_key(1974)) _variant_t Lines::Duplicate ( );
__declspec(implementation_key(1975)) _variant_t Lines::Group ( );
__declspec(implementation_key(1976)) _variant_t Lines::Item ( const _variant_t & Index );
__declspec(implementation_key(1977)) _variant_t Lines::Select ( const _variant_t & Replace );
__declspec(implementation_key(1978)) _variant_t Lines::SendToBack ( );
__declspec(implementation_key(1979)) _variant_t Lines::GetArrowHeadLength ( );
__declspec(implementation_key(1980)) void Lines::PutArrowHeadLength ( const _variant_t & _val );
__declspec(implementation_key(1981)) _variant_t Lines::GetArrowHeadStyle ( );
__declspec(implementation_key(1982)) void Lines::PutArrowHeadStyle ( const _variant_t & _val );
__declspec(implementation_key(1983)) _variant_t Lines::GetArrowHeadWidth ( );
__declspec(implementation_key(1984)) void Lines::PutArrowHeadWidth ( const _variant_t & _val );
__declspec(implementation_key(1985)) _variant_t Lines::GetBorder ( );
__declspec(implementation_key(1986)) void Lines::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(1987)) _variant_t Lines::GetCount ( );
__declspec(implementation_key(1988)) void Lines::PutCount ( const _variant_t & _val );
__declspec(implementation_key(1989)) _variant_t Lines::GetCreator ( );
__declspec(implementation_key(1990)) void Lines::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(1991)) _variant_t Lines::GetEnabled ( );
__declspec(implementation_key(1992)) void Lines::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(1993)) _variant_t Lines::GetHeight ( );
__declspec(implementation_key(1994)) void Lines::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(1995)) _variant_t Lines::GetLeft ( );
__declspec(implementation_key(1996)) void Lines::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(1997)) _variant_t Lines::GetLocked ( );
__declspec(implementation_key(1998)) void Lines::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(1999)) _variant_t Lines::GetOnAction ( );
__declspec(implementation_key(2000)) void Lines::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2001)) _variant_t Lines::GetParent ( );
__declspec(implementation_key(2002)) void Lines::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2003)) _variant_t Lines::GetPlacement ( );
__declspec(implementation_key(2004)) void Lines::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2005)) _variant_t Lines::GetPrintObject ( );
__declspec(implementation_key(2006)) void Lines::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2007)) _variant_t Lines::GetTop ( );
__declspec(implementation_key(2008)) void Lines::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2009)) _variant_t Lines::GetVisible ( );
__declspec(implementation_key(2010)) void Lines::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2011)) _variant_t Lines::GetWidth ( );
__declspec(implementation_key(2012)) void Lines::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2013)) _variant_t Lines::GetZOrder ( );
__declspec(implementation_key(2014)) void Lines::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2015)) _variant_t Rectangle::Application ( );
__declspec(implementation_key(2016)) _variant_t Rectangle::BringToFront ( );
__declspec(implementation_key(2017)) _variant_t Rectangle::Copy ( );
__declspec(implementation_key(2018)) _variant_t Rectangle::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2019)) _variant_t Rectangle::Cut ( );
__declspec(implementation_key(2020)) _variant_t Rectangle::Delete ( );
__declspec(implementation_key(2021)) _variant_t Rectangle::Duplicate ( );
__declspec(implementation_key(2022)) _variant_t Rectangle::Select ( const _variant_t & Replace );
__declspec(implementation_key(2023)) _variant_t Rectangle::SendToBack ( );
__declspec(implementation_key(2024)) _variant_t Rectangle::GetBorder ( );
__declspec(implementation_key(2025)) void Rectangle::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2026)) _variant_t Rectangle::GetBottomRightCell ( );
__declspec(implementation_key(2027)) void Rectangle::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(2028)) _variant_t Rectangle::GetCreator ( );
__declspec(implementation_key(2029)) void Rectangle::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2030)) _variant_t Rectangle::GetEnabled ( );
__declspec(implementation_key(2031)) void Rectangle::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2032)) _variant_t Rectangle::GetHeight ( );
__declspec(implementation_key(2033)) void Rectangle::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2034)) _variant_t Rectangle::GetIndex ( );
__declspec(implementation_key(2035)) void Rectangle::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(2036)) _variant_t Rectangle::GetInterior ( );
__declspec(implementation_key(2037)) void Rectangle::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2038)) _variant_t Rectangle::GetLeft ( );
__declspec(implementation_key(2039)) void Rectangle::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2040)) _variant_t Rectangle::GetLocked ( );
__declspec(implementation_key(2041)) void Rectangle::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2042)) _variant_t Rectangle::GetName ( );
__declspec(implementation_key(2043)) void Rectangle::PutName ( const _variant_t & _val );
__declspec(implementation_key(2044)) _variant_t Rectangle::GetOnAction ( );
__declspec(implementation_key(2045)) void Rectangle::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2046)) _variant_t Rectangle::GetParent ( );
__declspec(implementation_key(2047)) void Rectangle::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2048)) _variant_t Rectangle::GetPlacement ( );
__declspec(implementation_key(2049)) void Rectangle::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2050)) _variant_t Rectangle::GetPrintObject ( );
__declspec(implementation_key(2051)) void Rectangle::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2052)) _variant_t Rectangle::GetRoundedCorners ( );
__declspec(implementation_key(2053)) void Rectangle::PutRoundedCorners ( const _variant_t & _val );
__declspec(implementation_key(2054)) _variant_t Rectangle::GetShadow ( );
__declspec(implementation_key(2055)) void Rectangle::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2056)) _variant_t Rectangle::GetTop ( );
__declspec(implementation_key(2057)) void Rectangle::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2058)) _variant_t Rectangle::GetTopLeftCell ( );
__declspec(implementation_key(2059)) void Rectangle::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(2060)) _variant_t Rectangle::GetVisible ( );
__declspec(implementation_key(2061)) void Rectangle::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2062)) _variant_t Rectangle::GetWidth ( );
__declspec(implementation_key(2063)) void Rectangle::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2064)) _variant_t Rectangle::GetZOrder ( );
__declspec(implementation_key(2065)) void Rectangle::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2066)) _variant_t Rectangles::_NewEnum ( );
__declspec(implementation_key(2067)) _variant_t Rectangles::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(2068)) _variant_t Rectangles::Application ( );
__declspec(implementation_key(2069)) _variant_t Rectangles::BringToFront ( );
__declspec(implementation_key(2070)) _variant_t Rectangles::Copy ( );
__declspec(implementation_key(2071)) _variant_t Rectangles::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2072)) _variant_t Rectangles::Cut ( );
__declspec(implementation_key(2073)) _variant_t Rectangles::Delete ( );
__declspec(implementation_key(2074)) _variant_t Rectangles::Duplicate ( );
__declspec(implementation_key(2075)) _variant_t Rectangles::Group ( );
__declspec(implementation_key(2076)) _variant_t Rectangles::Item ( const _variant_t & Index );
__declspec(implementation_key(2077)) _variant_t Rectangles::Select ( const _variant_t & Replace );
__declspec(implementation_key(2078)) _variant_t Rectangles::SendToBack ( );
__declspec(implementation_key(2079)) _variant_t Rectangles::GetBorder ( );
__declspec(implementation_key(2080)) void Rectangles::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2081)) _variant_t Rectangles::GetCount ( );
__declspec(implementation_key(2082)) void Rectangles::PutCount ( const _variant_t & _val );
__declspec(implementation_key(2083)) _variant_t Rectangles::GetCreator ( );
__declspec(implementation_key(2084)) void Rectangles::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2085)) _variant_t Rectangles::GetEnabled ( );
__declspec(implementation_key(2086)) void Rectangles::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2087)) _variant_t Rectangles::GetHeight ( );
__declspec(implementation_key(2088)) void Rectangles::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2089)) _variant_t Rectangles::GetInterior ( );
__declspec(implementation_key(2090)) void Rectangles::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2091)) _variant_t Rectangles::GetLeft ( );
__declspec(implementation_key(2092)) void Rectangles::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2093)) _variant_t Rectangles::GetLocked ( );
__declspec(implementation_key(2094)) void Rectangles::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2095)) _variant_t Rectangles::GetOnAction ( );
__declspec(implementation_key(2096)) void Rectangles::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2097)) _variant_t Rectangles::GetParent ( );
__declspec(implementation_key(2098)) void Rectangles::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2099)) _variant_t Rectangles::GetPlacement ( );
__declspec(implementation_key(2100)) void Rectangles::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2101)) _variant_t Rectangles::GetPrintObject ( );
__declspec(implementation_key(2102)) void Rectangles::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2103)) _variant_t Rectangles::GetRoundedCorners ( );
__declspec(implementation_key(2104)) void Rectangles::PutRoundedCorners ( const _variant_t & _val );
__declspec(implementation_key(2105)) _variant_t Rectangles::GetShadow ( );
__declspec(implementation_key(2106)) void Rectangles::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2107)) _variant_t Rectangles::GetTop ( );
__declspec(implementation_key(2108)) void Rectangles::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2109)) _variant_t Rectangles::GetVisible ( );
__declspec(implementation_key(2110)) void Rectangles::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2111)) _variant_t Rectangles::GetWidth ( );
__declspec(implementation_key(2112)) void Rectangles::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2113)) _variant_t Rectangles::GetZOrder ( );
__declspec(implementation_key(2114)) void Rectangles::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2115)) _variant_t Oval::Application ( );
__declspec(implementation_key(2116)) _variant_t Oval::BringToFront ( );
__declspec(implementation_key(2117)) _variant_t Oval::Copy ( );
__declspec(implementation_key(2118)) _variant_t Oval::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2119)) _variant_t Oval::Cut ( );
__declspec(implementation_key(2120)) _variant_t Oval::Delete ( );
__declspec(implementation_key(2121)) _variant_t Oval::Duplicate ( );
__declspec(implementation_key(2122)) _variant_t Oval::Select ( const _variant_t & Replace );
__declspec(implementation_key(2123)) _variant_t Oval::SendToBack ( );
__declspec(implementation_key(2124)) _variant_t Oval::GetBorder ( );
__declspec(implementation_key(2125)) void Oval::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2126)) _variant_t Oval::GetBottomRightCell ( );
__declspec(implementation_key(2127)) void Oval::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(2128)) _variant_t Oval::GetCreator ( );
__declspec(implementation_key(2129)) void Oval::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2130)) _variant_t Oval::GetEnabled ( );
__declspec(implementation_key(2131)) void Oval::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2132)) _variant_t Oval::GetHeight ( );
__declspec(implementation_key(2133)) void Oval::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2134)) _variant_t Oval::GetIndex ( );
__declspec(implementation_key(2135)) void Oval::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(2136)) _variant_t Oval::GetInterior ( );
__declspec(implementation_key(2137)) void Oval::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2138)) _variant_t Oval::GetLeft ( );
__declspec(implementation_key(2139)) void Oval::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2140)) _variant_t Oval::GetLocked ( );
__declspec(implementation_key(2141)) void Oval::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2142)) _variant_t Oval::GetName ( );
__declspec(implementation_key(2143)) void Oval::PutName ( const _variant_t & _val );
__declspec(implementation_key(2144)) _variant_t Oval::GetOnAction ( );
__declspec(implementation_key(2145)) void Oval::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2146)) _variant_t Oval::GetParent ( );
__declspec(implementation_key(2147)) void Oval::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2148)) _variant_t Oval::GetPlacement ( );
__declspec(implementation_key(2149)) void Oval::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2150)) _variant_t Oval::GetPrintObject ( );
__declspec(implementation_key(2151)) void Oval::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2152)) _variant_t Oval::GetShadow ( );
__declspec(implementation_key(2153)) void Oval::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2154)) _variant_t Oval::GetTop ( );
__declspec(implementation_key(2155)) void Oval::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2156)) _variant_t Oval::GetTopLeftCell ( );
__declspec(implementation_key(2157)) void Oval::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(2158)) _variant_t Oval::GetVisible ( );
__declspec(implementation_key(2159)) void Oval::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2160)) _variant_t Oval::GetWidth ( );
__declspec(implementation_key(2161)) void Oval::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2162)) _variant_t Oval::GetZOrder ( );
__declspec(implementation_key(2163)) void Oval::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2164)) _variant_t Ovals::_NewEnum ( );
__declspec(implementation_key(2165)) _variant_t Ovals::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(2166)) _variant_t Ovals::Application ( );
__declspec(implementation_key(2167)) _variant_t Ovals::BringToFront ( );
__declspec(implementation_key(2168)) _variant_t Ovals::Copy ( );
__declspec(implementation_key(2169)) _variant_t Ovals::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2170)) _variant_t Ovals::Cut ( );
__declspec(implementation_key(2171)) _variant_t Ovals::Delete ( );
__declspec(implementation_key(2172)) _variant_t Ovals::Duplicate ( );
__declspec(implementation_key(2173)) _variant_t Ovals::Group ( );
__declspec(implementation_key(2174)) _variant_t Ovals::Item ( const _variant_t & Index );
__declspec(implementation_key(2175)) _variant_t Ovals::Select ( const _variant_t & Replace );
__declspec(implementation_key(2176)) _variant_t Ovals::SendToBack ( );
__declspec(implementation_key(2177)) _variant_t Ovals::GetBorder ( );
__declspec(implementation_key(2178)) void Ovals::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2179)) _variant_t Ovals::GetCount ( );
__declspec(implementation_key(2180)) void Ovals::PutCount ( const _variant_t & _val );
__declspec(implementation_key(2181)) _variant_t Ovals::GetCreator ( );
__declspec(implementation_key(2182)) void Ovals::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2183)) _variant_t Ovals::GetEnabled ( );
__declspec(implementation_key(2184)) void Ovals::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2185)) _variant_t Ovals::GetHeight ( );
__declspec(implementation_key(2186)) void Ovals::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2187)) _variant_t Ovals::GetInterior ( );
__declspec(implementation_key(2188)) void Ovals::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2189)) _variant_t Ovals::GetLeft ( );
__declspec(implementation_key(2190)) void Ovals::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2191)) _variant_t Ovals::GetLocked ( );
__declspec(implementation_key(2192)) void Ovals::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2193)) _variant_t Ovals::GetOnAction ( );
__declspec(implementation_key(2194)) void Ovals::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2195)) _variant_t Ovals::GetParent ( );
__declspec(implementation_key(2196)) void Ovals::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2197)) _variant_t Ovals::GetPlacement ( );
__declspec(implementation_key(2198)) void Ovals::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2199)) _variant_t Ovals::GetPrintObject ( );
__declspec(implementation_key(2200)) void Ovals::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2201)) _variant_t Ovals::GetShadow ( );
__declspec(implementation_key(2202)) void Ovals::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2203)) _variant_t Ovals::GetTop ( );
__declspec(implementation_key(2204)) void Ovals::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2205)) _variant_t Ovals::GetVisible ( );
__declspec(implementation_key(2206)) void Ovals::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2207)) _variant_t Ovals::GetWidth ( );
__declspec(implementation_key(2208)) void Ovals::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2209)) _variant_t Ovals::GetZOrder ( );
__declspec(implementation_key(2210)) void Ovals::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2211)) _variant_t Arc::Application ( );
__declspec(implementation_key(2212)) _variant_t Arc::BringToFront ( );
__declspec(implementation_key(2213)) _variant_t Arc::Copy ( );
__declspec(implementation_key(2214)) _variant_t Arc::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2215)) _variant_t Arc::Cut ( );
__declspec(implementation_key(2216)) _variant_t Arc::Delete ( );
__declspec(implementation_key(2217)) _variant_t Arc::Duplicate ( );
__declspec(implementation_key(2218)) _variant_t Arc::Select ( const _variant_t & Replace );
__declspec(implementation_key(2219)) _variant_t Arc::SendToBack ( );
__declspec(implementation_key(2220)) _variant_t Arc::GetBorder ( );
__declspec(implementation_key(2221)) void Arc::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2222)) _variant_t Arc::GetBottomRightCell ( );
__declspec(implementation_key(2223)) void Arc::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(2224)) _variant_t Arc::GetCreator ( );
__declspec(implementation_key(2225)) void Arc::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2226)) _variant_t Arc::GetEnabled ( );
__declspec(implementation_key(2227)) void Arc::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2228)) _variant_t Arc::GetHeight ( );
__declspec(implementation_key(2229)) void Arc::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2230)) _variant_t Arc::GetIndex ( );
__declspec(implementation_key(2231)) void Arc::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(2232)) _variant_t Arc::GetInterior ( );
__declspec(implementation_key(2233)) void Arc::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2234)) _variant_t Arc::GetLeft ( );
__declspec(implementation_key(2235)) void Arc::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2236)) _variant_t Arc::GetLocked ( );
__declspec(implementation_key(2237)) void Arc::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2238)) _variant_t Arc::GetName ( );
__declspec(implementation_key(2239)) void Arc::PutName ( const _variant_t & _val );
__declspec(implementation_key(2240)) _variant_t Arc::GetOnAction ( );
__declspec(implementation_key(2241)) void Arc::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2242)) _variant_t Arc::GetParent ( );
__declspec(implementation_key(2243)) void Arc::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2244)) _variant_t Arc::GetPlacement ( );
__declspec(implementation_key(2245)) void Arc::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2246)) _variant_t Arc::GetPrintObject ( );
__declspec(implementation_key(2247)) void Arc::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2248)) _variant_t Arc::GetTop ( );
__declspec(implementation_key(2249)) void Arc::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2250)) _variant_t Arc::GetTopLeftCell ( );
__declspec(implementation_key(2251)) void Arc::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(2252)) _variant_t Arc::GetVisible ( );
__declspec(implementation_key(2253)) void Arc::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2254)) _variant_t Arc::GetWidth ( );
__declspec(implementation_key(2255)) void Arc::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2256)) _variant_t Arc::GetZOrder ( );
__declspec(implementation_key(2257)) void Arc::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2258)) _variant_t Arcs::_NewEnum ( );
__declspec(implementation_key(2259)) _variant_t Arcs::Add ( const _variant_t & X1, const _variant_t & Y1, const _variant_t & X2, const _variant_t & Y2 );
__declspec(implementation_key(2260)) _variant_t Arcs::Application ( );
__declspec(implementation_key(2261)) _variant_t Arcs::BringToFront ( );
__declspec(implementation_key(2262)) _variant_t Arcs::Copy ( );
__declspec(implementation_key(2263)) _variant_t Arcs::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2264)) _variant_t Arcs::Cut ( );
__declspec(implementation_key(2265)) _variant_t Arcs::Delete ( );
__declspec(implementation_key(2266)) _variant_t Arcs::Duplicate ( );
__declspec(implementation_key(2267)) _variant_t Arcs::Group ( );
__declspec(implementation_key(2268)) _variant_t Arcs::Item ( const _variant_t & Index );
__declspec(implementation_key(2269)) _variant_t Arcs::Select ( const _variant_t & Replace );
__declspec(implementation_key(2270)) _variant_t Arcs::SendToBack ( );
__declspec(implementation_key(2271)) _variant_t Arcs::GetBorder ( );
__declspec(implementation_key(2272)) void Arcs::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2273)) _variant_t Arcs::GetCount ( );
__declspec(implementation_key(2274)) void Arcs::PutCount ( const _variant_t & _val );
__declspec(implementation_key(2275)) _variant_t Arcs::GetCreator ( );
__declspec(implementation_key(2276)) void Arcs::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2277)) _variant_t Arcs::GetEnabled ( );
__declspec(implementation_key(2278)) void Arcs::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2279)) _variant_t Arcs::GetHeight ( );
__declspec(implementation_key(2280)) void Arcs::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2281)) _variant_t Arcs::GetInterior ( );
__declspec(implementation_key(2282)) void Arcs::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2283)) _variant_t Arcs::GetLeft ( );
__declspec(implementation_key(2284)) void Arcs::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2285)) _variant_t Arcs::GetLocked ( );
__declspec(implementation_key(2286)) void Arcs::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2287)) _variant_t Arcs::GetOnAction ( );
__declspec(implementation_key(2288)) void Arcs::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2289)) _variant_t Arcs::GetParent ( );
__declspec(implementation_key(2290)) void Arcs::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2291)) _variant_t Arcs::GetPlacement ( );
__declspec(implementation_key(2292)) void Arcs::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2293)) _variant_t Arcs::GetPrintObject ( );
__declspec(implementation_key(2294)) void Arcs::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2295)) _variant_t Arcs::GetTop ( );
__declspec(implementation_key(2296)) void Arcs::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2297)) _variant_t Arcs::GetVisible ( );
__declspec(implementation_key(2298)) void Arcs::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2299)) _variant_t Arcs::GetWidth ( );
__declspec(implementation_key(2300)) void Arcs::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2301)) _variant_t Arcs::GetZOrder ( );
__declspec(implementation_key(2302)) void Arcs::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2303)) _variant_t TextBox::Application ( );
__declspec(implementation_key(2304)) _variant_t TextBox::BringToFront ( );
__declspec(implementation_key(2305)) _variant_t TextBox::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(2306)) _variant_t TextBox::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(2307)) _variant_t TextBox::Copy ( );
__declspec(implementation_key(2308)) _variant_t TextBox::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2309)) _variant_t TextBox::Cut ( );
__declspec(implementation_key(2310)) _variant_t TextBox::Delete ( );
__declspec(implementation_key(2311)) _variant_t TextBox::Duplicate ( );
__declspec(implementation_key(2312)) _variant_t TextBox::Select ( const _variant_t & Replace );
__declspec(implementation_key(2313)) _variant_t TextBox::SendToBack ( );
__declspec(implementation_key(2314)) _variant_t TextBox::GetAddIndent ( );
__declspec(implementation_key(2315)) void TextBox::PutAddIndent ( const _variant_t & _val );
__declspec(implementation_key(2316)) _variant_t TextBox::GetAutoSize ( );
__declspec(implementation_key(2317)) void TextBox::PutAutoSize ( const _variant_t & _val );
__declspec(implementation_key(2318)) _variant_t TextBox::GetBorder ( );
__declspec(implementation_key(2319)) void TextBox::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2320)) _variant_t TextBox::GetBottomRightCell ( );
__declspec(implementation_key(2321)) void TextBox::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(2322)) _variant_t TextBox::GetCaption ( );
__declspec(implementation_key(2323)) void TextBox::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(2324)) _variant_t TextBox::GetCreator ( );
__declspec(implementation_key(2325)) void TextBox::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2326)) _variant_t TextBox::GetEnabled ( );
__declspec(implementation_key(2327)) void TextBox::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2328)) _variant_t TextBox::GetFont ( );
__declspec(implementation_key(2329)) void TextBox::PutFont ( const _variant_t & _val );
__declspec(implementation_key(2330)) _variant_t TextBox::GetFormula ( );
__declspec(implementation_key(2331)) void TextBox::PutFormula ( const _variant_t & _val );
__declspec(implementation_key(2332)) _variant_t TextBox::GetHeight ( );
__declspec(implementation_key(2333)) void TextBox::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2334)) _variant_t TextBox::GetHorizontalAlignment ( );
__declspec(implementation_key(2335)) void TextBox::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(2336)) _variant_t TextBox::GetIndex ( );
__declspec(implementation_key(2337)) void TextBox::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(2338)) _variant_t TextBox::GetInterior ( );
__declspec(implementation_key(2339)) void TextBox::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2340)) _variant_t TextBox::GetLeft ( );
__declspec(implementation_key(2341)) void TextBox::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2342)) _variant_t TextBox::GetLocked ( );
__declspec(implementation_key(2343)) void TextBox::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2344)) _variant_t TextBox::GetLockedText ( );
__declspec(implementation_key(2345)) void TextBox::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(2346)) _variant_t TextBox::GetName ( );
__declspec(implementation_key(2347)) void TextBox::PutName ( const _variant_t & _val );
__declspec(implementation_key(2348)) _variant_t TextBox::GetOnAction ( );
__declspec(implementation_key(2349)) void TextBox::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2350)) _variant_t TextBox::GetOrientation ( );
__declspec(implementation_key(2351)) void TextBox::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(2352)) _variant_t TextBox::GetParent ( );
__declspec(implementation_key(2353)) void TextBox::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2354)) _variant_t TextBox::GetPlacement ( );
__declspec(implementation_key(2355)) void TextBox::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2356)) _variant_t TextBox::GetPrintObject ( );
__declspec(implementation_key(2357)) void TextBox::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2358)) _variant_t TextBox::GetRoundedCorners ( );
__declspec(implementation_key(2359)) void TextBox::PutRoundedCorners ( const _variant_t & _val );
__declspec(implementation_key(2360)) _variant_t TextBox::GetShadow ( );
__declspec(implementation_key(2361)) void TextBox::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2362)) _variant_t TextBox::GetText ( );
__declspec(implementation_key(2363)) void TextBox::PutText ( const _variant_t & _val );
__declspec(implementation_key(2364)) _variant_t TextBox::GetTop ( );
__declspec(implementation_key(2365)) void TextBox::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2366)) _variant_t TextBox::GetTopLeftCell ( );
__declspec(implementation_key(2367)) void TextBox::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(2368)) _variant_t TextBox::GetVerticalAlignment ( );
__declspec(implementation_key(2369)) void TextBox::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(2370)) _variant_t TextBox::GetVisible ( );
__declspec(implementation_key(2371)) void TextBox::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2372)) _variant_t TextBox::GetWidth ( );
__declspec(implementation_key(2373)) void TextBox::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2374)) _variant_t TextBox::GetZOrder ( );
__declspec(implementation_key(2375)) void TextBox::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2376)) _variant_t TextBoxes::_NewEnum ( );
__declspec(implementation_key(2377)) _variant_t TextBoxes::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(2378)) _variant_t TextBoxes::Application ( );
__declspec(implementation_key(2379)) _variant_t TextBoxes::BringToFront ( );
__declspec(implementation_key(2380)) _variant_t TextBoxes::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(2381)) _variant_t TextBoxes::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(2382)) _variant_t TextBoxes::Copy ( );
__declspec(implementation_key(2383)) _variant_t TextBoxes::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2384)) _variant_t TextBoxes::Cut ( );
__declspec(implementation_key(2385)) _variant_t TextBoxes::Delete ( );
__declspec(implementation_key(2386)) _variant_t TextBoxes::Duplicate ( );
__declspec(implementation_key(2387)) _variant_t TextBoxes::Group ( );
__declspec(implementation_key(2388)) _variant_t TextBoxes::Item ( const _variant_t & Index );
__declspec(implementation_key(2389)) _variant_t TextBoxes::Select ( const _variant_t & Replace );
__declspec(implementation_key(2390)) _variant_t TextBoxes::SendToBack ( );
__declspec(implementation_key(2391)) _variant_t TextBoxes::GetAddIndent ( );
__declspec(implementation_key(2392)) void TextBoxes::PutAddIndent ( const _variant_t & _val );
__declspec(implementation_key(2393)) _variant_t TextBoxes::GetAutoSize ( );
__declspec(implementation_key(2394)) void TextBoxes::PutAutoSize ( const _variant_t & _val );
__declspec(implementation_key(2395)) _variant_t TextBoxes::GetBorder ( );
__declspec(implementation_key(2396)) void TextBoxes::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2397)) _variant_t TextBoxes::GetCaption ( );
__declspec(implementation_key(2398)) void TextBoxes::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(2399)) _variant_t TextBoxes::GetCount ( );
__declspec(implementation_key(2400)) void TextBoxes::PutCount ( const _variant_t & _val );
__declspec(implementation_key(2401)) _variant_t TextBoxes::GetCreator ( );
__declspec(implementation_key(2402)) void TextBoxes::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2403)) _variant_t TextBoxes::GetEnabled ( );
__declspec(implementation_key(2404)) void TextBoxes::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2405)) _variant_t TextBoxes::GetFont ( );
__declspec(implementation_key(2406)) void TextBoxes::PutFont ( const _variant_t & _val );
__declspec(implementation_key(2407)) _variant_t TextBoxes::GetFormula ( );
__declspec(implementation_key(2408)) void TextBoxes::PutFormula ( const _variant_t & _val );
__declspec(implementation_key(2409)) _variant_t TextBoxes::GetHeight ( );
__declspec(implementation_key(2410)) void TextBoxes::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2411)) _variant_t TextBoxes::GetHorizontalAlignment ( );
__declspec(implementation_key(2412)) void TextBoxes::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(2413)) _variant_t TextBoxes::GetInterior ( );
__declspec(implementation_key(2414)) void TextBoxes::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2415)) _variant_t TextBoxes::GetLeft ( );
__declspec(implementation_key(2416)) void TextBoxes::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2417)) _variant_t TextBoxes::GetLocked ( );
__declspec(implementation_key(2418)) void TextBoxes::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2419)) _variant_t TextBoxes::GetLockedText ( );
__declspec(implementation_key(2420)) void TextBoxes::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(2421)) _variant_t TextBoxes::GetOnAction ( );
__declspec(implementation_key(2422)) void TextBoxes::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2423)) _variant_t TextBoxes::GetOrientation ( );
__declspec(implementation_key(2424)) void TextBoxes::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(2425)) _variant_t TextBoxes::GetParent ( );
__declspec(implementation_key(2426)) void TextBoxes::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2427)) _variant_t TextBoxes::GetPlacement ( );
__declspec(implementation_key(2428)) void TextBoxes::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2429)) _variant_t TextBoxes::GetPrintObject ( );
__declspec(implementation_key(2430)) void TextBoxes::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2431)) _variant_t TextBoxes::GetRoundedCorners ( );
__declspec(implementation_key(2432)) void TextBoxes::PutRoundedCorners ( const _variant_t & _val );
__declspec(implementation_key(2433)) _variant_t TextBoxes::GetShadow ( );
__declspec(implementation_key(2434)) void TextBoxes::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2435)) _variant_t TextBoxes::GetText ( );
__declspec(implementation_key(2436)) void TextBoxes::PutText ( const _variant_t & _val );
__declspec(implementation_key(2437)) _variant_t TextBoxes::GetTop ( );
__declspec(implementation_key(2438)) void TextBoxes::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2439)) _variant_t TextBoxes::GetVerticalAlignment ( );
__declspec(implementation_key(2440)) void TextBoxes::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(2441)) _variant_t TextBoxes::GetVisible ( );
__declspec(implementation_key(2442)) void TextBoxes::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2443)) _variant_t TextBoxes::GetWidth ( );
__declspec(implementation_key(2444)) void TextBoxes::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2445)) _variant_t TextBoxes::GetZOrder ( );
__declspec(implementation_key(2446)) void TextBoxes::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2447)) _variant_t Picture::Application ( );
__declspec(implementation_key(2448)) _variant_t Picture::BringToFront ( );
__declspec(implementation_key(2449)) _variant_t Picture::Copy ( );
__declspec(implementation_key(2450)) _variant_t Picture::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2451)) _variant_t Picture::Cut ( );
__declspec(implementation_key(2452)) _variant_t Picture::Delete ( );
__declspec(implementation_key(2453)) _variant_t Picture::Duplicate ( );
__declspec(implementation_key(2454)) _variant_t Picture::Select ( const _variant_t & Replace );
__declspec(implementation_key(2455)) _variant_t Picture::SendToBack ( );
__declspec(implementation_key(2456)) _variant_t Picture::GetBorder ( );
__declspec(implementation_key(2457)) void Picture::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2458)) _variant_t Picture::GetBottomRightCell ( );
__declspec(implementation_key(2459)) void Picture::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(2460)) _variant_t Picture::GetCreator ( );
__declspec(implementation_key(2461)) void Picture::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2462)) _variant_t Picture::GetEnabled ( );
__declspec(implementation_key(2463)) void Picture::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2464)) _variant_t Picture::GetFormula ( );
__declspec(implementation_key(2465)) void Picture::PutFormula ( const _variant_t & _val );
__declspec(implementation_key(2466)) _variant_t Picture::GetHeight ( );
__declspec(implementation_key(2467)) void Picture::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2468)) _variant_t Picture::GetIndex ( );
__declspec(implementation_key(2469)) void Picture::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(2470)) _variant_t Picture::GetInterior ( );
__declspec(implementation_key(2471)) void Picture::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2472)) _variant_t Picture::GetLeft ( );
__declspec(implementation_key(2473)) void Picture::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2474)) _variant_t Picture::GetLocked ( );
__declspec(implementation_key(2475)) void Picture::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2476)) _variant_t Picture::GetName ( );
__declspec(implementation_key(2477)) void Picture::PutName ( const _variant_t & _val );
__declspec(implementation_key(2478)) _variant_t Picture::GetOnAction ( );
__declspec(implementation_key(2479)) void Picture::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2480)) _variant_t Picture::GetParent ( );
__declspec(implementation_key(2481)) void Picture::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2482)) _variant_t Picture::GetPlacement ( );
__declspec(implementation_key(2483)) void Picture::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2484)) _variant_t Picture::GetPrintObject ( );
__declspec(implementation_key(2485)) void Picture::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2486)) _variant_t Picture::GetShadow ( );
__declspec(implementation_key(2487)) void Picture::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2488)) _variant_t Picture::GetTop ( );
__declspec(implementation_key(2489)) void Picture::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2490)) _variant_t Picture::GetTopLeftCell ( );
__declspec(implementation_key(2491)) void Picture::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(2492)) _variant_t Picture::GetVisible ( );
__declspec(implementation_key(2493)) void Picture::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2494)) _variant_t Picture::GetWidth ( );
__declspec(implementation_key(2495)) void Picture::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2496)) _variant_t Picture::GetZOrder ( );
__declspec(implementation_key(2497)) void Picture::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2498)) _variant_t Pictures::_NewEnum ( );
__declspec(implementation_key(2499)) _variant_t Pictures::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(2500)) _variant_t Pictures::Application ( );
__declspec(implementation_key(2501)) _variant_t Pictures::BringToFront ( );
__declspec(implementation_key(2502)) _variant_t Pictures::Copy ( );
__declspec(implementation_key(2503)) _variant_t Pictures::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2504)) _variant_t Pictures::Cut ( );
__declspec(implementation_key(2505)) _variant_t Pictures::Delete ( );
__declspec(implementation_key(2506)) _variant_t Pictures::Duplicate ( );
__declspec(implementation_key(2507)) _variant_t Pictures::Group ( );
__declspec(implementation_key(2508)) _variant_t Pictures::Insert ( const _variant_t & Filename, const _variant_t & Converter );
__declspec(implementation_key(2509)) _variant_t Pictures::Item ( const _variant_t & Index );
__declspec(implementation_key(2510)) _variant_t Pictures::Paste ( const _variant_t & Link );
__declspec(implementation_key(2511)) _variant_t Pictures::Select ( const _variant_t & Replace );
__declspec(implementation_key(2512)) _variant_t Pictures::SendToBack ( );
__declspec(implementation_key(2513)) _variant_t Pictures::GetBorder ( );
__declspec(implementation_key(2514)) void Pictures::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2515)) _variant_t Pictures::GetCount ( );
__declspec(implementation_key(2516)) void Pictures::PutCount ( const _variant_t & _val );
__declspec(implementation_key(2517)) _variant_t Pictures::GetCreator ( );
__declspec(implementation_key(2518)) void Pictures::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2519)) _variant_t Pictures::GetEnabled ( );
__declspec(implementation_key(2520)) void Pictures::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2521)) _variant_t Pictures::GetFormula ( );
__declspec(implementation_key(2522)) void Pictures::PutFormula ( const _variant_t & _val );
__declspec(implementation_key(2523)) _variant_t Pictures::GetHeight ( );
__declspec(implementation_key(2524)) void Pictures::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2525)) _variant_t Pictures::GetInterior ( );
__declspec(implementation_key(2526)) void Pictures::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2527)) _variant_t Pictures::GetLeft ( );
__declspec(implementation_key(2528)) void Pictures::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2529)) _variant_t Pictures::GetLocked ( );
__declspec(implementation_key(2530)) void Pictures::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2531)) _variant_t Pictures::GetOnAction ( );
__declspec(implementation_key(2532)) void Pictures::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2533)) _variant_t Pictures::GetParent ( );
__declspec(implementation_key(2534)) void Pictures::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2535)) _variant_t Pictures::GetPlacement ( );
__declspec(implementation_key(2536)) void Pictures::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2537)) _variant_t Pictures::GetPrintObject ( );
__declspec(implementation_key(2538)) void Pictures::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2539)) _variant_t Pictures::GetShadow ( );
__declspec(implementation_key(2540)) void Pictures::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2541)) _variant_t Pictures::GetTop ( );
__declspec(implementation_key(2542)) void Pictures::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2543)) _variant_t Pictures::GetVisible ( );
__declspec(implementation_key(2544)) void Pictures::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2545)) _variant_t Pictures::GetWidth ( );
__declspec(implementation_key(2546)) void Pictures::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2547)) _variant_t Pictures::GetZOrder ( );
__declspec(implementation_key(2548)) void Pictures::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2549)) _variant_t OLEObject::Activate ( );
__declspec(implementation_key(2550)) _variant_t OLEObject::Application ( );
__declspec(implementation_key(2551)) _variant_t OLEObject::BringToFront ( );
__declspec(implementation_key(2552)) _variant_t OLEObject::Copy ( );
__declspec(implementation_key(2553)) _variant_t OLEObject::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2554)) _variant_t OLEObject::Cut ( );
__declspec(implementation_key(2555)) _variant_t OLEObject::Delete ( );
__declspec(implementation_key(2556)) _variant_t OLEObject::Duplicate ( );
__declspec(implementation_key(2557)) _variant_t OLEObject::Select ( const _variant_t & Replace );
__declspec(implementation_key(2558)) _variant_t OLEObject::SendToBack ( );
__declspec(implementation_key(2559)) _variant_t OLEObject::Update ( );
__declspec(implementation_key(2560)) _variant_t OLEObject::Verb ( const _variant_t & Verb );
__declspec(implementation_key(2561)) _variant_t OLEObject::GetAutoLoad ( );
__declspec(implementation_key(2562)) void OLEObject::PutAutoLoad ( const _variant_t & _val );
__declspec(implementation_key(2563)) _variant_t OLEObject::GetAutoUpdate ( );
__declspec(implementation_key(2564)) void OLEObject::PutAutoUpdate ( const _variant_t & _val );
__declspec(implementation_key(2565)) _variant_t OLEObject::GetBorder ( );
__declspec(implementation_key(2566)) void OLEObject::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2567)) _variant_t OLEObject::GetBottomRightCell ( );
__declspec(implementation_key(2568)) void OLEObject::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(2569)) _variant_t OLEObject::GetCreator ( );
__declspec(implementation_key(2570)) void OLEObject::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2571)) _variant_t OLEObject::GetEnabled ( );
__declspec(implementation_key(2572)) void OLEObject::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2573)) _variant_t OLEObject::GetHeight ( );
__declspec(implementation_key(2574)) void OLEObject::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2575)) _variant_t OLEObject::GetIndex ( );
__declspec(implementation_key(2576)) void OLEObject::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(2577)) _variant_t OLEObject::GetInterior ( );
__declspec(implementation_key(2578)) void OLEObject::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2579)) _variant_t OLEObject::GetLeft ( );
__declspec(implementation_key(2580)) void OLEObject::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2581)) _variant_t OLEObject::GetLocked ( );
__declspec(implementation_key(2582)) void OLEObject::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2583)) _variant_t OLEObject::GetName ( );
__declspec(implementation_key(2584)) void OLEObject::PutName ( const _variant_t & _val );
__declspec(implementation_key(2585)) _variant_t OLEObject::GetObject ( );
__declspec(implementation_key(2586)) void OLEObject::PutObject ( const _variant_t & _val );
__declspec(implementation_key(2587)) _variant_t OLEObject::GetOLEType ( );
__declspec(implementation_key(2588)) void OLEObject::PutOLEType ( const _variant_t & _val );
__declspec(implementation_key(2589)) _variant_t OLEObject::GetOnAction ( );
__declspec(implementation_key(2590)) void OLEObject::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2591)) _variant_t OLEObject::GetParent ( );
__declspec(implementation_key(2592)) void OLEObject::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2593)) _variant_t OLEObject::GetPlacement ( );
__declspec(implementation_key(2594)) void OLEObject::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2595)) _variant_t OLEObject::GetPrintObject ( );
__declspec(implementation_key(2596)) void OLEObject::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2597)) _variant_t OLEObject::GetShadow ( );
__declspec(implementation_key(2598)) void OLEObject::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2599)) _variant_t OLEObject::GetTop ( );
__declspec(implementation_key(2600)) void OLEObject::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2601)) _variant_t OLEObject::GetTopLeftCell ( );
__declspec(implementation_key(2602)) void OLEObject::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(2603)) _variant_t OLEObject::GetVisible ( );
__declspec(implementation_key(2604)) void OLEObject::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2605)) _variant_t OLEObject::GetWidth ( );
__declspec(implementation_key(2606)) void OLEObject::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2607)) _variant_t OLEObject::GetZOrder ( );
__declspec(implementation_key(2608)) void OLEObject::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2609)) _variant_t OLEObjects::_NewEnum ( );
__declspec(implementation_key(2610)) _variant_t OLEObjects::Add ( const _variant_t & ClassType, const _variant_t & Filename, const _variant_t & Link, const _variant_t & DisplayAsIcon, const _variant_t & IconFileName, const _variant_t & IconIndex, const _variant_t & IconLabel );
__declspec(implementation_key(2611)) _variant_t OLEObjects::Application ( );
__declspec(implementation_key(2612)) _variant_t OLEObjects::BringToFront ( );
__declspec(implementation_key(2613)) _variant_t OLEObjects::Copy ( );
__declspec(implementation_key(2614)) _variant_t OLEObjects::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2615)) _variant_t OLEObjects::Cut ( );
__declspec(implementation_key(2616)) _variant_t OLEObjects::Delete ( );
__declspec(implementation_key(2617)) _variant_t OLEObjects::Duplicate ( );
__declspec(implementation_key(2618)) _variant_t OLEObjects::Group ( );
__declspec(implementation_key(2619)) _variant_t OLEObjects::Item ( const _variant_t & Index );
__declspec(implementation_key(2620)) _variant_t OLEObjects::Select ( const _variant_t & Replace );
__declspec(implementation_key(2621)) _variant_t OLEObjects::SendToBack ( );
__declspec(implementation_key(2622)) _variant_t OLEObjects::GetBorder ( );
__declspec(implementation_key(2623)) void OLEObjects::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2624)) _variant_t OLEObjects::GetCount ( );
__declspec(implementation_key(2625)) void OLEObjects::PutCount ( const _variant_t & _val );
__declspec(implementation_key(2626)) _variant_t OLEObjects::GetCreator ( );
__declspec(implementation_key(2627)) void OLEObjects::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2628)) _variant_t OLEObjects::GetEnabled ( );
__declspec(implementation_key(2629)) void OLEObjects::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2630)) _variant_t OLEObjects::GetHeight ( );
__declspec(implementation_key(2631)) void OLEObjects::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2632)) _variant_t OLEObjects::GetInterior ( );
__declspec(implementation_key(2633)) void OLEObjects::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2634)) _variant_t OLEObjects::GetLeft ( );
__declspec(implementation_key(2635)) void OLEObjects::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2636)) _variant_t OLEObjects::GetLocked ( );
__declspec(implementation_key(2637)) void OLEObjects::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2638)) _variant_t OLEObjects::GetOnAction ( );
__declspec(implementation_key(2639)) void OLEObjects::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2640)) _variant_t OLEObjects::GetParent ( );
__declspec(implementation_key(2641)) void OLEObjects::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2642)) _variant_t OLEObjects::GetPlacement ( );
__declspec(implementation_key(2643)) void OLEObjects::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2644)) _variant_t OLEObjects::GetPrintObject ( );
__declspec(implementation_key(2645)) void OLEObjects::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2646)) _variant_t OLEObjects::GetShadow ( );
__declspec(implementation_key(2647)) void OLEObjects::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2648)) _variant_t OLEObjects::GetTop ( );
__declspec(implementation_key(2649)) void OLEObjects::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2650)) _variant_t OLEObjects::GetVisible ( );
__declspec(implementation_key(2651)) void OLEObjects::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2652)) _variant_t OLEObjects::GetWidth ( );
__declspec(implementation_key(2653)) void OLEObjects::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2654)) _variant_t OLEObjects::GetZOrder ( );
__declspec(implementation_key(2655)) void OLEObjects::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2656)) _variant_t ChartObject::Activate ( );
__declspec(implementation_key(2657)) _variant_t ChartObject::Application ( );
__declspec(implementation_key(2658)) _variant_t ChartObject::BringToFront ( );
__declspec(implementation_key(2659)) _variant_t ChartObject::Copy ( );
__declspec(implementation_key(2660)) _variant_t ChartObject::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2661)) _variant_t ChartObject::Cut ( );
__declspec(implementation_key(2662)) _variant_t ChartObject::Delete ( );
__declspec(implementation_key(2663)) _variant_t ChartObject::Duplicate ( );
__declspec(implementation_key(2664)) _variant_t ChartObject::Select ( const _variant_t & Replace );
__declspec(implementation_key(2665)) _variant_t ChartObject::SendToBack ( );
__declspec(implementation_key(2666)) _variant_t ChartObject::GetBorder ( );
__declspec(implementation_key(2667)) void ChartObject::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2668)) _variant_t ChartObject::GetBottomRightCell ( );
__declspec(implementation_key(2669)) void ChartObject::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(2670)) _variant_t ChartObject::GetChart ( );
__declspec(implementation_key(2671)) void ChartObject::PutChart ( const _variant_t & _val );
__declspec(implementation_key(2672)) _variant_t ChartObject::GetCreator ( );
__declspec(implementation_key(2673)) void ChartObject::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2674)) _variant_t ChartObject::GetEnabled ( );
__declspec(implementation_key(2675)) void ChartObject::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2676)) _variant_t ChartObject::GetHeight ( );
__declspec(implementation_key(2677)) void ChartObject::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2678)) _variant_t ChartObject::GetIndex ( );
__declspec(implementation_key(2679)) void ChartObject::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(2680)) _variant_t ChartObject::GetInterior ( );
__declspec(implementation_key(2681)) void ChartObject::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2682)) _variant_t ChartObject::GetLeft ( );
__declspec(implementation_key(2683)) void ChartObject::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2684)) _variant_t ChartObject::GetLocked ( );
__declspec(implementation_key(2685)) void ChartObject::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2686)) _variant_t ChartObject::GetName ( );
__declspec(implementation_key(2687)) void ChartObject::PutName ( const _variant_t & _val );
__declspec(implementation_key(2688)) _variant_t ChartObject::GetOnAction ( );
__declspec(implementation_key(2689)) void ChartObject::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2690)) _variant_t ChartObject::GetParent ( );
__declspec(implementation_key(2691)) void ChartObject::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2692)) _variant_t ChartObject::GetPlacement ( );
__declspec(implementation_key(2693)) void ChartObject::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2694)) _variant_t ChartObject::GetPrintObject ( );
__declspec(implementation_key(2695)) void ChartObject::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2696)) _variant_t ChartObject::GetRoundedCorners ( );
__declspec(implementation_key(2697)) void ChartObject::PutRoundedCorners ( const _variant_t & _val );
__declspec(implementation_key(2698)) _variant_t ChartObject::GetShadow ( );
__declspec(implementation_key(2699)) void ChartObject::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2700)) _variant_t ChartObject::GetTop ( );
__declspec(implementation_key(2701)) void ChartObject::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2702)) _variant_t ChartObject::GetTopLeftCell ( );
__declspec(implementation_key(2703)) void ChartObject::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(2704)) _variant_t ChartObject::GetVisible ( );
__declspec(implementation_key(2705)) void ChartObject::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2706)) _variant_t ChartObject::GetWidth ( );
__declspec(implementation_key(2707)) void ChartObject::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2708)) _variant_t ChartObject::GetZOrder ( );
__declspec(implementation_key(2709)) void ChartObject::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2710)) _variant_t ChartObjects::_NewEnum ( );
__declspec(implementation_key(2711)) _variant_t ChartObjects::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(2712)) _variant_t ChartObjects::Application ( );
__declspec(implementation_key(2713)) _variant_t ChartObjects::BringToFront ( );
__declspec(implementation_key(2714)) _variant_t ChartObjects::Copy ( );
__declspec(implementation_key(2715)) _variant_t ChartObjects::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2716)) _variant_t ChartObjects::Cut ( );
__declspec(implementation_key(2717)) _variant_t ChartObjects::Delete ( );
__declspec(implementation_key(2718)) _variant_t ChartObjects::Duplicate ( );
__declspec(implementation_key(2719)) _variant_t ChartObjects::Group ( );
__declspec(implementation_key(2720)) _variant_t ChartObjects::Item ( const _variant_t & Index );
__declspec(implementation_key(2721)) _variant_t ChartObjects::Select ( const _variant_t & Replace );
__declspec(implementation_key(2722)) _variant_t ChartObjects::SendToBack ( );
__declspec(implementation_key(2723)) _variant_t ChartObjects::GetBorder ( );
__declspec(implementation_key(2724)) void ChartObjects::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2725)) _variant_t ChartObjects::GetCount ( );
__declspec(implementation_key(2726)) void ChartObjects::PutCount ( const _variant_t & _val );
__declspec(implementation_key(2727)) _variant_t ChartObjects::GetCreator ( );
__declspec(implementation_key(2728)) void ChartObjects::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2729)) _variant_t ChartObjects::GetEnabled ( );
__declspec(implementation_key(2730)) void ChartObjects::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2731)) _variant_t ChartObjects::GetHeight ( );
__declspec(implementation_key(2732)) void ChartObjects::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2733)) _variant_t ChartObjects::GetInterior ( );
__declspec(implementation_key(2734)) void ChartObjects::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2735)) _variant_t ChartObjects::GetLeft ( );
__declspec(implementation_key(2736)) void ChartObjects::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2737)) _variant_t ChartObjects::GetLocked ( );
__declspec(implementation_key(2738)) void ChartObjects::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2739)) _variant_t ChartObjects::GetOnAction ( );
__declspec(implementation_key(2740)) void ChartObjects::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2741)) _variant_t ChartObjects::GetParent ( );
__declspec(implementation_key(2742)) void ChartObjects::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2743)) _variant_t ChartObjects::GetPlacement ( );
__declspec(implementation_key(2744)) void ChartObjects::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2745)) _variant_t ChartObjects::GetPrintObject ( );
__declspec(implementation_key(2746)) void ChartObjects::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2747)) _variant_t ChartObjects::GetRoundedCorners ( );
__declspec(implementation_key(2748)) void ChartObjects::PutRoundedCorners ( const _variant_t & _val );
__declspec(implementation_key(2749)) _variant_t ChartObjects::GetShadow ( );
__declspec(implementation_key(2750)) void ChartObjects::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2751)) _variant_t ChartObjects::GetTop ( );
__declspec(implementation_key(2752)) void ChartObjects::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2753)) _variant_t ChartObjects::GetVisible ( );
__declspec(implementation_key(2754)) void ChartObjects::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2755)) _variant_t ChartObjects::GetWidth ( );
__declspec(implementation_key(2756)) void ChartObjects::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2757)) _variant_t ChartObjects::GetZOrder ( );
__declspec(implementation_key(2758)) void ChartObjects::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2759)) _variant_t Drawing::AddVertex ( const _variant_t & Left, const _variant_t & Top );
__declspec(implementation_key(2760)) _variant_t Drawing::Application ( );
__declspec(implementation_key(2761)) _variant_t Drawing::BringToFront ( );
__declspec(implementation_key(2762)) _variant_t Drawing::Copy ( );
__declspec(implementation_key(2763)) _variant_t Drawing::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2764)) _variant_t Drawing::Cut ( );
__declspec(implementation_key(2765)) _variant_t Drawing::Delete ( );
__declspec(implementation_key(2766)) _variant_t Drawing::Duplicate ( );
__declspec(implementation_key(2767)) _variant_t Drawing::Reshape ( const _variant_t & Vertex, const _variant_t & Insert, const _variant_t & Left, const _variant_t & Top );
__declspec(implementation_key(2768)) _variant_t Drawing::Select ( const _variant_t & Replace );
__declspec(implementation_key(2769)) _variant_t Drawing::SendToBack ( );
__declspec(implementation_key(2770)) _variant_t Drawing::GetBorder ( );
__declspec(implementation_key(2771)) void Drawing::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2772)) _variant_t Drawing::GetBottomRightCell ( );
__declspec(implementation_key(2773)) void Drawing::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(2774)) _variant_t Drawing::GetCreator ( );
__declspec(implementation_key(2775)) void Drawing::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2776)) _variant_t Drawing::GetEnabled ( );
__declspec(implementation_key(2777)) void Drawing::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2778)) _variant_t Drawing::GetHeight ( );
__declspec(implementation_key(2779)) void Drawing::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2780)) _variant_t Drawing::GetIndex ( );
__declspec(implementation_key(2781)) void Drawing::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(2782)) _variant_t Drawing::GetInterior ( );
__declspec(implementation_key(2783)) void Drawing::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2784)) _variant_t Drawing::GetLeft ( );
__declspec(implementation_key(2785)) void Drawing::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2786)) _variant_t Drawing::GetLocked ( );
__declspec(implementation_key(2787)) void Drawing::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2788)) _variant_t Drawing::GetName ( );
__declspec(implementation_key(2789)) void Drawing::PutName ( const _variant_t & _val );
__declspec(implementation_key(2790)) _variant_t Drawing::GetOnAction ( );
__declspec(implementation_key(2791)) void Drawing::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2792)) _variant_t Drawing::GetParent ( );
__declspec(implementation_key(2793)) void Drawing::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2794)) _variant_t Drawing::GetPlacement ( );
__declspec(implementation_key(2795)) void Drawing::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2796)) _variant_t Drawing::GetPrintObject ( );
__declspec(implementation_key(2797)) void Drawing::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2798)) _variant_t Drawing::GetShadow ( );
__declspec(implementation_key(2799)) void Drawing::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2800)) _variant_t Drawing::GetTop ( );
__declspec(implementation_key(2801)) void Drawing::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2802)) _variant_t Drawing::GetTopLeftCell ( );
__declspec(implementation_key(2803)) void Drawing::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(2804)) _variant_t Drawing::GetVertices ( );
__declspec(implementation_key(2805)) void Drawing::PutVertices ( const _variant_t & _val );
__declspec(implementation_key(2806)) _variant_t Drawing::GetVisible ( );
__declspec(implementation_key(2807)) void Drawing::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2808)) _variant_t Drawing::GetWidth ( );
__declspec(implementation_key(2809)) void Drawing::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2810)) _variant_t Drawing::GetZOrder ( );
__declspec(implementation_key(2811)) void Drawing::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2812)) _variant_t Drawings::_NewEnum ( );
__declspec(implementation_key(2813)) _variant_t Drawings::Add ( const _variant_t & X1, const _variant_t & Y1, const _variant_t & X2, const _variant_t & Y2, const _variant_t & Closed );
__declspec(implementation_key(2814)) _variant_t Drawings::Application ( );
__declspec(implementation_key(2815)) _variant_t Drawings::BringToFront ( );
__declspec(implementation_key(2816)) _variant_t Drawings::Copy ( );
__declspec(implementation_key(2817)) _variant_t Drawings::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2818)) _variant_t Drawings::Cut ( );
__declspec(implementation_key(2819)) _variant_t Drawings::Delete ( );
__declspec(implementation_key(2820)) _variant_t Drawings::Duplicate ( );
__declspec(implementation_key(2821)) _variant_t Drawings::Group ( );
__declspec(implementation_key(2822)) _variant_t Drawings::Item ( const _variant_t & Index );
__declspec(implementation_key(2823)) _variant_t Drawings::Reshape ( const _variant_t & Vertex, const _variant_t & Insert, const _variant_t & Left, const _variant_t & Top );
__declspec(implementation_key(2824)) _variant_t Drawings::Select ( const _variant_t & Replace );
__declspec(implementation_key(2825)) _variant_t Drawings::SendToBack ( );
__declspec(implementation_key(2826)) _variant_t Drawings::GetBorder ( );
__declspec(implementation_key(2827)) void Drawings::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(2828)) _variant_t Drawings::GetCount ( );
__declspec(implementation_key(2829)) void Drawings::PutCount ( const _variant_t & _val );
__declspec(implementation_key(2830)) _variant_t Drawings::GetCreator ( );
__declspec(implementation_key(2831)) void Drawings::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2832)) _variant_t Drawings::GetEnabled ( );
__declspec(implementation_key(2833)) void Drawings::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2834)) _variant_t Drawings::GetHeight ( );
__declspec(implementation_key(2835)) void Drawings::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2836)) _variant_t Drawings::GetInterior ( );
__declspec(implementation_key(2837)) void Drawings::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(2838)) _variant_t Drawings::GetLeft ( );
__declspec(implementation_key(2839)) void Drawings::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2840)) _variant_t Drawings::GetLocked ( );
__declspec(implementation_key(2841)) void Drawings::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2842)) _variant_t Drawings::GetOnAction ( );
__declspec(implementation_key(2843)) void Drawings::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2844)) _variant_t Drawings::GetParent ( );
__declspec(implementation_key(2845)) void Drawings::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2846)) _variant_t Drawings::GetPlacement ( );
__declspec(implementation_key(2847)) void Drawings::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2848)) _variant_t Drawings::GetPrintObject ( );
__declspec(implementation_key(2849)) void Drawings::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2850)) _variant_t Drawings::GetShadow ( );
__declspec(implementation_key(2851)) void Drawings::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(2852)) _variant_t Drawings::GetTop ( );
__declspec(implementation_key(2853)) void Drawings::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2854)) _variant_t Drawings::GetVisible ( );
__declspec(implementation_key(2855)) void Drawings::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2856)) _variant_t Drawings::GetWidth ( );
__declspec(implementation_key(2857)) void Drawings::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2858)) _variant_t Drawings::GetZOrder ( );
__declspec(implementation_key(2859)) void Drawings::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2860)) _variant_t Button::Application ( );
__declspec(implementation_key(2861)) _variant_t Button::BringToFront ( );
__declspec(implementation_key(2862)) _variant_t Button::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(2863)) _variant_t Button::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(2864)) _variant_t Button::Copy ( );
__declspec(implementation_key(2865)) _variant_t Button::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2866)) _variant_t Button::Cut ( );
__declspec(implementation_key(2867)) _variant_t Button::Delete ( );
__declspec(implementation_key(2868)) _variant_t Button::Duplicate ( );
__declspec(implementation_key(2869)) _variant_t Button::Select ( const _variant_t & Replace );
__declspec(implementation_key(2870)) _variant_t Button::SendToBack ( );
__declspec(implementation_key(2871)) _variant_t Button::GetAccelerator ( );
__declspec(implementation_key(2872)) void Button::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(2873)) _variant_t Button::GetAddIndent ( );
__declspec(implementation_key(2874)) void Button::PutAddIndent ( const _variant_t & _val );
__declspec(implementation_key(2875)) _variant_t Button::GetAutoSize ( );
__declspec(implementation_key(2876)) void Button::PutAutoSize ( const _variant_t & _val );
__declspec(implementation_key(2877)) _variant_t Button::GetBottomRightCell ( );
__declspec(implementation_key(2878)) void Button::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(2879)) _variant_t Button::GetCancelButton ( );
__declspec(implementation_key(2880)) void Button::PutCancelButton ( const _variant_t & _val );
__declspec(implementation_key(2881)) _variant_t Button::GetCaption ( );
__declspec(implementation_key(2882)) void Button::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(2883)) _variant_t Button::GetCreator ( );
__declspec(implementation_key(2884)) void Button::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2885)) _variant_t Button::GetDefaultButton ( );
__declspec(implementation_key(2886)) void Button::PutDefaultButton ( const _variant_t & _val );
__declspec(implementation_key(2887)) _variant_t Button::GetDismissButton ( );
__declspec(implementation_key(2888)) void Button::PutDismissButton ( const _variant_t & _val );
__declspec(implementation_key(2889)) _variant_t Button::GetEnabled ( );
__declspec(implementation_key(2890)) void Button::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2891)) _variant_t Button::GetFont ( );
__declspec(implementation_key(2892)) void Button::PutFont ( const _variant_t & _val );
__declspec(implementation_key(2893)) _variant_t Button::GetFormula ( );
__declspec(implementation_key(2894)) void Button::PutFormula ( const _variant_t & _val );
__declspec(implementation_key(2895)) _variant_t Button::GetHeight ( );
__declspec(implementation_key(2896)) void Button::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2897)) _variant_t Button::GetHelpButton ( );
__declspec(implementation_key(2898)) void Button::PutHelpButton ( const _variant_t & _val );
__declspec(implementation_key(2899)) _variant_t Button::GetHorizontalAlignment ( );
__declspec(implementation_key(2900)) void Button::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(2901)) _variant_t Button::GetIndex ( );
__declspec(implementation_key(2902)) void Button::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(2903)) _variant_t Button::GetLeft ( );
__declspec(implementation_key(2904)) void Button::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2905)) _variant_t Button::GetLocked ( );
__declspec(implementation_key(2906)) void Button::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2907)) _variant_t Button::GetLockedText ( );
__declspec(implementation_key(2908)) void Button::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(2909)) _variant_t Button::GetName ( );
__declspec(implementation_key(2910)) void Button::PutName ( const _variant_t & _val );
__declspec(implementation_key(2911)) _variant_t Button::GetOnAction ( );
__declspec(implementation_key(2912)) void Button::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2913)) _variant_t Button::GetOrientation ( );
__declspec(implementation_key(2914)) void Button::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(2915)) _variant_t Button::GetParent ( );
__declspec(implementation_key(2916)) void Button::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2917)) _variant_t Button::GetPhoneticAccelerator ( );
__declspec(implementation_key(2918)) void Button::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(2919)) _variant_t Button::GetPlacement ( );
__declspec(implementation_key(2920)) void Button::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2921)) _variant_t Button::GetPrintObject ( );
__declspec(implementation_key(2922)) void Button::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(2923)) _variant_t Button::GetText ( );
__declspec(implementation_key(2924)) void Button::PutText ( const _variant_t & _val );
__declspec(implementation_key(2925)) _variant_t Button::GetTop ( );
__declspec(implementation_key(2926)) void Button::PutTop ( const _variant_t & _val );
__declspec(implementation_key(2927)) _variant_t Button::GetTopLeftCell ( );
__declspec(implementation_key(2928)) void Button::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(2929)) _variant_t Button::GetVerticalAlignment ( );
__declspec(implementation_key(2930)) void Button::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(2931)) _variant_t Button::GetVisible ( );
__declspec(implementation_key(2932)) void Button::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(2933)) _variant_t Button::GetWidth ( );
__declspec(implementation_key(2934)) void Button::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(2935)) _variant_t Button::GetZOrder ( );
__declspec(implementation_key(2936)) void Button::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(2937)) _variant_t Buttons::_NewEnum ( );
__declspec(implementation_key(2938)) _variant_t Buttons::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(2939)) _variant_t Buttons::Application ( );
__declspec(implementation_key(2940)) _variant_t Buttons::BringToFront ( );
__declspec(implementation_key(2941)) _variant_t Buttons::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(2942)) _variant_t Buttons::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(2943)) _variant_t Buttons::Copy ( );
__declspec(implementation_key(2944)) _variant_t Buttons::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(2945)) _variant_t Buttons::Cut ( );
__declspec(implementation_key(2946)) _variant_t Buttons::Delete ( );
__declspec(implementation_key(2947)) _variant_t Buttons::Duplicate ( );
__declspec(implementation_key(2948)) _variant_t Buttons::Group ( );
__declspec(implementation_key(2949)) _variant_t Buttons::Item ( const _variant_t & Index );
__declspec(implementation_key(2950)) _variant_t Buttons::Select ( const _variant_t & Replace );
__declspec(implementation_key(2951)) _variant_t Buttons::SendToBack ( );
__declspec(implementation_key(2952)) _variant_t Buttons::GetAccelerator ( );
__declspec(implementation_key(2953)) void Buttons::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(2954)) _variant_t Buttons::GetAddIndent ( );
__declspec(implementation_key(2955)) void Buttons::PutAddIndent ( const _variant_t & _val );
__declspec(implementation_key(2956)) _variant_t Buttons::GetAutoSize ( );
__declspec(implementation_key(2957)) void Buttons::PutAutoSize ( const _variant_t & _val );
__declspec(implementation_key(2958)) _variant_t Buttons::GetCancelButton ( );
__declspec(implementation_key(2959)) void Buttons::PutCancelButton ( const _variant_t & _val );
__declspec(implementation_key(2960)) _variant_t Buttons::GetCaption ( );
__declspec(implementation_key(2961)) void Buttons::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(2962)) _variant_t Buttons::GetCount ( );
__declspec(implementation_key(2963)) void Buttons::PutCount ( const _variant_t & _val );
__declspec(implementation_key(2964)) _variant_t Buttons::GetCreator ( );
__declspec(implementation_key(2965)) void Buttons::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(2966)) _variant_t Buttons::GetDefaultButton ( );
__declspec(implementation_key(2967)) void Buttons::PutDefaultButton ( const _variant_t & _val );
__declspec(implementation_key(2968)) _variant_t Buttons::GetDismissButton ( );
__declspec(implementation_key(2969)) void Buttons::PutDismissButton ( const _variant_t & _val );
__declspec(implementation_key(2970)) _variant_t Buttons::GetEnabled ( );
__declspec(implementation_key(2971)) void Buttons::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(2972)) _variant_t Buttons::GetFont ( );
__declspec(implementation_key(2973)) void Buttons::PutFont ( const _variant_t & _val );
__declspec(implementation_key(2974)) _variant_t Buttons::GetFormula ( );
__declspec(implementation_key(2975)) void Buttons::PutFormula ( const _variant_t & _val );
__declspec(implementation_key(2976)) _variant_t Buttons::GetHeight ( );
__declspec(implementation_key(2977)) void Buttons::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(2978)) _variant_t Buttons::GetHelpButton ( );
__declspec(implementation_key(2979)) void Buttons::PutHelpButton ( const _variant_t & _val );
__declspec(implementation_key(2980)) _variant_t Buttons::GetHorizontalAlignment ( );
__declspec(implementation_key(2981)) void Buttons::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(2982)) _variant_t Buttons::GetLeft ( );
__declspec(implementation_key(2983)) void Buttons::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(2984)) _variant_t Buttons::GetLocked ( );
__declspec(implementation_key(2985)) void Buttons::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(2986)) _variant_t Buttons::GetLockedText ( );
__declspec(implementation_key(2987)) void Buttons::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(2988)) _variant_t Buttons::GetOnAction ( );
__declspec(implementation_key(2989)) void Buttons::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(2990)) _variant_t Buttons::GetOrientation ( );
__declspec(implementation_key(2991)) void Buttons::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(2992)) _variant_t Buttons::GetParent ( );
__declspec(implementation_key(2993)) void Buttons::PutParent ( const _variant_t & _val );
__declspec(implementation_key(2994)) _variant_t Buttons::GetPhoneticAccelerator ( );
__declspec(implementation_key(2995)) void Buttons::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(2996)) _variant_t Buttons::GetPlacement ( );
__declspec(implementation_key(2997)) void Buttons::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(2998)) _variant_t Buttons::GetPrintObject ( );
__declspec(implementation_key(2999)) void Buttons::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3000)) _variant_t Buttons::GetText ( );
__declspec(implementation_key(3001)) void Buttons::PutText ( const _variant_t & _val );
__declspec(implementation_key(3002)) _variant_t Buttons::GetTop ( );
__declspec(implementation_key(3003)) void Buttons::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3004)) _variant_t Buttons::GetVerticalAlignment ( );
__declspec(implementation_key(3005)) void Buttons::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(3006)) _variant_t Buttons::GetVisible ( );
__declspec(implementation_key(3007)) void Buttons::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3008)) _variant_t Buttons::GetWidth ( );
__declspec(implementation_key(3009)) void Buttons::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3010)) _variant_t Buttons::GetZOrder ( );
__declspec(implementation_key(3011)) void Buttons::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3012)) _variant_t EditBox::Application ( );
__declspec(implementation_key(3013)) _variant_t EditBox::BringToFront ( );
__declspec(implementation_key(3014)) _variant_t EditBox::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3015)) _variant_t EditBox::Copy ( );
__declspec(implementation_key(3016)) _variant_t EditBox::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3017)) _variant_t EditBox::Cut ( );
__declspec(implementation_key(3018)) _variant_t EditBox::Delete ( );
__declspec(implementation_key(3019)) _variant_t EditBox::Duplicate ( );
__declspec(implementation_key(3020)) _variant_t EditBox::Select ( const _variant_t & Replace );
__declspec(implementation_key(3021)) _variant_t EditBox::SendToBack ( );
__declspec(implementation_key(3022)) _variant_t EditBox::GetBottomRightCell ( );
__declspec(implementation_key(3023)) void EditBox::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(3024)) _variant_t EditBox::GetCaption ( );
__declspec(implementation_key(3025)) void EditBox::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3026)) _variant_t EditBox::GetCreator ( );
__declspec(implementation_key(3027)) void EditBox::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3028)) _variant_t EditBox::GetDisplayVerticalScrollBar ( );
__declspec(implementation_key(3029)) void EditBox::PutDisplayVerticalScrollBar ( const _variant_t & _val );
__declspec(implementation_key(3030)) _variant_t EditBox::GetEnabled ( );
__declspec(implementation_key(3031)) void EditBox::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3032)) _variant_t EditBox::GetHeight ( );
__declspec(implementation_key(3033)) void EditBox::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3034)) _variant_t EditBox::GetIndex ( );
__declspec(implementation_key(3035)) void EditBox::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(3036)) _variant_t EditBox::GetInputType ( );
__declspec(implementation_key(3037)) void EditBox::PutInputType ( const _variant_t & _val );
__declspec(implementation_key(3038)) _variant_t EditBox::GetLeft ( );
__declspec(implementation_key(3039)) void EditBox::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3040)) _variant_t EditBox::GetLinkedObject ( );
__declspec(implementation_key(3041)) void EditBox::PutLinkedObject ( const _variant_t & _val );
__declspec(implementation_key(3042)) _variant_t EditBox::GetLocked ( );
__declspec(implementation_key(3043)) void EditBox::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3044)) _variant_t EditBox::GetMultiLine ( );
__declspec(implementation_key(3045)) void EditBox::PutMultiLine ( const _variant_t & _val );
__declspec(implementation_key(3046)) _variant_t EditBox::GetName ( );
__declspec(implementation_key(3047)) void EditBox::PutName ( const _variant_t & _val );
__declspec(implementation_key(3048)) _variant_t EditBox::GetOnAction ( );
__declspec(implementation_key(3049)) void EditBox::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3050)) _variant_t EditBox::GetParent ( );
__declspec(implementation_key(3051)) void EditBox::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3052)) _variant_t EditBox::GetPasswordEdit ( );
__declspec(implementation_key(3053)) void EditBox::PutPasswordEdit ( const _variant_t & _val );
__declspec(implementation_key(3054)) _variant_t EditBox::GetPlacement ( );
__declspec(implementation_key(3055)) void EditBox::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3056)) _variant_t EditBox::GetPrintObject ( );
__declspec(implementation_key(3057)) void EditBox::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3058)) _variant_t EditBox::GetText ( );
__declspec(implementation_key(3059)) void EditBox::PutText ( const _variant_t & _val );
__declspec(implementation_key(3060)) _variant_t EditBox::GetTop ( );
__declspec(implementation_key(3061)) void EditBox::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3062)) _variant_t EditBox::GetTopLeftCell ( );
__declspec(implementation_key(3063)) void EditBox::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(3064)) _variant_t EditBox::GetVisible ( );
__declspec(implementation_key(3065)) void EditBox::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3066)) _variant_t EditBox::GetWidth ( );
__declspec(implementation_key(3067)) void EditBox::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3068)) _variant_t EditBox::GetZOrder ( );
__declspec(implementation_key(3069)) void EditBox::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3070)) _variant_t EditBoxes::_NewEnum ( );
__declspec(implementation_key(3071)) _variant_t EditBoxes::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(3072)) _variant_t EditBoxes::Application ( );
__declspec(implementation_key(3073)) _variant_t EditBoxes::BringToFront ( );
__declspec(implementation_key(3074)) _variant_t EditBoxes::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3075)) _variant_t EditBoxes::Copy ( );
__declspec(implementation_key(3076)) _variant_t EditBoxes::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3077)) _variant_t EditBoxes::Cut ( );
__declspec(implementation_key(3078)) _variant_t EditBoxes::Delete ( );
__declspec(implementation_key(3079)) _variant_t EditBoxes::Duplicate ( );
__declspec(implementation_key(3080)) _variant_t EditBoxes::Group ( );
__declspec(implementation_key(3081)) _variant_t EditBoxes::Item ( const _variant_t & Index );
__declspec(implementation_key(3082)) _variant_t EditBoxes::Select ( const _variant_t & Replace );
__declspec(implementation_key(3083)) _variant_t EditBoxes::SendToBack ( );
__declspec(implementation_key(3084)) _variant_t EditBoxes::GetCaption ( );
__declspec(implementation_key(3085)) void EditBoxes::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3086)) _variant_t EditBoxes::GetCount ( );
__declspec(implementation_key(3087)) void EditBoxes::PutCount ( const _variant_t & _val );
__declspec(implementation_key(3088)) _variant_t EditBoxes::GetCreator ( );
__declspec(implementation_key(3089)) void EditBoxes::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3090)) _variant_t EditBoxes::GetDisplayVerticalScrollBar ( );
__declspec(implementation_key(3091)) void EditBoxes::PutDisplayVerticalScrollBar ( const _variant_t & _val );
__declspec(implementation_key(3092)) _variant_t EditBoxes::GetEnabled ( );
__declspec(implementation_key(3093)) void EditBoxes::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3094)) _variant_t EditBoxes::GetHeight ( );
__declspec(implementation_key(3095)) void EditBoxes::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3096)) _variant_t EditBoxes::GetInputType ( );
__declspec(implementation_key(3097)) void EditBoxes::PutInputType ( const _variant_t & _val );
__declspec(implementation_key(3098)) _variant_t EditBoxes::GetLeft ( );
__declspec(implementation_key(3099)) void EditBoxes::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3100)) _variant_t EditBoxes::GetLocked ( );
__declspec(implementation_key(3101)) void EditBoxes::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3102)) _variant_t EditBoxes::GetMultiLine ( );
__declspec(implementation_key(3103)) void EditBoxes::PutMultiLine ( const _variant_t & _val );
__declspec(implementation_key(3104)) _variant_t EditBoxes::GetOnAction ( );
__declspec(implementation_key(3105)) void EditBoxes::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3106)) _variant_t EditBoxes::GetParent ( );
__declspec(implementation_key(3107)) void EditBoxes::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3108)) _variant_t EditBoxes::GetPasswordEdit ( );
__declspec(implementation_key(3109)) void EditBoxes::PutPasswordEdit ( const _variant_t & _val );
__declspec(implementation_key(3110)) _variant_t EditBoxes::GetPlacement ( );
__declspec(implementation_key(3111)) void EditBoxes::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3112)) _variant_t EditBoxes::GetPrintObject ( );
__declspec(implementation_key(3113)) void EditBoxes::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3114)) _variant_t EditBoxes::GetText ( );
__declspec(implementation_key(3115)) void EditBoxes::PutText ( const _variant_t & _val );
__declspec(implementation_key(3116)) _variant_t EditBoxes::GetTop ( );
__declspec(implementation_key(3117)) void EditBoxes::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3118)) _variant_t EditBoxes::GetVisible ( );
__declspec(implementation_key(3119)) void EditBoxes::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3120)) _variant_t EditBoxes::GetWidth ( );
__declspec(implementation_key(3121)) void EditBoxes::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3122)) _variant_t EditBoxes::GetZOrder ( );
__declspec(implementation_key(3123)) void EditBoxes::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3124)) _variant_t CheckBox::Application ( );
__declspec(implementation_key(3125)) _variant_t CheckBox::BringToFront ( );
__declspec(implementation_key(3126)) _variant_t CheckBox::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3127)) _variant_t CheckBox::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(3128)) _variant_t CheckBox::Copy ( );
__declspec(implementation_key(3129)) _variant_t CheckBox::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3130)) _variant_t CheckBox::Cut ( );
__declspec(implementation_key(3131)) _variant_t CheckBox::Delete ( );
__declspec(implementation_key(3132)) _variant_t CheckBox::Duplicate ( );
__declspec(implementation_key(3133)) _variant_t CheckBox::Select ( const _variant_t & Replace );
__declspec(implementation_key(3134)) _variant_t CheckBox::SendToBack ( );
__declspec(implementation_key(3135)) _variant_t CheckBox::GetAccelerator ( );
__declspec(implementation_key(3136)) void CheckBox::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3137)) _variant_t CheckBox::GetBorder ( );
__declspec(implementation_key(3138)) void CheckBox::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(3139)) _variant_t CheckBox::GetBottomRightCell ( );
__declspec(implementation_key(3140)) void CheckBox::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(3141)) _variant_t CheckBox::GetCaption ( );
__declspec(implementation_key(3142)) void CheckBox::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3143)) _variant_t CheckBox::GetCreator ( );
__declspec(implementation_key(3144)) void CheckBox::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3145)) _variant_t CheckBox::GetDisplay3DShading ( );
__declspec(implementation_key(3146)) void CheckBox::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3147)) _variant_t CheckBox::GetEnabled ( );
__declspec(implementation_key(3148)) void CheckBox::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3149)) _variant_t CheckBox::GetHeight ( );
__declspec(implementation_key(3150)) void CheckBox::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3151)) _variant_t CheckBox::GetIndex ( );
__declspec(implementation_key(3152)) void CheckBox::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(3153)) _variant_t CheckBox::GetInterior ( );
__declspec(implementation_key(3154)) void CheckBox::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(3155)) _variant_t CheckBox::GetLeft ( );
__declspec(implementation_key(3156)) void CheckBox::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3157)) _variant_t CheckBox::GetLinkedCell ( );
__declspec(implementation_key(3158)) void CheckBox::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3159)) _variant_t CheckBox::GetLocked ( );
__declspec(implementation_key(3160)) void CheckBox::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3161)) _variant_t CheckBox::GetLockedText ( );
__declspec(implementation_key(3162)) void CheckBox::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(3163)) _variant_t CheckBox::GetName ( );
__declspec(implementation_key(3164)) void CheckBox::PutName ( const _variant_t & _val );
__declspec(implementation_key(3165)) _variant_t CheckBox::GetOnAction ( );
__declspec(implementation_key(3166)) void CheckBox::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3167)) _variant_t CheckBox::GetParent ( );
__declspec(implementation_key(3168)) void CheckBox::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3169)) _variant_t CheckBox::GetPhoneticAccelerator ( );
__declspec(implementation_key(3170)) void CheckBox::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3171)) _variant_t CheckBox::GetPlacement ( );
__declspec(implementation_key(3172)) void CheckBox::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3173)) _variant_t CheckBox::GetPrintObject ( );
__declspec(implementation_key(3174)) void CheckBox::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3175)) _variant_t CheckBox::GetText ( );
__declspec(implementation_key(3176)) void CheckBox::PutText ( const _variant_t & _val );
__declspec(implementation_key(3177)) _variant_t CheckBox::GetTop ( );
__declspec(implementation_key(3178)) void CheckBox::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3179)) _variant_t CheckBox::GetTopLeftCell ( );
__declspec(implementation_key(3180)) void CheckBox::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(3181)) _variant_t CheckBox::GetValue ( );
__declspec(implementation_key(3182)) void CheckBox::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3183)) _variant_t CheckBox::GetVisible ( );
__declspec(implementation_key(3184)) void CheckBox::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3185)) _variant_t CheckBox::GetWidth ( );
__declspec(implementation_key(3186)) void CheckBox::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3187)) _variant_t CheckBox::GetZOrder ( );
__declspec(implementation_key(3188)) void CheckBox::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3189)) _variant_t CheckBoxes::_NewEnum ( );
__declspec(implementation_key(3190)) _variant_t CheckBoxes::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(3191)) _variant_t CheckBoxes::Application ( );
__declspec(implementation_key(3192)) _variant_t CheckBoxes::BringToFront ( );
__declspec(implementation_key(3193)) _variant_t CheckBoxes::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3194)) _variant_t CheckBoxes::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(3195)) _variant_t CheckBoxes::Copy ( );
__declspec(implementation_key(3196)) _variant_t CheckBoxes::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3197)) _variant_t CheckBoxes::Cut ( );
__declspec(implementation_key(3198)) _variant_t CheckBoxes::Delete ( );
__declspec(implementation_key(3199)) _variant_t CheckBoxes::Duplicate ( );
__declspec(implementation_key(3200)) _variant_t CheckBoxes::Group ( );
__declspec(implementation_key(3201)) _variant_t CheckBoxes::Item ( const _variant_t & Index );
__declspec(implementation_key(3202)) _variant_t CheckBoxes::Select ( const _variant_t & Replace );
__declspec(implementation_key(3203)) _variant_t CheckBoxes::SendToBack ( );
__declspec(implementation_key(3204)) _variant_t CheckBoxes::GetAccelerator ( );
__declspec(implementation_key(3205)) void CheckBoxes::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3206)) _variant_t CheckBoxes::GetBorder ( );
__declspec(implementation_key(3207)) void CheckBoxes::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(3208)) _variant_t CheckBoxes::GetCaption ( );
__declspec(implementation_key(3209)) void CheckBoxes::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3210)) _variant_t CheckBoxes::GetCount ( );
__declspec(implementation_key(3211)) void CheckBoxes::PutCount ( const _variant_t & _val );
__declspec(implementation_key(3212)) _variant_t CheckBoxes::GetCreator ( );
__declspec(implementation_key(3213)) void CheckBoxes::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3214)) _variant_t CheckBoxes::GetDisplay3DShading ( );
__declspec(implementation_key(3215)) void CheckBoxes::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3216)) _variant_t CheckBoxes::GetEnabled ( );
__declspec(implementation_key(3217)) void CheckBoxes::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3218)) _variant_t CheckBoxes::GetHeight ( );
__declspec(implementation_key(3219)) void CheckBoxes::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3220)) _variant_t CheckBoxes::GetInterior ( );
__declspec(implementation_key(3221)) void CheckBoxes::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(3222)) _variant_t CheckBoxes::GetLeft ( );
__declspec(implementation_key(3223)) void CheckBoxes::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3224)) _variant_t CheckBoxes::GetLinkedCell ( );
__declspec(implementation_key(3225)) void CheckBoxes::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3226)) _variant_t CheckBoxes::GetLocked ( );
__declspec(implementation_key(3227)) void CheckBoxes::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3228)) _variant_t CheckBoxes::GetLockedText ( );
__declspec(implementation_key(3229)) void CheckBoxes::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(3230)) _variant_t CheckBoxes::GetOnAction ( );
__declspec(implementation_key(3231)) void CheckBoxes::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3232)) _variant_t CheckBoxes::GetParent ( );
__declspec(implementation_key(3233)) void CheckBoxes::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3234)) _variant_t CheckBoxes::GetPhoneticAccelerator ( );
__declspec(implementation_key(3235)) void CheckBoxes::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3236)) _variant_t CheckBoxes::GetPlacement ( );
__declspec(implementation_key(3237)) void CheckBoxes::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3238)) _variant_t CheckBoxes::GetPrintObject ( );
__declspec(implementation_key(3239)) void CheckBoxes::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3240)) _variant_t CheckBoxes::GetText ( );
__declspec(implementation_key(3241)) void CheckBoxes::PutText ( const _variant_t & _val );
__declspec(implementation_key(3242)) _variant_t CheckBoxes::GetTop ( );
__declspec(implementation_key(3243)) void CheckBoxes::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3244)) _variant_t CheckBoxes::GetValue ( );
__declspec(implementation_key(3245)) void CheckBoxes::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3246)) _variant_t CheckBoxes::GetVisible ( );
__declspec(implementation_key(3247)) void CheckBoxes::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3248)) _variant_t CheckBoxes::GetWidth ( );
__declspec(implementation_key(3249)) void CheckBoxes::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3250)) _variant_t CheckBoxes::GetZOrder ( );
__declspec(implementation_key(3251)) void CheckBoxes::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3252)) _variant_t OptionButton::Application ( );
__declspec(implementation_key(3253)) _variant_t OptionButton::BringToFront ( );
__declspec(implementation_key(3254)) _variant_t OptionButton::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3255)) _variant_t OptionButton::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(3256)) _variant_t OptionButton::Copy ( );
__declspec(implementation_key(3257)) _variant_t OptionButton::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3258)) _variant_t OptionButton::Cut ( );
__declspec(implementation_key(3259)) _variant_t OptionButton::Delete ( );
__declspec(implementation_key(3260)) _variant_t OptionButton::Duplicate ( );
__declspec(implementation_key(3261)) _variant_t OptionButton::Select ( const _variant_t & Replace );
__declspec(implementation_key(3262)) _variant_t OptionButton::SendToBack ( );
__declspec(implementation_key(3263)) _variant_t OptionButton::GetAccelerator ( );
__declspec(implementation_key(3264)) void OptionButton::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3265)) _variant_t OptionButton::GetBorder ( );
__declspec(implementation_key(3266)) void OptionButton::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(3267)) _variant_t OptionButton::GetBottomRightCell ( );
__declspec(implementation_key(3268)) void OptionButton::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(3269)) _variant_t OptionButton::GetCaption ( );
__declspec(implementation_key(3270)) void OptionButton::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3271)) _variant_t OptionButton::GetCreator ( );
__declspec(implementation_key(3272)) void OptionButton::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3273)) _variant_t OptionButton::GetDisplay3DShading ( );
__declspec(implementation_key(3274)) void OptionButton::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3275)) _variant_t OptionButton::GetEnabled ( );
__declspec(implementation_key(3276)) void OptionButton::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3277)) _variant_t OptionButton::GetHeight ( );
__declspec(implementation_key(3278)) void OptionButton::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3279)) _variant_t OptionButton::GetIndex ( );
__declspec(implementation_key(3280)) void OptionButton::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(3281)) _variant_t OptionButton::GetInterior ( );
__declspec(implementation_key(3282)) void OptionButton::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(3283)) _variant_t OptionButton::GetLeft ( );
__declspec(implementation_key(3284)) void OptionButton::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3285)) _variant_t OptionButton::GetLinkedCell ( );
__declspec(implementation_key(3286)) void OptionButton::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3287)) _variant_t OptionButton::GetLocked ( );
__declspec(implementation_key(3288)) void OptionButton::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3289)) _variant_t OptionButton::GetLockedText ( );
__declspec(implementation_key(3290)) void OptionButton::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(3291)) _variant_t OptionButton::GetName ( );
__declspec(implementation_key(3292)) void OptionButton::PutName ( const _variant_t & _val );
__declspec(implementation_key(3293)) _variant_t OptionButton::GetOnAction ( );
__declspec(implementation_key(3294)) void OptionButton::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3295)) _variant_t OptionButton::GetParent ( );
__declspec(implementation_key(3296)) void OptionButton::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3297)) _variant_t OptionButton::GetPhoneticAccelerator ( );
__declspec(implementation_key(3298)) void OptionButton::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3299)) _variant_t OptionButton::GetPlacement ( );
__declspec(implementation_key(3300)) void OptionButton::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3301)) _variant_t OptionButton::GetPrintObject ( );
__declspec(implementation_key(3302)) void OptionButton::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3303)) _variant_t OptionButton::GetText ( );
__declspec(implementation_key(3304)) void OptionButton::PutText ( const _variant_t & _val );
__declspec(implementation_key(3305)) _variant_t OptionButton::GetTop ( );
__declspec(implementation_key(3306)) void OptionButton::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3307)) _variant_t OptionButton::GetTopLeftCell ( );
__declspec(implementation_key(3308)) void OptionButton::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(3309)) _variant_t OptionButton::GetValue ( );
__declspec(implementation_key(3310)) void OptionButton::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3311)) _variant_t OptionButton::GetVisible ( );
__declspec(implementation_key(3312)) void OptionButton::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3313)) _variant_t OptionButton::GetWidth ( );
__declspec(implementation_key(3314)) void OptionButton::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3315)) _variant_t OptionButton::GetZOrder ( );
__declspec(implementation_key(3316)) void OptionButton::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3317)) _variant_t OptionButtons::_NewEnum ( );
__declspec(implementation_key(3318)) _variant_t OptionButtons::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(3319)) _variant_t OptionButtons::Application ( );
__declspec(implementation_key(3320)) _variant_t OptionButtons::BringToFront ( );
__declspec(implementation_key(3321)) _variant_t OptionButtons::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3322)) _variant_t OptionButtons::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(3323)) _variant_t OptionButtons::Copy ( );
__declspec(implementation_key(3324)) _variant_t OptionButtons::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3325)) _variant_t OptionButtons::Cut ( );
__declspec(implementation_key(3326)) _variant_t OptionButtons::Delete ( );
__declspec(implementation_key(3327)) _variant_t OptionButtons::Duplicate ( );
__declspec(implementation_key(3328)) _variant_t OptionButtons::Group ( );
__declspec(implementation_key(3329)) _variant_t OptionButtons::Item ( const _variant_t & Index );
__declspec(implementation_key(3330)) _variant_t OptionButtons::Select ( const _variant_t & Replace );
__declspec(implementation_key(3331)) _variant_t OptionButtons::SendToBack ( );
__declspec(implementation_key(3332)) _variant_t OptionButtons::GetAccelerator ( );
__declspec(implementation_key(3333)) void OptionButtons::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3334)) _variant_t OptionButtons::GetBorder ( );
__declspec(implementation_key(3335)) void OptionButtons::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(3336)) _variant_t OptionButtons::GetCaption ( );
__declspec(implementation_key(3337)) void OptionButtons::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3338)) _variant_t OptionButtons::GetCount ( );
__declspec(implementation_key(3339)) void OptionButtons::PutCount ( const _variant_t & _val );
__declspec(implementation_key(3340)) _variant_t OptionButtons::GetCreator ( );
__declspec(implementation_key(3341)) void OptionButtons::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3342)) _variant_t OptionButtons::GetDisplay3DShading ( );
__declspec(implementation_key(3343)) void OptionButtons::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3344)) _variant_t OptionButtons::GetEnabled ( );
__declspec(implementation_key(3345)) void OptionButtons::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3346)) _variant_t OptionButtons::GetHeight ( );
__declspec(implementation_key(3347)) void OptionButtons::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3348)) _variant_t OptionButtons::GetInterior ( );
__declspec(implementation_key(3349)) void OptionButtons::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(3350)) _variant_t OptionButtons::GetLeft ( );
__declspec(implementation_key(3351)) void OptionButtons::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3352)) _variant_t OptionButtons::GetLinkedCell ( );
__declspec(implementation_key(3353)) void OptionButtons::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3354)) _variant_t OptionButtons::GetLocked ( );
__declspec(implementation_key(3355)) void OptionButtons::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3356)) _variant_t OptionButtons::GetLockedText ( );
__declspec(implementation_key(3357)) void OptionButtons::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(3358)) _variant_t OptionButtons::GetOnAction ( );
__declspec(implementation_key(3359)) void OptionButtons::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3360)) _variant_t OptionButtons::GetParent ( );
__declspec(implementation_key(3361)) void OptionButtons::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3362)) _variant_t OptionButtons::GetPhoneticAccelerator ( );
__declspec(implementation_key(3363)) void OptionButtons::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3364)) _variant_t OptionButtons::GetPlacement ( );
__declspec(implementation_key(3365)) void OptionButtons::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3366)) _variant_t OptionButtons::GetPrintObject ( );
__declspec(implementation_key(3367)) void OptionButtons::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3368)) _variant_t OptionButtons::GetText ( );
__declspec(implementation_key(3369)) void OptionButtons::PutText ( const _variant_t & _val );
__declspec(implementation_key(3370)) _variant_t OptionButtons::GetTop ( );
__declspec(implementation_key(3371)) void OptionButtons::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3372)) _variant_t OptionButtons::GetValue ( );
__declspec(implementation_key(3373)) void OptionButtons::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3374)) _variant_t OptionButtons::GetVisible ( );
__declspec(implementation_key(3375)) void OptionButtons::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3376)) _variant_t OptionButtons::GetWidth ( );
__declspec(implementation_key(3377)) void OptionButtons::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3378)) _variant_t OptionButtons::GetZOrder ( );
__declspec(implementation_key(3379)) void OptionButtons::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3380)) _variant_t Spinner::Application ( );
__declspec(implementation_key(3381)) _variant_t Spinner::BringToFront ( );
__declspec(implementation_key(3382)) _variant_t Spinner::Copy ( );
__declspec(implementation_key(3383)) _variant_t Spinner::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3384)) _variant_t Spinner::Cut ( );
__declspec(implementation_key(3385)) _variant_t Spinner::Delete ( );
__declspec(implementation_key(3386)) _variant_t Spinner::Duplicate ( );
__declspec(implementation_key(3387)) _variant_t Spinner::Select ( const _variant_t & Replace );
__declspec(implementation_key(3388)) _variant_t Spinner::SendToBack ( );
__declspec(implementation_key(3389)) _variant_t Spinner::GetBottomRightCell ( );
__declspec(implementation_key(3390)) void Spinner::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(3391)) _variant_t Spinner::GetCreator ( );
__declspec(implementation_key(3392)) void Spinner::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3393)) _variant_t Spinner::GetDisplay3DShading ( );
__declspec(implementation_key(3394)) void Spinner::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3395)) _variant_t Spinner::GetEnabled ( );
__declspec(implementation_key(3396)) void Spinner::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3397)) _variant_t Spinner::GetHeight ( );
__declspec(implementation_key(3398)) void Spinner::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3399)) _variant_t Spinner::GetIndex ( );
__declspec(implementation_key(3400)) void Spinner::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(3401)) _variant_t Spinner::GetLeft ( );
__declspec(implementation_key(3402)) void Spinner::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3403)) _variant_t Spinner::GetLinkedCell ( );
__declspec(implementation_key(3404)) void Spinner::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3405)) _variant_t Spinner::GetLocked ( );
__declspec(implementation_key(3406)) void Spinner::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3407)) _variant_t Spinner::GetMax ( );
__declspec(implementation_key(3408)) void Spinner::PutMax ( const _variant_t & _val );
__declspec(implementation_key(3409)) _variant_t Spinner::GetMin ( );
__declspec(implementation_key(3410)) void Spinner::PutMin ( const _variant_t & _val );
__declspec(implementation_key(3411)) _variant_t Spinner::GetName ( );
__declspec(implementation_key(3412)) void Spinner::PutName ( const _variant_t & _val );
__declspec(implementation_key(3413)) _variant_t Spinner::GetOnAction ( );
__declspec(implementation_key(3414)) void Spinner::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3415)) _variant_t Spinner::GetParent ( );
__declspec(implementation_key(3416)) void Spinner::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3417)) _variant_t Spinner::GetPlacement ( );
__declspec(implementation_key(3418)) void Spinner::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3419)) _variant_t Spinner::GetPrintObject ( );
__declspec(implementation_key(3420)) void Spinner::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3421)) _variant_t Spinner::GetSmallChange ( );
__declspec(implementation_key(3422)) void Spinner::PutSmallChange ( const _variant_t & _val );
__declspec(implementation_key(3423)) _variant_t Spinner::GetTop ( );
__declspec(implementation_key(3424)) void Spinner::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3425)) _variant_t Spinner::GetTopLeftCell ( );
__declspec(implementation_key(3426)) void Spinner::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(3427)) _variant_t Spinner::GetValue ( );
__declspec(implementation_key(3428)) void Spinner::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3429)) _variant_t Spinner::GetVisible ( );
__declspec(implementation_key(3430)) void Spinner::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3431)) _variant_t Spinner::GetWidth ( );
__declspec(implementation_key(3432)) void Spinner::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3433)) _variant_t Spinner::GetZOrder ( );
__declspec(implementation_key(3434)) void Spinner::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3435)) _variant_t Spinners::_NewEnum ( );
__declspec(implementation_key(3436)) _variant_t Spinners::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(3437)) _variant_t Spinners::Application ( );
__declspec(implementation_key(3438)) _variant_t Spinners::BringToFront ( );
__declspec(implementation_key(3439)) _variant_t Spinners::Copy ( );
__declspec(implementation_key(3440)) _variant_t Spinners::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3441)) _variant_t Spinners::Cut ( );
__declspec(implementation_key(3442)) _variant_t Spinners::Delete ( );
__declspec(implementation_key(3443)) _variant_t Spinners::Duplicate ( );
__declspec(implementation_key(3444)) _variant_t Spinners::Group ( );
__declspec(implementation_key(3445)) _variant_t Spinners::Item ( const _variant_t & Index );
__declspec(implementation_key(3446)) _variant_t Spinners::Select ( const _variant_t & Replace );
__declspec(implementation_key(3447)) _variant_t Spinners::SendToBack ( );
__declspec(implementation_key(3448)) _variant_t Spinners::GetCount ( );
__declspec(implementation_key(3449)) void Spinners::PutCount ( const _variant_t & _val );
__declspec(implementation_key(3450)) _variant_t Spinners::GetCreator ( );
__declspec(implementation_key(3451)) void Spinners::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3452)) _variant_t Spinners::GetDisplay3DShading ( );
__declspec(implementation_key(3453)) void Spinners::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3454)) _variant_t Spinners::GetEnabled ( );
__declspec(implementation_key(3455)) void Spinners::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3456)) _variant_t Spinners::GetHeight ( );
__declspec(implementation_key(3457)) void Spinners::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3458)) _variant_t Spinners::GetLeft ( );
__declspec(implementation_key(3459)) void Spinners::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3460)) _variant_t Spinners::GetLinkedCell ( );
__declspec(implementation_key(3461)) void Spinners::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3462)) _variant_t Spinners::GetLocked ( );
__declspec(implementation_key(3463)) void Spinners::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3464)) _variant_t Spinners::GetMax ( );
__declspec(implementation_key(3465)) void Spinners::PutMax ( const _variant_t & _val );
__declspec(implementation_key(3466)) _variant_t Spinners::GetMin ( );
__declspec(implementation_key(3467)) void Spinners::PutMin ( const _variant_t & _val );
__declspec(implementation_key(3468)) _variant_t Spinners::GetOnAction ( );
__declspec(implementation_key(3469)) void Spinners::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3470)) _variant_t Spinners::GetParent ( );
__declspec(implementation_key(3471)) void Spinners::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3472)) _variant_t Spinners::GetPlacement ( );
__declspec(implementation_key(3473)) void Spinners::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3474)) _variant_t Spinners::GetPrintObject ( );
__declspec(implementation_key(3475)) void Spinners::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3476)) _variant_t Spinners::GetSmallChange ( );
__declspec(implementation_key(3477)) void Spinners::PutSmallChange ( const _variant_t & _val );
__declspec(implementation_key(3478)) _variant_t Spinners::GetTop ( );
__declspec(implementation_key(3479)) void Spinners::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3480)) _variant_t Spinners::GetValue ( );
__declspec(implementation_key(3481)) void Spinners::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3482)) _variant_t Spinners::GetVisible ( );
__declspec(implementation_key(3483)) void Spinners::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3484)) _variant_t Spinners::GetWidth ( );
__declspec(implementation_key(3485)) void Spinners::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3486)) _variant_t Spinners::GetZOrder ( );
__declspec(implementation_key(3487)) void Spinners::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3488)) _variant_t ScrollBar::Application ( );
__declspec(implementation_key(3489)) _variant_t ScrollBar::BringToFront ( );
__declspec(implementation_key(3490)) _variant_t ScrollBar::Copy ( );
__declspec(implementation_key(3491)) _variant_t ScrollBar::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3492)) _variant_t ScrollBar::Cut ( );
__declspec(implementation_key(3493)) _variant_t ScrollBar::Delete ( );
__declspec(implementation_key(3494)) _variant_t ScrollBar::Duplicate ( );
__declspec(implementation_key(3495)) _variant_t ScrollBar::Select ( const _variant_t & Replace );
__declspec(implementation_key(3496)) _variant_t ScrollBar::SendToBack ( );
__declspec(implementation_key(3497)) _variant_t ScrollBar::GetBottomRightCell ( );
__declspec(implementation_key(3498)) void ScrollBar::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(3499)) _variant_t ScrollBar::GetCreator ( );
__declspec(implementation_key(3500)) void ScrollBar::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3501)) _variant_t ScrollBar::GetDisplay3DShading ( );
__declspec(implementation_key(3502)) void ScrollBar::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3503)) _variant_t ScrollBar::GetEnabled ( );
__declspec(implementation_key(3504)) void ScrollBar::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3505)) _variant_t ScrollBar::GetHeight ( );
__declspec(implementation_key(3506)) void ScrollBar::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3507)) _variant_t ScrollBar::GetIndex ( );
__declspec(implementation_key(3508)) void ScrollBar::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(3509)) _variant_t ScrollBar::GetLargeChange ( );
__declspec(implementation_key(3510)) void ScrollBar::PutLargeChange ( const _variant_t & _val );
__declspec(implementation_key(3511)) _variant_t ScrollBar::GetLeft ( );
__declspec(implementation_key(3512)) void ScrollBar::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3513)) _variant_t ScrollBar::GetLinkedCell ( );
__declspec(implementation_key(3514)) void ScrollBar::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3515)) _variant_t ScrollBar::GetLocked ( );
__declspec(implementation_key(3516)) void ScrollBar::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3517)) _variant_t ScrollBar::GetMax ( );
__declspec(implementation_key(3518)) void ScrollBar::PutMax ( const _variant_t & _val );
__declspec(implementation_key(3519)) _variant_t ScrollBar::GetMin ( );
__declspec(implementation_key(3520)) void ScrollBar::PutMin ( const _variant_t & _val );
__declspec(implementation_key(3521)) _variant_t ScrollBar::GetName ( );
__declspec(implementation_key(3522)) void ScrollBar::PutName ( const _variant_t & _val );
__declspec(implementation_key(3523)) _variant_t ScrollBar::GetOnAction ( );
__declspec(implementation_key(3524)) void ScrollBar::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3525)) _variant_t ScrollBar::GetParent ( );
__declspec(implementation_key(3526)) void ScrollBar::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3527)) _variant_t ScrollBar::GetPlacement ( );
__declspec(implementation_key(3528)) void ScrollBar::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3529)) _variant_t ScrollBar::GetPrintObject ( );
__declspec(implementation_key(3530)) void ScrollBar::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3531)) _variant_t ScrollBar::GetSmallChange ( );
__declspec(implementation_key(3532)) void ScrollBar::PutSmallChange ( const _variant_t & _val );
__declspec(implementation_key(3533)) _variant_t ScrollBar::GetTop ( );
__declspec(implementation_key(3534)) void ScrollBar::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3535)) _variant_t ScrollBar::GetTopLeftCell ( );
__declspec(implementation_key(3536)) void ScrollBar::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(3537)) _variant_t ScrollBar::GetValue ( );
__declspec(implementation_key(3538)) void ScrollBar::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3539)) _variant_t ScrollBar::GetVisible ( );
__declspec(implementation_key(3540)) void ScrollBar::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3541)) _variant_t ScrollBar::GetWidth ( );
__declspec(implementation_key(3542)) void ScrollBar::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3543)) _variant_t ScrollBar::GetZOrder ( );
__declspec(implementation_key(3544)) void ScrollBar::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3545)) _variant_t ScrollBars::_NewEnum ( );
__declspec(implementation_key(3546)) _variant_t ScrollBars::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(3547)) _variant_t ScrollBars::Application ( );
__declspec(implementation_key(3548)) _variant_t ScrollBars::BringToFront ( );
__declspec(implementation_key(3549)) _variant_t ScrollBars::Copy ( );
__declspec(implementation_key(3550)) _variant_t ScrollBars::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3551)) _variant_t ScrollBars::Cut ( );
__declspec(implementation_key(3552)) _variant_t ScrollBars::Delete ( );
__declspec(implementation_key(3553)) _variant_t ScrollBars::Duplicate ( );
__declspec(implementation_key(3554)) _variant_t ScrollBars::Group ( );
__declspec(implementation_key(3555)) _variant_t ScrollBars::Item ( const _variant_t & Index );
__declspec(implementation_key(3556)) _variant_t ScrollBars::Select ( const _variant_t & Replace );
__declspec(implementation_key(3557)) _variant_t ScrollBars::SendToBack ( );
__declspec(implementation_key(3558)) _variant_t ScrollBars::GetCount ( );
__declspec(implementation_key(3559)) void ScrollBars::PutCount ( const _variant_t & _val );
__declspec(implementation_key(3560)) _variant_t ScrollBars::GetCreator ( );
__declspec(implementation_key(3561)) void ScrollBars::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3562)) _variant_t ScrollBars::GetDisplay3DShading ( );
__declspec(implementation_key(3563)) void ScrollBars::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3564)) _variant_t ScrollBars::GetEnabled ( );
__declspec(implementation_key(3565)) void ScrollBars::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3566)) _variant_t ScrollBars::GetHeight ( );
__declspec(implementation_key(3567)) void ScrollBars::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3568)) _variant_t ScrollBars::GetLargeChange ( );
__declspec(implementation_key(3569)) void ScrollBars::PutLargeChange ( const _variant_t & _val );
__declspec(implementation_key(3570)) _variant_t ScrollBars::GetLeft ( );
__declspec(implementation_key(3571)) void ScrollBars::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3572)) _variant_t ScrollBars::GetLinkedCell ( );
__declspec(implementation_key(3573)) void ScrollBars::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3574)) _variant_t ScrollBars::GetLocked ( );
__declspec(implementation_key(3575)) void ScrollBars::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3576)) _variant_t ScrollBars::GetMax ( );
__declspec(implementation_key(3577)) void ScrollBars::PutMax ( const _variant_t & _val );
__declspec(implementation_key(3578)) _variant_t ScrollBars::GetMin ( );
__declspec(implementation_key(3579)) void ScrollBars::PutMin ( const _variant_t & _val );
__declspec(implementation_key(3580)) _variant_t ScrollBars::GetOnAction ( );
__declspec(implementation_key(3581)) void ScrollBars::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3582)) _variant_t ScrollBars::GetParent ( );
__declspec(implementation_key(3583)) void ScrollBars::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3584)) _variant_t ScrollBars::GetPlacement ( );
__declspec(implementation_key(3585)) void ScrollBars::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3586)) _variant_t ScrollBars::GetPrintObject ( );
__declspec(implementation_key(3587)) void ScrollBars::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3588)) _variant_t ScrollBars::GetSmallChange ( );
__declspec(implementation_key(3589)) void ScrollBars::PutSmallChange ( const _variant_t & _val );
__declspec(implementation_key(3590)) _variant_t ScrollBars::GetTop ( );
__declspec(implementation_key(3591)) void ScrollBars::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3592)) _variant_t ScrollBars::GetValue ( );
__declspec(implementation_key(3593)) void ScrollBars::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3594)) _variant_t ScrollBars::GetVisible ( );
__declspec(implementation_key(3595)) void ScrollBars::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3596)) _variant_t ScrollBars::GetWidth ( );
__declspec(implementation_key(3597)) void ScrollBars::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3598)) _variant_t ScrollBars::GetZOrder ( );
__declspec(implementation_key(3599)) void ScrollBars::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3600)) _variant_t ListBox::AddItem ( const _variant_t & Text, const _variant_t & Index );
__declspec(implementation_key(3601)) _variant_t ListBox::Application ( );
__declspec(implementation_key(3602)) _variant_t ListBox::BringToFront ( );
__declspec(implementation_key(3603)) _variant_t ListBox::Copy ( );
__declspec(implementation_key(3604)) _variant_t ListBox::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3605)) _variant_t ListBox::Cut ( );
__declspec(implementation_key(3606)) _variant_t ListBox::Delete ( );
__declspec(implementation_key(3607)) _variant_t ListBox::Duplicate ( );
__declspec(implementation_key(3608)) _variant_t ListBox::RemoveAllItems ( );
__declspec(implementation_key(3609)) _variant_t ListBox::RemoveItem ( const _variant_t & Index, const _variant_t & Count );
__declspec(implementation_key(3610)) _variant_t ListBox::Select ( const _variant_t & Replace );
__declspec(implementation_key(3611)) _variant_t ListBox::SendToBack ( );
__declspec(implementation_key(3612)) _variant_t ListBox::GetBottomRightCell ( );
__declspec(implementation_key(3613)) void ListBox::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(3614)) _variant_t ListBox::GetCreator ( );
__declspec(implementation_key(3615)) void ListBox::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3616)) _variant_t ListBox::GetDisplay3DShading ( );
__declspec(implementation_key(3617)) void ListBox::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3618)) _variant_t ListBox::GetEnabled ( );
__declspec(implementation_key(3619)) void ListBox::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3620)) _variant_t ListBox::GetHeight ( );
__declspec(implementation_key(3621)) void ListBox::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3622)) _variant_t ListBox::GetIndex ( );
__declspec(implementation_key(3623)) void ListBox::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(3624)) _variant_t ListBox::GetLeft ( );
__declspec(implementation_key(3625)) void ListBox::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3626)) _variant_t ListBox::GetLinkedCell ( );
__declspec(implementation_key(3627)) void ListBox::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3628)) _variant_t ListBox::GetLinkedObject ( );
__declspec(implementation_key(3629)) void ListBox::PutLinkedObject ( const _variant_t & _val );
__declspec(implementation_key(3630)) _variant_t ListBox::GetList ( );
__declspec(implementation_key(3631)) void ListBox::PutList ( const _variant_t & _val );
__declspec(implementation_key(3632)) _variant_t ListBox::GetListCount ( );
__declspec(implementation_key(3633)) void ListBox::PutListCount ( const _variant_t & _val );
__declspec(implementation_key(3634)) _variant_t ListBox::GetListFillRange ( );
__declspec(implementation_key(3635)) void ListBox::PutListFillRange ( const _variant_t & _val );
__declspec(implementation_key(3636)) _variant_t ListBox::GetListIndex ( );
__declspec(implementation_key(3637)) void ListBox::PutListIndex ( const _variant_t & _val );
__declspec(implementation_key(3638)) _variant_t ListBox::GetLocked ( );
__declspec(implementation_key(3639)) void ListBox::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3640)) _variant_t ListBox::GetMultiSelect ( );
__declspec(implementation_key(3641)) void ListBox::PutMultiSelect ( const _variant_t & _val );
__declspec(implementation_key(3642)) _variant_t ListBox::GetName ( );
__declspec(implementation_key(3643)) void ListBox::PutName ( const _variant_t & _val );
__declspec(implementation_key(3644)) _variant_t ListBox::GetOnAction ( );
__declspec(implementation_key(3645)) void ListBox::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3646)) _variant_t ListBox::GetParent ( );
__declspec(implementation_key(3647)) void ListBox::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3648)) _variant_t ListBox::GetPlacement ( );
__declspec(implementation_key(3649)) void ListBox::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3650)) _variant_t ListBox::GetPrintObject ( );
__declspec(implementation_key(3651)) void ListBox::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3652)) _variant_t ListBox::GetSelected ( );
__declspec(implementation_key(3653)) void ListBox::PutSelected ( const _variant_t & _val );
__declspec(implementation_key(3654)) _variant_t ListBox::GetTop ( );
__declspec(implementation_key(3655)) void ListBox::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3656)) _variant_t ListBox::GetTopLeftCell ( );
__declspec(implementation_key(3657)) void ListBox::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(3658)) _variant_t ListBox::GetValue ( );
__declspec(implementation_key(3659)) void ListBox::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3660)) _variant_t ListBox::GetVisible ( );
__declspec(implementation_key(3661)) void ListBox::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3662)) _variant_t ListBox::GetWidth ( );
__declspec(implementation_key(3663)) void ListBox::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3664)) _variant_t ListBox::GetZOrder ( );
__declspec(implementation_key(3665)) void ListBox::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3666)) _variant_t ListBoxes::_NewEnum ( );
__declspec(implementation_key(3667)) _variant_t ListBoxes::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(3668)) _variant_t ListBoxes::AddItem ( const _variant_t & Text, const _variant_t & Index );
__declspec(implementation_key(3669)) _variant_t ListBoxes::Application ( );
__declspec(implementation_key(3670)) _variant_t ListBoxes::BringToFront ( );
__declspec(implementation_key(3671)) _variant_t ListBoxes::Copy ( );
__declspec(implementation_key(3672)) _variant_t ListBoxes::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3673)) _variant_t ListBoxes::Cut ( );
__declspec(implementation_key(3674)) _variant_t ListBoxes::Delete ( );
__declspec(implementation_key(3675)) _variant_t ListBoxes::Duplicate ( );
__declspec(implementation_key(3676)) _variant_t ListBoxes::Group ( );
__declspec(implementation_key(3677)) _variant_t ListBoxes::Item ( const _variant_t & Index );
__declspec(implementation_key(3678)) _variant_t ListBoxes::RemoveAllItems ( );
__declspec(implementation_key(3679)) _variant_t ListBoxes::RemoveItem ( const _variant_t & Index, const _variant_t & Count );
__declspec(implementation_key(3680)) _variant_t ListBoxes::Select ( const _variant_t & Replace );
__declspec(implementation_key(3681)) _variant_t ListBoxes::SendToBack ( );
__declspec(implementation_key(3682)) _variant_t ListBoxes::GetCount ( );
__declspec(implementation_key(3683)) void ListBoxes::PutCount ( const _variant_t & _val );
__declspec(implementation_key(3684)) _variant_t ListBoxes::GetCreator ( );
__declspec(implementation_key(3685)) void ListBoxes::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3686)) _variant_t ListBoxes::GetDisplay3DShading ( );
__declspec(implementation_key(3687)) void ListBoxes::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3688)) _variant_t ListBoxes::GetEnabled ( );
__declspec(implementation_key(3689)) void ListBoxes::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3690)) _variant_t ListBoxes::GetHeight ( );
__declspec(implementation_key(3691)) void ListBoxes::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3692)) _variant_t ListBoxes::GetLeft ( );
__declspec(implementation_key(3693)) void ListBoxes::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3694)) _variant_t ListBoxes::GetLinkedCell ( );
__declspec(implementation_key(3695)) void ListBoxes::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3696)) _variant_t ListBoxes::GetList ( );
__declspec(implementation_key(3697)) void ListBoxes::PutList ( const _variant_t & _val );
__declspec(implementation_key(3698)) _variant_t ListBoxes::GetListFillRange ( );
__declspec(implementation_key(3699)) void ListBoxes::PutListFillRange ( const _variant_t & _val );
__declspec(implementation_key(3700)) _variant_t ListBoxes::GetListIndex ( );
__declspec(implementation_key(3701)) void ListBoxes::PutListIndex ( const _variant_t & _val );
__declspec(implementation_key(3702)) _variant_t ListBoxes::GetLocked ( );
__declspec(implementation_key(3703)) void ListBoxes::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3704)) _variant_t ListBoxes::GetMultiSelect ( );
__declspec(implementation_key(3705)) void ListBoxes::PutMultiSelect ( const _variant_t & _val );
__declspec(implementation_key(3706)) _variant_t ListBoxes::GetOnAction ( );
__declspec(implementation_key(3707)) void ListBoxes::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3708)) _variant_t ListBoxes::GetParent ( );
__declspec(implementation_key(3709)) void ListBoxes::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3710)) _variant_t ListBoxes::GetPlacement ( );
__declspec(implementation_key(3711)) void ListBoxes::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3712)) _variant_t ListBoxes::GetPrintObject ( );
__declspec(implementation_key(3713)) void ListBoxes::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3714)) _variant_t ListBoxes::GetSelected ( );
__declspec(implementation_key(3715)) void ListBoxes::PutSelected ( const _variant_t & _val );
__declspec(implementation_key(3716)) _variant_t ListBoxes::GetTop ( );
__declspec(implementation_key(3717)) void ListBoxes::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3718)) _variant_t ListBoxes::GetValue ( );
__declspec(implementation_key(3719)) void ListBoxes::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3720)) _variant_t ListBoxes::GetVisible ( );
__declspec(implementation_key(3721)) void ListBoxes::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3722)) _variant_t ListBoxes::GetWidth ( );
__declspec(implementation_key(3723)) void ListBoxes::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3724)) _variant_t ListBoxes::GetZOrder ( );
__declspec(implementation_key(3725)) void ListBoxes::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3726)) _variant_t GroupBox::Application ( );
__declspec(implementation_key(3727)) _variant_t GroupBox::BringToFront ( );
__declspec(implementation_key(3728)) _variant_t GroupBox::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3729)) _variant_t GroupBox::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(3730)) _variant_t GroupBox::Copy ( );
__declspec(implementation_key(3731)) _variant_t GroupBox::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3732)) _variant_t GroupBox::Cut ( );
__declspec(implementation_key(3733)) _variant_t GroupBox::Delete ( );
__declspec(implementation_key(3734)) _variant_t GroupBox::Duplicate ( );
__declspec(implementation_key(3735)) _variant_t GroupBox::Select ( const _variant_t & Replace );
__declspec(implementation_key(3736)) _variant_t GroupBox::SendToBack ( );
__declspec(implementation_key(3737)) _variant_t GroupBox::GetAccelerator ( );
__declspec(implementation_key(3738)) void GroupBox::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3739)) _variant_t GroupBox::GetBottomRightCell ( );
__declspec(implementation_key(3740)) void GroupBox::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(3741)) _variant_t GroupBox::GetCaption ( );
__declspec(implementation_key(3742)) void GroupBox::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3743)) _variant_t GroupBox::GetCreator ( );
__declspec(implementation_key(3744)) void GroupBox::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3745)) _variant_t GroupBox::GetDisplay3DShading ( );
__declspec(implementation_key(3746)) void GroupBox::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3747)) _variant_t GroupBox::GetEnabled ( );
__declspec(implementation_key(3748)) void GroupBox::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3749)) _variant_t GroupBox::GetHeight ( );
__declspec(implementation_key(3750)) void GroupBox::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3751)) _variant_t GroupBox::GetIndex ( );
__declspec(implementation_key(3752)) void GroupBox::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(3753)) _variant_t GroupBox::GetLeft ( );
__declspec(implementation_key(3754)) void GroupBox::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3755)) _variant_t GroupBox::GetLocked ( );
__declspec(implementation_key(3756)) void GroupBox::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3757)) _variant_t GroupBox::GetLockedText ( );
__declspec(implementation_key(3758)) void GroupBox::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(3759)) _variant_t GroupBox::GetName ( );
__declspec(implementation_key(3760)) void GroupBox::PutName ( const _variant_t & _val );
__declspec(implementation_key(3761)) _variant_t GroupBox::GetOnAction ( );
__declspec(implementation_key(3762)) void GroupBox::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3763)) _variant_t GroupBox::GetParent ( );
__declspec(implementation_key(3764)) void GroupBox::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3765)) _variant_t GroupBox::GetPhoneticAccelerator ( );
__declspec(implementation_key(3766)) void GroupBox::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3767)) _variant_t GroupBox::GetPlacement ( );
__declspec(implementation_key(3768)) void GroupBox::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3769)) _variant_t GroupBox::GetPrintObject ( );
__declspec(implementation_key(3770)) void GroupBox::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3771)) _variant_t GroupBox::GetText ( );
__declspec(implementation_key(3772)) void GroupBox::PutText ( const _variant_t & _val );
__declspec(implementation_key(3773)) _variant_t GroupBox::GetTop ( );
__declspec(implementation_key(3774)) void GroupBox::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3775)) _variant_t GroupBox::GetTopLeftCell ( );
__declspec(implementation_key(3776)) void GroupBox::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(3777)) _variant_t GroupBox::GetVisible ( );
__declspec(implementation_key(3778)) void GroupBox::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3779)) _variant_t GroupBox::GetWidth ( );
__declspec(implementation_key(3780)) void GroupBox::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3781)) _variant_t GroupBox::GetZOrder ( );
__declspec(implementation_key(3782)) void GroupBox::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3783)) _variant_t GroupBoxes::_NewEnum ( );
__declspec(implementation_key(3784)) _variant_t GroupBoxes::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(3785)) _variant_t GroupBoxes::Application ( );
__declspec(implementation_key(3786)) _variant_t GroupBoxes::BringToFront ( );
__declspec(implementation_key(3787)) _variant_t GroupBoxes::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3788)) _variant_t GroupBoxes::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(3789)) _variant_t GroupBoxes::Copy ( );
__declspec(implementation_key(3790)) _variant_t GroupBoxes::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3791)) _variant_t GroupBoxes::Cut ( );
__declspec(implementation_key(3792)) _variant_t GroupBoxes::Delete ( );
__declspec(implementation_key(3793)) _variant_t GroupBoxes::Duplicate ( );
__declspec(implementation_key(3794)) _variant_t GroupBoxes::Group ( );
__declspec(implementation_key(3795)) _variant_t GroupBoxes::Item ( const _variant_t & Index );
__declspec(implementation_key(3796)) _variant_t GroupBoxes::Select ( const _variant_t & Replace );
__declspec(implementation_key(3797)) _variant_t GroupBoxes::SendToBack ( );
__declspec(implementation_key(3798)) _variant_t GroupBoxes::GetAccelerator ( );
__declspec(implementation_key(3799)) void GroupBoxes::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3800)) _variant_t GroupBoxes::GetCaption ( );
__declspec(implementation_key(3801)) void GroupBoxes::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3802)) _variant_t GroupBoxes::GetCount ( );
__declspec(implementation_key(3803)) void GroupBoxes::PutCount ( const _variant_t & _val );
__declspec(implementation_key(3804)) _variant_t GroupBoxes::GetCreator ( );
__declspec(implementation_key(3805)) void GroupBoxes::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3806)) _variant_t GroupBoxes::GetDisplay3DShading ( );
__declspec(implementation_key(3807)) void GroupBoxes::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3808)) _variant_t GroupBoxes::GetEnabled ( );
__declspec(implementation_key(3809)) void GroupBoxes::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3810)) _variant_t GroupBoxes::GetHeight ( );
__declspec(implementation_key(3811)) void GroupBoxes::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3812)) _variant_t GroupBoxes::GetLeft ( );
__declspec(implementation_key(3813)) void GroupBoxes::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3814)) _variant_t GroupBoxes::GetLocked ( );
__declspec(implementation_key(3815)) void GroupBoxes::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3816)) _variant_t GroupBoxes::GetLockedText ( );
__declspec(implementation_key(3817)) void GroupBoxes::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(3818)) _variant_t GroupBoxes::GetOnAction ( );
__declspec(implementation_key(3819)) void GroupBoxes::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3820)) _variant_t GroupBoxes::GetParent ( );
__declspec(implementation_key(3821)) void GroupBoxes::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3822)) _variant_t GroupBoxes::GetPhoneticAccelerator ( );
__declspec(implementation_key(3823)) void GroupBoxes::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(3824)) _variant_t GroupBoxes::GetPlacement ( );
__declspec(implementation_key(3825)) void GroupBoxes::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3826)) _variant_t GroupBoxes::GetPrintObject ( );
__declspec(implementation_key(3827)) void GroupBoxes::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3828)) _variant_t GroupBoxes::GetText ( );
__declspec(implementation_key(3829)) void GroupBoxes::PutText ( const _variant_t & _val );
__declspec(implementation_key(3830)) _variant_t GroupBoxes::GetTop ( );
__declspec(implementation_key(3831)) void GroupBoxes::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3832)) _variant_t GroupBoxes::GetVisible ( );
__declspec(implementation_key(3833)) void GroupBoxes::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3834)) _variant_t GroupBoxes::GetWidth ( );
__declspec(implementation_key(3835)) void GroupBoxes::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3836)) _variant_t GroupBoxes::GetZOrder ( );
__declspec(implementation_key(3837)) void GroupBoxes::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3838)) _variant_t DropDown::AddItem ( const _variant_t & Text, const _variant_t & Index );
__declspec(implementation_key(3839)) _variant_t DropDown::Application ( );
__declspec(implementation_key(3840)) _variant_t DropDown::BringToFront ( );
__declspec(implementation_key(3841)) _variant_t DropDown::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3842)) _variant_t DropDown::Copy ( );
__declspec(implementation_key(3843)) _variant_t DropDown::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3844)) _variant_t DropDown::Cut ( );
__declspec(implementation_key(3845)) _variant_t DropDown::Delete ( );
__declspec(implementation_key(3846)) _variant_t DropDown::Duplicate ( );
__declspec(implementation_key(3847)) _variant_t DropDown::RemoveAllItems ( );
__declspec(implementation_key(3848)) _variant_t DropDown::RemoveItem ( const _variant_t & Index, const _variant_t & Count );
__declspec(implementation_key(3849)) _variant_t DropDown::Select ( const _variant_t & Replace );
__declspec(implementation_key(3850)) _variant_t DropDown::SendToBack ( );
__declspec(implementation_key(3851)) _variant_t DropDown::GetBottomRightCell ( );
__declspec(implementation_key(3852)) void DropDown::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(3853)) _variant_t DropDown::GetCaption ( );
__declspec(implementation_key(3854)) void DropDown::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3855)) _variant_t DropDown::GetCreator ( );
__declspec(implementation_key(3856)) void DropDown::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3857)) _variant_t DropDown::GetDisplay3DShading ( );
__declspec(implementation_key(3858)) void DropDown::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3859)) _variant_t DropDown::GetDropDownLines ( );
__declspec(implementation_key(3860)) void DropDown::PutDropDownLines ( const _variant_t & _val );
__declspec(implementation_key(3861)) _variant_t DropDown::GetEnabled ( );
__declspec(implementation_key(3862)) void DropDown::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3863)) _variant_t DropDown::GetHeight ( );
__declspec(implementation_key(3864)) void DropDown::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3865)) _variant_t DropDown::GetIndex ( );
__declspec(implementation_key(3866)) void DropDown::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(3867)) _variant_t DropDown::GetLeft ( );
__declspec(implementation_key(3868)) void DropDown::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3869)) _variant_t DropDown::GetLinkedCell ( );
__declspec(implementation_key(3870)) void DropDown::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3871)) _variant_t DropDown::GetLinkedObject ( );
__declspec(implementation_key(3872)) void DropDown::PutLinkedObject ( const _variant_t & _val );
__declspec(implementation_key(3873)) _variant_t DropDown::GetList ( );
__declspec(implementation_key(3874)) void DropDown::PutList ( const _variant_t & _val );
__declspec(implementation_key(3875)) _variant_t DropDown::GetListCount ( );
__declspec(implementation_key(3876)) void DropDown::PutListCount ( const _variant_t & _val );
__declspec(implementation_key(3877)) _variant_t DropDown::GetListFillRange ( );
__declspec(implementation_key(3878)) void DropDown::PutListFillRange ( const _variant_t & _val );
__declspec(implementation_key(3879)) _variant_t DropDown::GetListIndex ( );
__declspec(implementation_key(3880)) void DropDown::PutListIndex ( const _variant_t & _val );
__declspec(implementation_key(3881)) _variant_t DropDown::GetLocked ( );
__declspec(implementation_key(3882)) void DropDown::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3883)) _variant_t DropDown::GetName ( );
__declspec(implementation_key(3884)) void DropDown::PutName ( const _variant_t & _val );
__declspec(implementation_key(3885)) _variant_t DropDown::GetOnAction ( );
__declspec(implementation_key(3886)) void DropDown::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3887)) _variant_t DropDown::GetParent ( );
__declspec(implementation_key(3888)) void DropDown::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3889)) _variant_t DropDown::GetPlacement ( );
__declspec(implementation_key(3890)) void DropDown::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3891)) _variant_t DropDown::GetPrintObject ( );
__declspec(implementation_key(3892)) void DropDown::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3893)) _variant_t DropDown::GetSelected ( );
__declspec(implementation_key(3894)) void DropDown::PutSelected ( const _variant_t & _val );
__declspec(implementation_key(3895)) _variant_t DropDown::GetText ( );
__declspec(implementation_key(3896)) void DropDown::PutText ( const _variant_t & _val );
__declspec(implementation_key(3897)) _variant_t DropDown::GetTop ( );
__declspec(implementation_key(3898)) void DropDown::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3899)) _variant_t DropDown::GetTopLeftCell ( );
__declspec(implementation_key(3900)) void DropDown::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(3901)) _variant_t DropDown::GetValue ( );
__declspec(implementation_key(3902)) void DropDown::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3903)) _variant_t DropDown::GetVisible ( );
__declspec(implementation_key(3904)) void DropDown::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3905)) _variant_t DropDown::GetWidth ( );
__declspec(implementation_key(3906)) void DropDown::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3907)) _variant_t DropDown::GetZOrder ( );
__declspec(implementation_key(3908)) void DropDown::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3909)) _variant_t DropDowns::_NewEnum ( );
__declspec(implementation_key(3910)) _variant_t DropDowns::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height, const _variant_t & Editable );
__declspec(implementation_key(3911)) _variant_t DropDowns::AddItem ( const _variant_t & Text, const _variant_t & Index );
__declspec(implementation_key(3912)) _variant_t DropDowns::Application ( );
__declspec(implementation_key(3913)) _variant_t DropDowns::BringToFront ( );
__declspec(implementation_key(3914)) _variant_t DropDowns::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3915)) _variant_t DropDowns::Copy ( );
__declspec(implementation_key(3916)) _variant_t DropDowns::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3917)) _variant_t DropDowns::Cut ( );
__declspec(implementation_key(3918)) _variant_t DropDowns::Delete ( );
__declspec(implementation_key(3919)) _variant_t DropDowns::Duplicate ( );
__declspec(implementation_key(3920)) _variant_t DropDowns::Group ( );
__declspec(implementation_key(3921)) _variant_t DropDowns::Item ( const _variant_t & Index );
__declspec(implementation_key(3922)) _variant_t DropDowns::RemoveAllItems ( );
__declspec(implementation_key(3923)) _variant_t DropDowns::RemoveItem ( const _variant_t & Index, const _variant_t & Count );
__declspec(implementation_key(3924)) _variant_t DropDowns::Select ( const _variant_t & Replace );
__declspec(implementation_key(3925)) _variant_t DropDowns::SendToBack ( );
__declspec(implementation_key(3926)) _variant_t DropDowns::GetCaption ( );
__declspec(implementation_key(3927)) void DropDowns::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3928)) _variant_t DropDowns::GetCount ( );
__declspec(implementation_key(3929)) void DropDowns::PutCount ( const _variant_t & _val );
__declspec(implementation_key(3930)) _variant_t DropDowns::GetCreator ( );
__declspec(implementation_key(3931)) void DropDowns::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3932)) _variant_t DropDowns::GetDisplay3DShading ( );
__declspec(implementation_key(3933)) void DropDowns::PutDisplay3DShading ( const _variant_t & _val );
__declspec(implementation_key(3934)) _variant_t DropDowns::GetDropDownLines ( );
__declspec(implementation_key(3935)) void DropDowns::PutDropDownLines ( const _variant_t & _val );
__declspec(implementation_key(3936)) _variant_t DropDowns::GetEnabled ( );
__declspec(implementation_key(3937)) void DropDowns::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(3938)) _variant_t DropDowns::GetHeight ( );
__declspec(implementation_key(3939)) void DropDowns::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3940)) _variant_t DropDowns::GetLeft ( );
__declspec(implementation_key(3941)) void DropDowns::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3942)) _variant_t DropDowns::GetLinkedCell ( );
__declspec(implementation_key(3943)) void DropDowns::PutLinkedCell ( const _variant_t & _val );
__declspec(implementation_key(3944)) _variant_t DropDowns::GetList ( );
__declspec(implementation_key(3945)) void DropDowns::PutList ( const _variant_t & _val );
__declspec(implementation_key(3946)) _variant_t DropDowns::GetListFillRange ( );
__declspec(implementation_key(3947)) void DropDowns::PutListFillRange ( const _variant_t & _val );
__declspec(implementation_key(3948)) _variant_t DropDowns::GetListIndex ( );
__declspec(implementation_key(3949)) void DropDowns::PutListIndex ( const _variant_t & _val );
__declspec(implementation_key(3950)) _variant_t DropDowns::GetLocked ( );
__declspec(implementation_key(3951)) void DropDowns::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3952)) _variant_t DropDowns::GetOnAction ( );
__declspec(implementation_key(3953)) void DropDowns::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3954)) _variant_t DropDowns::GetParent ( );
__declspec(implementation_key(3955)) void DropDowns::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3956)) _variant_t DropDowns::GetPlacement ( );
__declspec(implementation_key(3957)) void DropDowns::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(3958)) _variant_t DropDowns::GetPrintObject ( );
__declspec(implementation_key(3959)) void DropDowns::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(3960)) _variant_t DropDowns::GetSelected ( );
__declspec(implementation_key(3961)) void DropDowns::PutSelected ( const _variant_t & _val );
__declspec(implementation_key(3962)) _variant_t DropDowns::GetText ( );
__declspec(implementation_key(3963)) void DropDowns::PutText ( const _variant_t & _val );
__declspec(implementation_key(3964)) _variant_t DropDowns::GetTop ( );
__declspec(implementation_key(3965)) void DropDowns::PutTop ( const _variant_t & _val );
__declspec(implementation_key(3966)) _variant_t DropDowns::GetValue ( );
__declspec(implementation_key(3967)) void DropDowns::PutValue ( const _variant_t & _val );
__declspec(implementation_key(3968)) _variant_t DropDowns::GetVisible ( );
__declspec(implementation_key(3969)) void DropDowns::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(3970)) _variant_t DropDowns::GetWidth ( );
__declspec(implementation_key(3971)) void DropDowns::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(3972)) _variant_t DropDowns::GetZOrder ( );
__declspec(implementation_key(3973)) void DropDowns::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(3974)) _variant_t DialogFrame::Application ( );
__declspec(implementation_key(3975)) _variant_t DialogFrame::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(3976)) _variant_t DialogFrame::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(3977)) _variant_t DialogFrame::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(3978)) _variant_t DialogFrame::Select ( const _variant_t & Replace );
__declspec(implementation_key(3979)) _variant_t DialogFrame::GetCaption ( );
__declspec(implementation_key(3980)) void DialogFrame::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(3981)) _variant_t DialogFrame::GetCreator ( );
__declspec(implementation_key(3982)) void DialogFrame::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(3983)) _variant_t DialogFrame::GetHeight ( );
__declspec(implementation_key(3984)) void DialogFrame::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(3985)) _variant_t DialogFrame::GetLeft ( );
__declspec(implementation_key(3986)) void DialogFrame::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(3987)) _variant_t DialogFrame::GetLocked ( );
__declspec(implementation_key(3988)) void DialogFrame::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(3989)) _variant_t DialogFrame::GetLockedText ( );
__declspec(implementation_key(3990)) void DialogFrame::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(3991)) _variant_t DialogFrame::GetName ( );
__declspec(implementation_key(3992)) void DialogFrame::PutName ( const _variant_t & _val );
__declspec(implementation_key(3993)) _variant_t DialogFrame::GetOnAction ( );
__declspec(implementation_key(3994)) void DialogFrame::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(3995)) _variant_t DialogFrame::GetParent ( );
__declspec(implementation_key(3996)) void DialogFrame::PutParent ( const _variant_t & _val );
__declspec(implementation_key(3997)) _variant_t DialogFrame::GetText ( );
__declspec(implementation_key(3998)) void DialogFrame::PutText ( const _variant_t & _val );
__declspec(implementation_key(3999)) _variant_t DialogFrame::GetTop ( );
__declspec(implementation_key(4000)) void DialogFrame::PutTop ( const _variant_t & _val );
__declspec(implementation_key(4001)) _variant_t DialogFrame::GetWidth ( );
__declspec(implementation_key(4002)) void DialogFrame::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(4003)) _variant_t Label::Application ( );
__declspec(implementation_key(4004)) _variant_t Label::BringToFront ( );
__declspec(implementation_key(4005)) _variant_t Label::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(4006)) _variant_t Label::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(4007)) _variant_t Label::Copy ( );
__declspec(implementation_key(4008)) _variant_t Label::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(4009)) _variant_t Label::Cut ( );
__declspec(implementation_key(4010)) _variant_t Label::Delete ( );
__declspec(implementation_key(4011)) _variant_t Label::Duplicate ( );
__declspec(implementation_key(4012)) _variant_t Label::Select ( const _variant_t & Replace );
__declspec(implementation_key(4013)) _variant_t Label::SendToBack ( );
__declspec(implementation_key(4014)) _variant_t Label::GetAccelerator ( );
__declspec(implementation_key(4015)) void Label::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(4016)) _variant_t Label::GetBottomRightCell ( );
__declspec(implementation_key(4017)) void Label::PutBottomRightCell ( const _variant_t & _val );
__declspec(implementation_key(4018)) _variant_t Label::GetCaption ( );
__declspec(implementation_key(4019)) void Label::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(4020)) _variant_t Label::GetCreator ( );
__declspec(implementation_key(4021)) void Label::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4022)) _variant_t Label::GetEnabled ( );
__declspec(implementation_key(4023)) void Label::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(4024)) _variant_t Label::GetHeight ( );
__declspec(implementation_key(4025)) void Label::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(4026)) _variant_t Label::GetIndex ( );
__declspec(implementation_key(4027)) void Label::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(4028)) _variant_t Label::GetLeft ( );
__declspec(implementation_key(4029)) void Label::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(4030)) _variant_t Label::GetLocked ( );
__declspec(implementation_key(4031)) void Label::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(4032)) _variant_t Label::GetLockedText ( );
__declspec(implementation_key(4033)) void Label::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(4034)) _variant_t Label::GetName ( );
__declspec(implementation_key(4035)) void Label::PutName ( const _variant_t & _val );
__declspec(implementation_key(4036)) _variant_t Label::GetOnAction ( );
__declspec(implementation_key(4037)) void Label::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(4038)) _variant_t Label::GetParent ( );
__declspec(implementation_key(4039)) void Label::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4040)) _variant_t Label::GetPhoneticAccelerator ( );
__declspec(implementation_key(4041)) void Label::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(4042)) _variant_t Label::GetPlacement ( );
__declspec(implementation_key(4043)) void Label::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(4044)) _variant_t Label::GetPrintObject ( );
__declspec(implementation_key(4045)) void Label::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(4046)) _variant_t Label::GetText ( );
__declspec(implementation_key(4047)) void Label::PutText ( const _variant_t & _val );
__declspec(implementation_key(4048)) _variant_t Label::GetTop ( );
__declspec(implementation_key(4049)) void Label::PutTop ( const _variant_t & _val );
__declspec(implementation_key(4050)) _variant_t Label::GetTopLeftCell ( );
__declspec(implementation_key(4051)) void Label::PutTopLeftCell ( const _variant_t & _val );
__declspec(implementation_key(4052)) _variant_t Label::GetVisible ( );
__declspec(implementation_key(4053)) void Label::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(4054)) _variant_t Label::GetWidth ( );
__declspec(implementation_key(4055)) void Label::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(4056)) _variant_t Label::GetZOrder ( );
__declspec(implementation_key(4057)) void Label::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(4058)) _variant_t Labels::_NewEnum ( );
__declspec(implementation_key(4059)) _variant_t Labels::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height );
__declspec(implementation_key(4060)) _variant_t Labels::Application ( );
__declspec(implementation_key(4061)) _variant_t Labels::BringToFront ( );
__declspec(implementation_key(4062)) _variant_t Labels::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(4063)) _variant_t Labels::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(4064)) _variant_t Labels::Copy ( );
__declspec(implementation_key(4065)) _variant_t Labels::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format );
__declspec(implementation_key(4066)) _variant_t Labels::Cut ( );
__declspec(implementation_key(4067)) _variant_t Labels::Delete ( );
__declspec(implementation_key(4068)) _variant_t Labels::Duplicate ( );
__declspec(implementation_key(4069)) _variant_t Labels::Group ( );
__declspec(implementation_key(4070)) _variant_t Labels::Item ( const _variant_t & Index );
__declspec(implementation_key(4071)) _variant_t Labels::Select ( const _variant_t & Replace );
__declspec(implementation_key(4072)) _variant_t Labels::SendToBack ( );
__declspec(implementation_key(4073)) _variant_t Labels::GetAccelerator ( );
__declspec(implementation_key(4074)) void Labels::PutAccelerator ( const _variant_t & _val );
__declspec(implementation_key(4075)) _variant_t Labels::GetCaption ( );
__declspec(implementation_key(4076)) void Labels::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(4077)) _variant_t Labels::GetCount ( );
__declspec(implementation_key(4078)) void Labels::PutCount ( const _variant_t & _val );
__declspec(implementation_key(4079)) _variant_t Labels::GetCreator ( );
__declspec(implementation_key(4080)) void Labels::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4081)) _variant_t Labels::GetEnabled ( );
__declspec(implementation_key(4082)) void Labels::PutEnabled ( const _variant_t & _val );
__declspec(implementation_key(4083)) _variant_t Labels::GetHeight ( );
__declspec(implementation_key(4084)) void Labels::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(4085)) _variant_t Labels::GetLeft ( );
__declspec(implementation_key(4086)) void Labels::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(4087)) _variant_t Labels::GetLocked ( );
__declspec(implementation_key(4088)) void Labels::PutLocked ( const _variant_t & _val );
__declspec(implementation_key(4089)) _variant_t Labels::GetLockedText ( );
__declspec(implementation_key(4090)) void Labels::PutLockedText ( const _variant_t & _val );
__declspec(implementation_key(4091)) _variant_t Labels::GetOnAction ( );
__declspec(implementation_key(4092)) void Labels::PutOnAction ( const _variant_t & _val );
__declspec(implementation_key(4093)) _variant_t Labels::GetParent ( );
__declspec(implementation_key(4094)) void Labels::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4095)) _variant_t Labels::GetPhoneticAccelerator ( );
__declspec(implementation_key(4096)) void Labels::PutPhoneticAccelerator ( const _variant_t & _val );
__declspec(implementation_key(4097)) _variant_t Labels::GetPlacement ( );
__declspec(implementation_key(4098)) void Labels::PutPlacement ( const _variant_t & _val );
__declspec(implementation_key(4099)) _variant_t Labels::GetPrintObject ( );
__declspec(implementation_key(4100)) void Labels::PutPrintObject ( const _variant_t & _val );
__declspec(implementation_key(4101)) _variant_t Labels::GetText ( );
__declspec(implementation_key(4102)) void Labels::PutText ( const _variant_t & _val );
__declspec(implementation_key(4103)) _variant_t Labels::GetTop ( );
__declspec(implementation_key(4104)) void Labels::PutTop ( const _variant_t & _val );
__declspec(implementation_key(4105)) _variant_t Labels::GetVisible ( );
__declspec(implementation_key(4106)) void Labels::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(4107)) _variant_t Labels::GetWidth ( );
__declspec(implementation_key(4108)) void Labels::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(4109)) _variant_t Labels::GetZOrder ( );
__declspec(implementation_key(4110)) void Labels::PutZOrder ( const _variant_t & _val );
__declspec(implementation_key(4111)) _variant_t Interior::Application ( );
__declspec(implementation_key(4112)) _variant_t Interior::GetColor ( );
__declspec(implementation_key(4113)) void Interior::PutColor ( const _variant_t & _val );
__declspec(implementation_key(4114)) _variant_t Interior::GetColorIndex ( );
__declspec(implementation_key(4115)) void Interior::PutColorIndex ( const _variant_t & _val );
__declspec(implementation_key(4116)) _variant_t Interior::GetCreator ( );
__declspec(implementation_key(4117)) void Interior::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4118)) _variant_t Interior::GetParent ( );
__declspec(implementation_key(4119)) void Interior::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4120)) _variant_t Interior::GetPattern ( );
__declspec(implementation_key(4121)) void Interior::PutPattern ( const _variant_t & _val );
__declspec(implementation_key(4122)) _variant_t Interior::GetPatternColor ( );
__declspec(implementation_key(4123)) void Interior::PutPatternColor ( const _variant_t & _val );
__declspec(implementation_key(4124)) _variant_t Interior::GetPatternColorIndex ( );
__declspec(implementation_key(4125)) void Interior::PutPatternColorIndex ( const _variant_t & _val );
__declspec(implementation_key(4126)) _variant_t SoundNote::Application ( );
__declspec(implementation_key(4127)) _variant_t SoundNote::Delete ( );
__declspec(implementation_key(4128)) _variant_t SoundNote::Import ( const _variant_t & Filename );
__declspec(implementation_key(4129)) _variant_t SoundNote::Play ( );
__declspec(implementation_key(4130)) _variant_t SoundNote::Record ( );
__declspec(implementation_key(4131)) _variant_t SoundNote::GetCreator ( );
__declspec(implementation_key(4132)) void SoundNote::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4133)) _variant_t SoundNote::GetParent ( );
__declspec(implementation_key(4134)) void SoundNote::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4135)) _variant_t Characters::Application ( );
__declspec(implementation_key(4136)) _variant_t Characters::Delete ( );
__declspec(implementation_key(4137)) _variant_t Characters::Insert ( const _variant_t & String );
__declspec(implementation_key(4138)) _variant_t Characters::GetCaption ( );
__declspec(implementation_key(4139)) void Characters::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(4140)) _variant_t Characters::GetCount ( );
__declspec(implementation_key(4141)) void Characters::PutCount ( const _variant_t & _val );
__declspec(implementation_key(4142)) _variant_t Characters::GetCreator ( );
__declspec(implementation_key(4143)) void Characters::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4144)) _variant_t Characters::GetFont ( );
__declspec(implementation_key(4145)) void Characters::PutFont ( const _variant_t & _val );
__declspec(implementation_key(4146)) _variant_t Characters::GetParent ( );
__declspec(implementation_key(4147)) void Characters::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4148)) _variant_t Characters::GetText ( );
__declspec(implementation_key(4149)) void Characters::PutText ( const _variant_t & _val );
__declspec(implementation_key(4150)) _variant_t Dialog::Application ( );
__declspec(implementation_key(4151)) _variant_t Dialog::Show ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(4152)) _variant_t Dialog::GetCreator ( );
__declspec(implementation_key(4153)) void Dialog::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4154)) _variant_t Dialog::GetParent ( );
__declspec(implementation_key(4155)) void Dialog::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4156)) _variant_t Dialogs::Application ( );
__declspec(implementation_key(4157)) _variant_t Dialogs::Item ( const _variant_t & Index );
__declspec(implementation_key(4158)) _variant_t Dialogs::GetCount ( );
__declspec(implementation_key(4159)) void Dialogs::PutCount ( const _variant_t & _val );
__declspec(implementation_key(4160)) _variant_t Dialogs::GetCreator ( );
__declspec(implementation_key(4161)) void Dialogs::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4162)) _variant_t Dialogs::GetParent ( );
__declspec(implementation_key(4163)) void Dialogs::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4164)) _variant_t Outline::Application ( );
__declspec(implementation_key(4165)) _variant_t Outline::ShowLevels ( const _variant_t & RowLevels, const _variant_t & ColumnLevels );
__declspec(implementation_key(4166)) _variant_t Outline::GetAutomaticStyles ( );
__declspec(implementation_key(4167)) void Outline::PutAutomaticStyles ( const _variant_t & _val );
__declspec(implementation_key(4168)) _variant_t Outline::GetCreator ( );
__declspec(implementation_key(4169)) void Outline::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4170)) _variant_t Outline::GetParent ( );
__declspec(implementation_key(4171)) void Outline::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4172)) _variant_t Outline::GetSummaryColumn ( );
__declspec(implementation_key(4173)) void Outline::PutSummaryColumn ( const _variant_t & _val );
__declspec(implementation_key(4174)) _variant_t Outline::GetSummaryRow ( );
__declspec(implementation_key(4175)) void Outline::PutSummaryRow ( const _variant_t & _val );
__declspec(implementation_key(4176)) _variant_t RoutingSlip::Application ( );
__declspec(implementation_key(4177)) _variant_t RoutingSlip::Reset ( );
__declspec(implementation_key(4178)) _variant_t RoutingSlip::GetCreator ( );
__declspec(implementation_key(4179)) void RoutingSlip::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4180)) _variant_t RoutingSlip::GetDelivery ( );
__declspec(implementation_key(4181)) void RoutingSlip::PutDelivery ( const _variant_t & _val );
__declspec(implementation_key(4182)) _variant_t RoutingSlip::GetMessage ( );
__declspec(implementation_key(4183)) void RoutingSlip::PutMessage ( const _variant_t & _val );
__declspec(implementation_key(4184)) _variant_t RoutingSlip::GetParent ( );
__declspec(implementation_key(4185)) void RoutingSlip::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4186)) _variant_t RoutingSlip::GetRecipients ( );
__declspec(implementation_key(4187)) void RoutingSlip::PutRecipients ( const _variant_t & _val );
__declspec(implementation_key(4188)) _variant_t RoutingSlip::GetReturnWhenDone ( );
__declspec(implementation_key(4189)) void RoutingSlip::PutReturnWhenDone ( const _variant_t & _val );
__declspec(implementation_key(4190)) _variant_t RoutingSlip::GetStatus ( );
__declspec(implementation_key(4191)) void RoutingSlip::PutStatus ( const _variant_t & _val );
__declspec(implementation_key(4192)) _variant_t RoutingSlip::GetSubject ( );
__declspec(implementation_key(4193)) void RoutingSlip::PutSubject ( const _variant_t & _val );
__declspec(implementation_key(4194)) _variant_t RoutingSlip::GetTrackStatus ( );
__declspec(implementation_key(4195)) void RoutingSlip::PutTrackStatus ( const _variant_t & _val );
__declspec(implementation_key(4196)) _variant_t Module::Activate ( );
__declspec(implementation_key(4197)) _variant_t Module::Application ( );
__declspec(implementation_key(4198)) _variant_t Module::Copy ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4199)) _variant_t Module::Delete ( );
__declspec(implementation_key(4200)) _variant_t Module::InsertFile ( const _variant_t & Filename, const _variant_t & Merge );
__declspec(implementation_key(4201)) _variant_t Module::Move ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4202)) _variant_t Module::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(4203)) _variant_t Module::Protect ( const _variant_t & Password, const _variant_t & DrawingObjects, const _variant_t & Contents, const _variant_t & Scenarios, const _variant_t & UserInterfaceOnly );
__declspec(implementation_key(4204)) _variant_t Module::SaveAs ( const _variant_t & Filename, const _variant_t & FileFormat, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ReadOnlyRecommended, const _variant_t & CreateBackup );
__declspec(implementation_key(4205)) _variant_t Module::Select ( const _variant_t & Replace );
__declspec(implementation_key(4206)) _variant_t Module::Unprotect ( const _variant_t & Password );
__declspec(implementation_key(4207)) _variant_t Module::GetCreator ( );
__declspec(implementation_key(4208)) void Module::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4209)) _variant_t Module::GetIndex ( );
__declspec(implementation_key(4210)) void Module::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(4211)) _variant_t Module::GetName ( );
__declspec(implementation_key(4212)) void Module::PutName ( const _variant_t & _val );
__declspec(implementation_key(4213)) _variant_t Module::GetNext ( );
__declspec(implementation_key(4214)) void Module::PutNext ( const _variant_t & _val );
__declspec(implementation_key(4215)) _variant_t Module::GetOnDoubleClick ( );
__declspec(implementation_key(4216)) void Module::PutOnDoubleClick ( const _variant_t & _val );
__declspec(implementation_key(4217)) _variant_t Module::GetOnSheetActivate ( );
__declspec(implementation_key(4218)) void Module::PutOnSheetActivate ( const _variant_t & _val );
__declspec(implementation_key(4219)) _variant_t Module::GetOnSheetDeactivate ( );
__declspec(implementation_key(4220)) void Module::PutOnSheetDeactivate ( const _variant_t & _val );
__declspec(implementation_key(4221)) _variant_t Module::GetPageSetup ( );
__declspec(implementation_key(4222)) void Module::PutPageSetup ( const _variant_t & _val );
__declspec(implementation_key(4223)) _variant_t Module::GetParent ( );
__declspec(implementation_key(4224)) void Module::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4225)) _variant_t Module::GetPrevious ( );
__declspec(implementation_key(4226)) void Module::PutPrevious ( const _variant_t & _val );
__declspec(implementation_key(4227)) _variant_t Module::GetProtectContents ( );
__declspec(implementation_key(4228)) void Module::PutProtectContents ( const _variant_t & _val );
__declspec(implementation_key(4229)) _variant_t Module::GetProtectionMode ( );
__declspec(implementation_key(4230)) void Module::PutProtectionMode ( const _variant_t & _val );
__declspec(implementation_key(4231)) _variant_t Module::GetVisible ( );
__declspec(implementation_key(4232)) void Module::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(4233)) _variant_t Modules::_NewEnum ( );
__declspec(implementation_key(4234)) _variant_t Modules::Add ( const _variant_t & Before, const _variant_t & After, const _variant_t & Count );
__declspec(implementation_key(4235)) _variant_t Modules::Application ( );
__declspec(implementation_key(4236)) _variant_t Modules::Copy ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4237)) _variant_t Modules::Delete ( );
__declspec(implementation_key(4238)) _variant_t Modules::Item ( const _variant_t & Index );
__declspec(implementation_key(4239)) _variant_t Modules::Move ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4240)) _variant_t Modules::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(4241)) _variant_t Modules::Select ( const _variant_t & Replace );
__declspec(implementation_key(4242)) _variant_t Modules::GetCount ( );
__declspec(implementation_key(4243)) void Modules::PutCount ( const _variant_t & _val );
__declspec(implementation_key(4244)) _variant_t Modules::GetCreator ( );
__declspec(implementation_key(4245)) void Modules::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4246)) _variant_t Modules::GetParent ( );
__declspec(implementation_key(4247)) void Modules::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4248)) _variant_t Modules::GetVisible ( );
__declspec(implementation_key(4249)) void Modules::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(4250)) _variant_t DialogSheet::Activate ( );
__declspec(implementation_key(4251)) _variant_t DialogSheet::Application ( );
__declspec(implementation_key(4252)) _variant_t DialogSheet::Arcs ( const _variant_t & Index );
__declspec(implementation_key(4253)) _variant_t DialogSheet::Buttons ( const _variant_t & Index );
__declspec(implementation_key(4254)) _variant_t DialogSheet::ChartObjects ( const _variant_t & Index );
__declspec(implementation_key(4255)) _variant_t DialogSheet::CheckBoxes ( const _variant_t & Index );
__declspec(implementation_key(4256)) _variant_t DialogSheet::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(4257)) _variant_t DialogSheet::Copy ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4258)) _variant_t DialogSheet::Delete ( );
__declspec(implementation_key(4259)) _variant_t DialogSheet::DrawingObjects ( const _variant_t & Index );
__declspec(implementation_key(4260)) _variant_t DialogSheet::Drawings ( const _variant_t & Index );
__declspec(implementation_key(4261)) _variant_t DialogSheet::DropDowns ( const _variant_t & Index );
__declspec(implementation_key(4262)) _variant_t DialogSheet::EditBoxes ( const _variant_t & Index );
__declspec(implementation_key(4263)) _variant_t DialogSheet::_Evaluate ( const _variant_t & Name );
__declspec(implementation_key(4264)) _variant_t DialogSheet::Evaluate ( const _variant_t & Name );
__declspec(implementation_key(4265)) _variant_t DialogSheet::GroupBoxes ( const _variant_t & Index );
__declspec(implementation_key(4266)) _variant_t DialogSheet::GroupObjects ( const _variant_t & Index );
__declspec(implementation_key(4267)) _variant_t DialogSheet::Hide ( const _variant_t & Cancel );
__declspec(implementation_key(4268)) _variant_t DialogSheet::Labels ( const _variant_t & Index );
__declspec(implementation_key(4269)) _variant_t DialogSheet::Lines ( const _variant_t & Index );
__declspec(implementation_key(4270)) _variant_t DialogSheet::ListBoxes ( const _variant_t & Index );
__declspec(implementation_key(4271)) _variant_t DialogSheet::Move ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4272)) _variant_t DialogSheet::Names ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo );
__declspec(implementation_key(4273)) _variant_t DialogSheet::OLEObjects ( const _variant_t & Index );
__declspec(implementation_key(4274)) _variant_t DialogSheet::OptionButtons ( const _variant_t & Index );
__declspec(implementation_key(4275)) _variant_t DialogSheet::Ovals ( const _variant_t & Index );
__declspec(implementation_key(4276)) _variant_t DialogSheet::Paste ( const _variant_t & Destination, const _variant_t & Link );
__declspec(implementation_key(4277)) _variant_t DialogSheet::PasteSpecial ( const _variant_t & Format, const _variant_t & Link, const _variant_t & DisplayAsIcon, const _variant_t & IconFileName, const _variant_t & IconIndex, const _variant_t & IconLabel );
__declspec(implementation_key(4278)) _variant_t DialogSheet::Pictures ( const _variant_t & Index );
__declspec(implementation_key(4279)) _variant_t DialogSheet::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(4280)) _variant_t DialogSheet::PrintPreview ( );
__declspec(implementation_key(4281)) _variant_t DialogSheet::Protect ( const _variant_t & Password, const _variant_t & DrawingObjects, const _variant_t & Contents, const _variant_t & Scenarios, const _variant_t & UserInterfaceOnly );
__declspec(implementation_key(4282)) _variant_t DialogSheet::Rectangles ( const _variant_t & Index );
__declspec(implementation_key(4283)) _variant_t DialogSheet::SaveAs ( const _variant_t & Filename, const _variant_t & FileFormat, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ReadOnlyRecommended, const _variant_t & CreateBackup );
__declspec(implementation_key(4284)) _variant_t DialogSheet::ScrollBars ( const _variant_t & Index );
__declspec(implementation_key(4285)) _variant_t DialogSheet::Select ( const _variant_t & Replace );
__declspec(implementation_key(4286)) _variant_t DialogSheet::Show ( );
__declspec(implementation_key(4287)) _variant_t DialogSheet::Spinners ( const _variant_t & Index );
__declspec(implementation_key(4288)) _variant_t DialogSheet::TextBoxes ( const _variant_t & Index );
__declspec(implementation_key(4289)) _variant_t DialogSheet::Unprotect ( const _variant_t & Password );
__declspec(implementation_key(4290)) _variant_t DialogSheet::GetCreator ( );
__declspec(implementation_key(4291)) void DialogSheet::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4292)) _variant_t DialogSheet::GetDefaultButton ( );
__declspec(implementation_key(4293)) void DialogSheet::PutDefaultButton ( const _variant_t & _val );
__declspec(implementation_key(4294)) _variant_t DialogSheet::GetDialogFrame ( );
__declspec(implementation_key(4295)) void DialogSheet::PutDialogFrame ( const _variant_t & _val );
__declspec(implementation_key(4296)) _variant_t DialogSheet::GetDisplayAutomaticPageBreaks ( );
__declspec(implementation_key(4297)) void DialogSheet::PutDisplayAutomaticPageBreaks ( const _variant_t & _val );
__declspec(implementation_key(4298)) _variant_t DialogSheet::GetEnableAutoFilter ( );
__declspec(implementation_key(4299)) void DialogSheet::PutEnableAutoFilter ( const _variant_t & _val );
__declspec(implementation_key(4300)) _variant_t DialogSheet::GetEnableOutlining ( );
__declspec(implementation_key(4301)) void DialogSheet::PutEnableOutlining ( const _variant_t & _val );
__declspec(implementation_key(4302)) _variant_t DialogSheet::GetEnablePivotTable ( );
__declspec(implementation_key(4303)) void DialogSheet::PutEnablePivotTable ( const _variant_t & _val );
__declspec(implementation_key(4304)) _variant_t DialogSheet::GetFocus ( );
__declspec(implementation_key(4305)) void DialogSheet::PutFocus ( const _variant_t & _val );
__declspec(implementation_key(4306)) _variant_t DialogSheet::GetIndex ( );
__declspec(implementation_key(4307)) void DialogSheet::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(4308)) _variant_t DialogSheet::GetName ( );
__declspec(implementation_key(4309)) void DialogSheet::PutName ( const _variant_t & _val );
__declspec(implementation_key(4310)) _variant_t DialogSheet::GetNext ( );
__declspec(implementation_key(4311)) void DialogSheet::PutNext ( const _variant_t & _val );
__declspec(implementation_key(4312)) _variant_t DialogSheet::GetOnDoubleClick ( );
__declspec(implementation_key(4313)) void DialogSheet::PutOnDoubleClick ( const _variant_t & _val );
__declspec(implementation_key(4314)) _variant_t DialogSheet::GetOnSheetActivate ( );
__declspec(implementation_key(4315)) void DialogSheet::PutOnSheetActivate ( const _variant_t & _val );
__declspec(implementation_key(4316)) _variant_t DialogSheet::GetOnSheetDeactivate ( );
__declspec(implementation_key(4317)) void DialogSheet::PutOnSheetDeactivate ( const _variant_t & _val );
__declspec(implementation_key(4318)) _variant_t DialogSheet::GetPageSetup ( );
__declspec(implementation_key(4319)) void DialogSheet::PutPageSetup ( const _variant_t & _val );
__declspec(implementation_key(4320)) _variant_t DialogSheet::GetParent ( );
__declspec(implementation_key(4321)) void DialogSheet::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4322)) _variant_t DialogSheet::GetPrevious ( );
__declspec(implementation_key(4323)) void DialogSheet::PutPrevious ( const _variant_t & _val );
__declspec(implementation_key(4324)) _variant_t DialogSheet::GetProtectContents ( );
__declspec(implementation_key(4325)) void DialogSheet::PutProtectContents ( const _variant_t & _val );
__declspec(implementation_key(4326)) _variant_t DialogSheet::GetProtectDrawingObjects ( );
__declspec(implementation_key(4327)) void DialogSheet::PutProtectDrawingObjects ( const _variant_t & _val );
__declspec(implementation_key(4328)) _variant_t DialogSheet::GetProtectionMode ( );
__declspec(implementation_key(4329)) void DialogSheet::PutProtectionMode ( const _variant_t & _val );
__declspec(implementation_key(4330)) _variant_t DialogSheet::GetVisible ( );
__declspec(implementation_key(4331)) void DialogSheet::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(4332)) _variant_t DialogSheets::_NewEnum ( );
__declspec(implementation_key(4333)) _variant_t DialogSheets::Add ( const _variant_t & Before, const _variant_t & After, const _variant_t & Count );
__declspec(implementation_key(4334)) _variant_t DialogSheets::Application ( );
__declspec(implementation_key(4335)) _variant_t DialogSheets::Copy ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4336)) _variant_t DialogSheets::Delete ( );
__declspec(implementation_key(4337)) _variant_t DialogSheets::Item ( const _variant_t & Index );
__declspec(implementation_key(4338)) _variant_t DialogSheets::Move ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4339)) _variant_t DialogSheets::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(4340)) _variant_t DialogSheets::PrintPreview ( );
__declspec(implementation_key(4341)) _variant_t DialogSheets::Select ( const _variant_t & Replace );
__declspec(implementation_key(4342)) _variant_t DialogSheets::GetCount ( );
__declspec(implementation_key(4343)) void DialogSheets::PutCount ( const _variant_t & _val );
__declspec(implementation_key(4344)) _variant_t DialogSheets::GetCreator ( );
__declspec(implementation_key(4345)) void DialogSheets::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4346)) _variant_t DialogSheets::GetParent ( );
__declspec(implementation_key(4347)) void DialogSheets::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4348)) _variant_t DialogSheets::GetVisible ( );
__declspec(implementation_key(4349)) void DialogSheets::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(4350)) _variant_t PageSetup::Application ( );
__declspec(implementation_key(4351)) _variant_t PageSetup::GetBlackAndWhite ( );
__declspec(implementation_key(4352)) void PageSetup::PutBlackAndWhite ( const _variant_t & _val );
__declspec(implementation_key(4353)) _variant_t PageSetup::GetBottomMargin ( );
__declspec(implementation_key(4354)) void PageSetup::PutBottomMargin ( const _variant_t & _val );
__declspec(implementation_key(4355)) _variant_t PageSetup::GetCenterFooter ( );
__declspec(implementation_key(4356)) void PageSetup::PutCenterFooter ( const _variant_t & _val );
__declspec(implementation_key(4357)) _variant_t PageSetup::GetCenterHeader ( );
__declspec(implementation_key(4358)) void PageSetup::PutCenterHeader ( const _variant_t & _val );
__declspec(implementation_key(4359)) _variant_t PageSetup::GetCenterHorizontally ( );
__declspec(implementation_key(4360)) void PageSetup::PutCenterHorizontally ( const _variant_t & _val );
__declspec(implementation_key(4361)) _variant_t PageSetup::GetCenterVertically ( );
__declspec(implementation_key(4362)) void PageSetup::PutCenterVertically ( const _variant_t & _val );
__declspec(implementation_key(4363)) _variant_t PageSetup::GetChartSize ( );
__declspec(implementation_key(4364)) void PageSetup::PutChartSize ( const _variant_t & _val );
__declspec(implementation_key(4365)) _variant_t PageSetup::GetCreator ( );
__declspec(implementation_key(4366)) void PageSetup::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4367)) _variant_t PageSetup::GetDraft ( );
__declspec(implementation_key(4368)) void PageSetup::PutDraft ( const _variant_t & _val );
__declspec(implementation_key(4369)) _variant_t PageSetup::GetFirstPageNumber ( );
__declspec(implementation_key(4370)) void PageSetup::PutFirstPageNumber ( const _variant_t & _val );
__declspec(implementation_key(4371)) _variant_t PageSetup::GetFitToPagesTall ( );
__declspec(implementation_key(4372)) void PageSetup::PutFitToPagesTall ( const _variant_t & _val );
__declspec(implementation_key(4373)) _variant_t PageSetup::GetFitToPagesWide ( );
__declspec(implementation_key(4374)) void PageSetup::PutFitToPagesWide ( const _variant_t & _val );
__declspec(implementation_key(4375)) _variant_t PageSetup::GetFooterMargin ( );
__declspec(implementation_key(4376)) void PageSetup::PutFooterMargin ( const _variant_t & _val );
__declspec(implementation_key(4377)) _variant_t PageSetup::GetHeaderMargin ( );
__declspec(implementation_key(4378)) void PageSetup::PutHeaderMargin ( const _variant_t & _val );
__declspec(implementation_key(4379)) _variant_t PageSetup::GetLeftFooter ( );
__declspec(implementation_key(4380)) void PageSetup::PutLeftFooter ( const _variant_t & _val );
__declspec(implementation_key(4381)) _variant_t PageSetup::GetLeftHeader ( );
__declspec(implementation_key(4382)) void PageSetup::PutLeftHeader ( const _variant_t & _val );
__declspec(implementation_key(4383)) _variant_t PageSetup::GetLeftMargin ( );
__declspec(implementation_key(4384)) void PageSetup::PutLeftMargin ( const _variant_t & _val );
__declspec(implementation_key(4385)) _variant_t PageSetup::GetOrder ( );
__declspec(implementation_key(4386)) void PageSetup::PutOrder ( const _variant_t & _val );
__declspec(implementation_key(4387)) _variant_t PageSetup::GetOrientation ( );
__declspec(implementation_key(4388)) void PageSetup::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(4389)) _variant_t PageSetup::GetPaperSize ( );
__declspec(implementation_key(4390)) void PageSetup::PutPaperSize ( const _variant_t & _val );
__declspec(implementation_key(4391)) _variant_t PageSetup::GetParent ( );
__declspec(implementation_key(4392)) void PageSetup::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4393)) _variant_t PageSetup::GetPrintArea ( );
__declspec(implementation_key(4394)) void PageSetup::PutPrintArea ( const _variant_t & _val );
__declspec(implementation_key(4395)) _variant_t PageSetup::GetPrintGridlines ( );
__declspec(implementation_key(4396)) void PageSetup::PutPrintGridlines ( const _variant_t & _val );
__declspec(implementation_key(4397)) _variant_t PageSetup::GetPrintHeadings ( );
__declspec(implementation_key(4398)) void PageSetup::PutPrintHeadings ( const _variant_t & _val );
__declspec(implementation_key(4399)) _variant_t PageSetup::GetPrintNotes ( );
__declspec(implementation_key(4400)) void PageSetup::PutPrintNotes ( const _variant_t & _val );
__declspec(implementation_key(4401)) _variant_t PageSetup::GetPrintQuality ( );
__declspec(implementation_key(4402)) void PageSetup::PutPrintQuality ( const _variant_t & _val );
__declspec(implementation_key(4403)) _variant_t PageSetup::GetPrintTitleColumns ( );
__declspec(implementation_key(4404)) void PageSetup::PutPrintTitleColumns ( const _variant_t & _val );
__declspec(implementation_key(4405)) _variant_t PageSetup::GetPrintTitleRows ( );
__declspec(implementation_key(4406)) void PageSetup::PutPrintTitleRows ( const _variant_t & _val );
__declspec(implementation_key(4407)) _variant_t PageSetup::GetRightFooter ( );
__declspec(implementation_key(4408)) void PageSetup::PutRightFooter ( const _variant_t & _val );
__declspec(implementation_key(4409)) _variant_t PageSetup::GetRightHeader ( );
__declspec(implementation_key(4410)) void PageSetup::PutRightHeader ( const _variant_t & _val );
__declspec(implementation_key(4411)) _variant_t PageSetup::GetRightMargin ( );
__declspec(implementation_key(4412)) void PageSetup::PutRightMargin ( const _variant_t & _val );
__declspec(implementation_key(4413)) _variant_t PageSetup::GetTopMargin ( );
__declspec(implementation_key(4414)) void PageSetup::PutTopMargin ( const _variant_t & _val );
__declspec(implementation_key(4415)) _variant_t PageSetup::GetZoom ( );
__declspec(implementation_key(4416)) void PageSetup::PutZoom ( const _variant_t & _val );
__declspec(implementation_key(4417)) _variant_t Mailer::Application ( );
__declspec(implementation_key(4418)) _variant_t Mailer::GetBCCRecipients ( );
__declspec(implementation_key(4419)) void Mailer::PutBCCRecipients ( const _variant_t & _val );
__declspec(implementation_key(4420)) _variant_t Mailer::GetCCRecipients ( );
__declspec(implementation_key(4421)) void Mailer::PutCCRecipients ( const _variant_t & _val );
__declspec(implementation_key(4422)) _variant_t Mailer::GetCreator ( );
__declspec(implementation_key(4423)) void Mailer::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4424)) _variant_t Mailer::GetEnclosures ( );
__declspec(implementation_key(4425)) void Mailer::PutEnclosures ( const _variant_t & _val );
__declspec(implementation_key(4426)) _variant_t Mailer::GetParent ( );
__declspec(implementation_key(4427)) void Mailer::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4428)) _variant_t Mailer::GetReceived ( );
__declspec(implementation_key(4429)) void Mailer::PutReceived ( const _variant_t & _val );
__declspec(implementation_key(4430)) _variant_t Mailer::GetSendDateTime ( );
__declspec(implementation_key(4431)) void Mailer::PutSendDateTime ( const _variant_t & _val );
__declspec(implementation_key(4432)) _variant_t Mailer::GetSender ( );
__declspec(implementation_key(4433)) void Mailer::PutSender ( const _variant_t & _val );
__declspec(implementation_key(4434)) _variant_t Mailer::GetSubject ( );
__declspec(implementation_key(4435)) void Mailer::PutSubject ( const _variant_t & _val );
__declspec(implementation_key(4436)) _variant_t Mailer::GetToRecipients ( );
__declspec(implementation_key(4437)) void Mailer::PutToRecipients ( const _variant_t & _val );
__declspec(implementation_key(4438)) _variant_t Mailer::GetWhichAddress ( );
__declspec(implementation_key(4439)) void Mailer::PutWhichAddress ( const _variant_t & _val );
__declspec(implementation_key(4440)) _variant_t Font::Application ( );
__declspec(implementation_key(4441)) _variant_t Font::GetBackground ( );
__declspec(implementation_key(4442)) void Font::PutBackground ( const _variant_t & _val );
__declspec(implementation_key(4443)) _variant_t Font::GetBold ( );
__declspec(implementation_key(4444)) void Font::PutBold ( const _variant_t & _val );
__declspec(implementation_key(4445)) _variant_t Font::GetColor ( );
__declspec(implementation_key(4446)) void Font::PutColor ( const _variant_t & _val );
__declspec(implementation_key(4447)) _variant_t Font::GetColorIndex ( );
__declspec(implementation_key(4448)) void Font::PutColorIndex ( const _variant_t & _val );
__declspec(implementation_key(4449)) _variant_t Font::GetCreator ( );
__declspec(implementation_key(4450)) void Font::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4451)) _variant_t Font::GetFontStyle ( );
__declspec(implementation_key(4452)) void Font::PutFontStyle ( const _variant_t & _val );
__declspec(implementation_key(4453)) _variant_t Font::GetItalic ( );
__declspec(implementation_key(4454)) void Font::PutItalic ( const _variant_t & _val );
__declspec(implementation_key(4455)) _variant_t Font::GetName ( );
__declspec(implementation_key(4456)) void Font::PutName ( const _variant_t & _val );
__declspec(implementation_key(4457)) _variant_t Font::GetOutlineFont ( );
__declspec(implementation_key(4458)) void Font::PutOutlineFont ( const _variant_t & _val );
__declspec(implementation_key(4459)) _variant_t Font::GetParent ( );
__declspec(implementation_key(4460)) void Font::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4461)) _variant_t Font::GetShadow ( );
__declspec(implementation_key(4462)) void Font::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(4463)) _variant_t Font::GetSize ( );
__declspec(implementation_key(4464)) void Font::PutSize ( const _variant_t & _val );
__declspec(implementation_key(4465)) _variant_t Font::GetStrikethrough ( );
__declspec(implementation_key(4466)) void Font::PutStrikethrough ( const _variant_t & _val );
__declspec(implementation_key(4467)) _variant_t Font::GetSubscript ( );
__declspec(implementation_key(4468)) void Font::PutSubscript ( const _variant_t & _val );
__declspec(implementation_key(4469)) _variant_t Font::GetSuperscript ( );
__declspec(implementation_key(4470)) void Font::PutSuperscript ( const _variant_t & _val );
__declspec(implementation_key(4471)) _variant_t Font::GetUnderline ( );
__declspec(implementation_key(4472)) void Font::PutUnderline ( const _variant_t & _val );
__declspec(implementation_key(4473)) _variant_t Border::Application ( );
__declspec(implementation_key(4474)) _variant_t Border::GetColor ( );
__declspec(implementation_key(4475)) void Border::PutColor ( const _variant_t & _val );
__declspec(implementation_key(4476)) _variant_t Border::GetColorIndex ( );
__declspec(implementation_key(4477)) void Border::PutColorIndex ( const _variant_t & _val );
__declspec(implementation_key(4478)) _variant_t Border::GetCreator ( );
__declspec(implementation_key(4479)) void Border::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4480)) _variant_t Border::GetLineStyle ( );
__declspec(implementation_key(4481)) void Border::PutLineStyle ( const _variant_t & _val );
__declspec(implementation_key(4482)) _variant_t Border::GetParent ( );
__declspec(implementation_key(4483)) void Border::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4484)) _variant_t Border::GetWeight ( );
__declspec(implementation_key(4485)) void Border::PutWeight ( const _variant_t & _val );
__declspec(implementation_key(4486)) _variant_t Borders::_NewEnum ( );
__declspec(implementation_key(4487)) _variant_t Borders::Application ( );
__declspec(implementation_key(4488)) _variant_t Borders::Item ( const _variant_t & Index );
__declspec(implementation_key(4489)) _variant_t Borders::GetColor ( );
__declspec(implementation_key(4490)) void Borders::PutColor ( const _variant_t & _val );
__declspec(implementation_key(4491)) _variant_t Borders::GetColorIndex ( );
__declspec(implementation_key(4492)) void Borders::PutColorIndex ( const _variant_t & _val );
__declspec(implementation_key(4493)) _variant_t Borders::GetCount ( );
__declspec(implementation_key(4494)) void Borders::PutCount ( const _variant_t & _val );
__declspec(implementation_key(4495)) _variant_t Borders::GetCreator ( );
__declspec(implementation_key(4496)) void Borders::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4497)) _variant_t Borders::GetLineStyle ( );
__declspec(implementation_key(4498)) void Borders::PutLineStyle ( const _variant_t & _val );
__declspec(implementation_key(4499)) _variant_t Borders::GetParent ( );
__declspec(implementation_key(4500)) void Borders::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4501)) _variant_t Borders::GetValue ( );
__declspec(implementation_key(4502)) void Borders::PutValue ( const _variant_t & _val );
__declspec(implementation_key(4503)) _variant_t Borders::GetWeight ( );
__declspec(implementation_key(4504)) void Borders::PutWeight ( const _variant_t & _val );
__declspec(implementation_key(4505)) _variant_t Corners::Application ( );
__declspec(implementation_key(4506)) _variant_t Corners::Select ( );
__declspec(implementation_key(4507)) _variant_t Corners::GetCreator ( );
__declspec(implementation_key(4508)) void Corners::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4509)) _variant_t Corners::GetName ( );
__declspec(implementation_key(4510)) void Corners::PutName ( const _variant_t & _val );
__declspec(implementation_key(4511)) _variant_t Corners::GetParent ( );
__declspec(implementation_key(4512)) void Corners::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4513)) _variant_t SeriesLines::Application ( );
__declspec(implementation_key(4514)) _variant_t SeriesLines::Delete ( );
__declspec(implementation_key(4515)) _variant_t SeriesLines::Select ( );
__declspec(implementation_key(4516)) _variant_t SeriesLines::GetBorder ( );
__declspec(implementation_key(4517)) void SeriesLines::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4518)) _variant_t SeriesLines::GetCreator ( );
__declspec(implementation_key(4519)) void SeriesLines::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4520)) _variant_t SeriesLines::GetName ( );
__declspec(implementation_key(4521)) void SeriesLines::PutName ( const _variant_t & _val );
__declspec(implementation_key(4522)) _variant_t SeriesLines::GetParent ( );
__declspec(implementation_key(4523)) void SeriesLines::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4524)) _variant_t HiLoLines::Application ( );
__declspec(implementation_key(4525)) _variant_t HiLoLines::Delete ( );
__declspec(implementation_key(4526)) _variant_t HiLoLines::Select ( );
__declspec(implementation_key(4527)) _variant_t HiLoLines::GetBorder ( );
__declspec(implementation_key(4528)) void HiLoLines::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4529)) _variant_t HiLoLines::GetCreator ( );
__declspec(implementation_key(4530)) void HiLoLines::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4531)) _variant_t HiLoLines::GetName ( );
__declspec(implementation_key(4532)) void HiLoLines::PutName ( const _variant_t & _val );
__declspec(implementation_key(4533)) _variant_t HiLoLines::GetParent ( );
__declspec(implementation_key(4534)) void HiLoLines::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4535)) _variant_t Gridlines::Application ( );
__declspec(implementation_key(4536)) _variant_t Gridlines::Delete ( );
__declspec(implementation_key(4537)) _variant_t Gridlines::Select ( );
__declspec(implementation_key(4538)) _variant_t Gridlines::GetBorder ( );
__declspec(implementation_key(4539)) void Gridlines::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4540)) _variant_t Gridlines::GetCreator ( );
__declspec(implementation_key(4541)) void Gridlines::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4542)) _variant_t Gridlines::GetName ( );
__declspec(implementation_key(4543)) void Gridlines::PutName ( const _variant_t & _val );
__declspec(implementation_key(4544)) _variant_t Gridlines::GetParent ( );
__declspec(implementation_key(4545)) void Gridlines::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4546)) _variant_t DropLines::Application ( );
__declspec(implementation_key(4547)) _variant_t DropLines::Delete ( );
__declspec(implementation_key(4548)) _variant_t DropLines::Select ( );
__declspec(implementation_key(4549)) _variant_t DropLines::GetBorder ( );
__declspec(implementation_key(4550)) void DropLines::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4551)) _variant_t DropLines::GetCreator ( );
__declspec(implementation_key(4552)) void DropLines::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4553)) _variant_t DropLines::GetName ( );
__declspec(implementation_key(4554)) void DropLines::PutName ( const _variant_t & _val );
__declspec(implementation_key(4555)) _variant_t DropLines::GetParent ( );
__declspec(implementation_key(4556)) void DropLines::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4557)) _variant_t ErrorBars::Application ( );
__declspec(implementation_key(4558)) _variant_t ErrorBars::ClearFormats ( );
__declspec(implementation_key(4559)) _variant_t ErrorBars::Delete ( );
__declspec(implementation_key(4560)) _variant_t ErrorBars::Select ( );
__declspec(implementation_key(4561)) _variant_t ErrorBars::GetBorder ( );
__declspec(implementation_key(4562)) void ErrorBars::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4563)) _variant_t ErrorBars::GetCreator ( );
__declspec(implementation_key(4564)) void ErrorBars::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4565)) _variant_t ErrorBars::GetEndStyle ( );
__declspec(implementation_key(4566)) void ErrorBars::PutEndStyle ( const _variant_t & _val );
__declspec(implementation_key(4567)) _variant_t ErrorBars::GetName ( );
__declspec(implementation_key(4568)) void ErrorBars::PutName ( const _variant_t & _val );
__declspec(implementation_key(4569)) _variant_t ErrorBars::GetParent ( );
__declspec(implementation_key(4570)) void ErrorBars::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4571)) _variant_t UpBars::Application ( );
__declspec(implementation_key(4572)) _variant_t UpBars::Delete ( );
__declspec(implementation_key(4573)) _variant_t UpBars::Select ( );
__declspec(implementation_key(4574)) _variant_t UpBars::GetBorder ( );
__declspec(implementation_key(4575)) void UpBars::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4576)) _variant_t UpBars::GetCreator ( );
__declspec(implementation_key(4577)) void UpBars::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4578)) _variant_t UpBars::GetInterior ( );
__declspec(implementation_key(4579)) void UpBars::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(4580)) _variant_t UpBars::GetName ( );
__declspec(implementation_key(4581)) void UpBars::PutName ( const _variant_t & _val );
__declspec(implementation_key(4582)) _variant_t UpBars::GetParent ( );
__declspec(implementation_key(4583)) void UpBars::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4584)) _variant_t DownBars::Application ( );
__declspec(implementation_key(4585)) _variant_t DownBars::Delete ( );
__declspec(implementation_key(4586)) _variant_t DownBars::Select ( );
__declspec(implementation_key(4587)) _variant_t DownBars::GetBorder ( );
__declspec(implementation_key(4588)) void DownBars::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4589)) _variant_t DownBars::GetCreator ( );
__declspec(implementation_key(4590)) void DownBars::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4591)) _variant_t DownBars::GetInterior ( );
__declspec(implementation_key(4592)) void DownBars::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(4593)) _variant_t DownBars::GetName ( );
__declspec(implementation_key(4594)) void DownBars::PutName ( const _variant_t & _val );
__declspec(implementation_key(4595)) _variant_t DownBars::GetParent ( );
__declspec(implementation_key(4596)) void DownBars::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4597)) _variant_t ChartTitle::Application ( );
__declspec(implementation_key(4598)) _variant_t ChartTitle::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(4599)) _variant_t ChartTitle::Delete ( );
__declspec(implementation_key(4600)) _variant_t ChartTitle::Select ( );
__declspec(implementation_key(4601)) _variant_t ChartTitle::GetBorder ( );
__declspec(implementation_key(4602)) void ChartTitle::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4603)) _variant_t ChartTitle::GetCaption ( );
__declspec(implementation_key(4604)) void ChartTitle::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(4605)) _variant_t ChartTitle::GetCreator ( );
__declspec(implementation_key(4606)) void ChartTitle::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4607)) _variant_t ChartTitle::GetFont ( );
__declspec(implementation_key(4608)) void ChartTitle::PutFont ( const _variant_t & _val );
__declspec(implementation_key(4609)) _variant_t ChartTitle::GetHorizontalAlignment ( );
__declspec(implementation_key(4610)) void ChartTitle::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(4611)) _variant_t ChartTitle::GetInterior ( );
__declspec(implementation_key(4612)) void ChartTitle::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(4613)) _variant_t ChartTitle::GetLeft ( );
__declspec(implementation_key(4614)) void ChartTitle::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(4615)) _variant_t ChartTitle::GetName ( );
__declspec(implementation_key(4616)) void ChartTitle::PutName ( const _variant_t & _val );
__declspec(implementation_key(4617)) _variant_t ChartTitle::GetOrientation ( );
__declspec(implementation_key(4618)) void ChartTitle::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(4619)) _variant_t ChartTitle::GetParent ( );
__declspec(implementation_key(4620)) void ChartTitle::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4621)) _variant_t ChartTitle::GetShadow ( );
__declspec(implementation_key(4622)) void ChartTitle::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(4623)) _variant_t ChartTitle::GetText ( );
__declspec(implementation_key(4624)) void ChartTitle::PutText ( const _variant_t & _val );
__declspec(implementation_key(4625)) _variant_t ChartTitle::GetTop ( );
__declspec(implementation_key(4626)) void ChartTitle::PutTop ( const _variant_t & _val );
__declspec(implementation_key(4627)) _variant_t ChartTitle::GetVerticalAlignment ( );
__declspec(implementation_key(4628)) void ChartTitle::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(4629)) _variant_t AxisTitle::Application ( );
__declspec(implementation_key(4630)) _variant_t AxisTitle::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(4631)) _variant_t AxisTitle::Delete ( );
__declspec(implementation_key(4632)) _variant_t AxisTitle::Select ( );
__declspec(implementation_key(4633)) _variant_t AxisTitle::GetBorder ( );
__declspec(implementation_key(4634)) void AxisTitle::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4635)) _variant_t AxisTitle::GetCaption ( );
__declspec(implementation_key(4636)) void AxisTitle::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(4637)) _variant_t AxisTitle::GetCreator ( );
__declspec(implementation_key(4638)) void AxisTitle::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4639)) _variant_t AxisTitle::GetFont ( );
__declspec(implementation_key(4640)) void AxisTitle::PutFont ( const _variant_t & _val );
__declspec(implementation_key(4641)) _variant_t AxisTitle::GetHorizontalAlignment ( );
__declspec(implementation_key(4642)) void AxisTitle::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(4643)) _variant_t AxisTitle::GetInterior ( );
__declspec(implementation_key(4644)) void AxisTitle::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(4645)) _variant_t AxisTitle::GetLeft ( );
__declspec(implementation_key(4646)) void AxisTitle::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(4647)) _variant_t AxisTitle::GetName ( );
__declspec(implementation_key(4648)) void AxisTitle::PutName ( const _variant_t & _val );
__declspec(implementation_key(4649)) _variant_t AxisTitle::GetOrientation ( );
__declspec(implementation_key(4650)) void AxisTitle::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(4651)) _variant_t AxisTitle::GetParent ( );
__declspec(implementation_key(4652)) void AxisTitle::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4653)) _variant_t AxisTitle::GetShadow ( );
__declspec(implementation_key(4654)) void AxisTitle::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(4655)) _variant_t AxisTitle::GetText ( );
__declspec(implementation_key(4656)) void AxisTitle::PutText ( const _variant_t & _val );
__declspec(implementation_key(4657)) _variant_t AxisTitle::GetTop ( );
__declspec(implementation_key(4658)) void AxisTitle::PutTop ( const _variant_t & _val );
__declspec(implementation_key(4659)) _variant_t AxisTitle::GetVerticalAlignment ( );
__declspec(implementation_key(4660)) void AxisTitle::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(4661)) _variant_t Floor::Application ( );
__declspec(implementation_key(4662)) _variant_t Floor::ClearFormats ( );
__declspec(implementation_key(4663)) _variant_t Floor::Select ( );
__declspec(implementation_key(4664)) _variant_t Floor::GetBorder ( );
__declspec(implementation_key(4665)) void Floor::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4666)) _variant_t Floor::GetCreator ( );
__declspec(implementation_key(4667)) void Floor::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4668)) _variant_t Floor::GetInterior ( );
__declspec(implementation_key(4669)) void Floor::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(4670)) _variant_t Floor::GetName ( );
__declspec(implementation_key(4671)) void Floor::PutName ( const _variant_t & _val );
__declspec(implementation_key(4672)) _variant_t Floor::GetParent ( );
__declspec(implementation_key(4673)) void Floor::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4674)) _variant_t Walls::Application ( );
__declspec(implementation_key(4675)) _variant_t Walls::ClearFormats ( );
__declspec(implementation_key(4676)) _variant_t Walls::Select ( );
__declspec(implementation_key(4677)) _variant_t Walls::GetBorder ( );
__declspec(implementation_key(4678)) void Walls::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4679)) _variant_t Walls::GetCreator ( );
__declspec(implementation_key(4680)) void Walls::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4681)) _variant_t Walls::GetInterior ( );
__declspec(implementation_key(4682)) void Walls::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(4683)) _variant_t Walls::GetName ( );
__declspec(implementation_key(4684)) void Walls::PutName ( const _variant_t & _val );
__declspec(implementation_key(4685)) _variant_t Walls::GetParent ( );
__declspec(implementation_key(4686)) void Walls::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4687)) _variant_t PlotArea::Application ( );
__declspec(implementation_key(4688)) _variant_t PlotArea::ClearFormats ( );
__declspec(implementation_key(4689)) _variant_t PlotArea::Select ( );
__declspec(implementation_key(4690)) _variant_t PlotArea::GetBorder ( );
__declspec(implementation_key(4691)) void PlotArea::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4692)) _variant_t PlotArea::GetCreator ( );
__declspec(implementation_key(4693)) void PlotArea::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4694)) _variant_t PlotArea::GetHeight ( );
__declspec(implementation_key(4695)) void PlotArea::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(4696)) _variant_t PlotArea::GetInterior ( );
__declspec(implementation_key(4697)) void PlotArea::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(4698)) _variant_t PlotArea::GetLeft ( );
__declspec(implementation_key(4699)) void PlotArea::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(4700)) _variant_t PlotArea::GetName ( );
__declspec(implementation_key(4701)) void PlotArea::PutName ( const _variant_t & _val );
__declspec(implementation_key(4702)) _variant_t PlotArea::GetParent ( );
__declspec(implementation_key(4703)) void PlotArea::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4704)) _variant_t PlotArea::GetTop ( );
__declspec(implementation_key(4705)) void PlotArea::PutTop ( const _variant_t & _val );
__declspec(implementation_key(4706)) _variant_t PlotArea::GetWidth ( );
__declspec(implementation_key(4707)) void PlotArea::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(4708)) _variant_t ChartArea::Application ( );
__declspec(implementation_key(4709)) _variant_t ChartArea::Clear ( );
__declspec(implementation_key(4710)) _variant_t ChartArea::ClearContents ( );
__declspec(implementation_key(4711)) _variant_t ChartArea::ClearFormats ( );
__declspec(implementation_key(4712)) _variant_t ChartArea::Copy ( );
__declspec(implementation_key(4713)) _variant_t ChartArea::Select ( );
__declspec(implementation_key(4714)) _variant_t ChartArea::GetBorder ( );
__declspec(implementation_key(4715)) void ChartArea::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4716)) _variant_t ChartArea::GetCreator ( );
__declspec(implementation_key(4717)) void ChartArea::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4718)) _variant_t ChartArea::GetFont ( );
__declspec(implementation_key(4719)) void ChartArea::PutFont ( const _variant_t & _val );
__declspec(implementation_key(4720)) _variant_t ChartArea::GetHeight ( );
__declspec(implementation_key(4721)) void ChartArea::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(4722)) _variant_t ChartArea::GetInterior ( );
__declspec(implementation_key(4723)) void ChartArea::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(4724)) _variant_t ChartArea::GetLeft ( );
__declspec(implementation_key(4725)) void ChartArea::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(4726)) _variant_t ChartArea::GetName ( );
__declspec(implementation_key(4727)) void ChartArea::PutName ( const _variant_t & _val );
__declspec(implementation_key(4728)) _variant_t ChartArea::GetParent ( );
__declspec(implementation_key(4729)) void ChartArea::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4730)) _variant_t ChartArea::GetShadow ( );
__declspec(implementation_key(4731)) void ChartArea::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(4732)) _variant_t ChartArea::GetTop ( );
__declspec(implementation_key(4733)) void ChartArea::PutTop ( const _variant_t & _val );
__declspec(implementation_key(4734)) _variant_t ChartArea::GetWidth ( );
__declspec(implementation_key(4735)) void ChartArea::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(4736)) _variant_t Legend::Application ( );
__declspec(implementation_key(4737)) _variant_t Legend::Delete ( );
__declspec(implementation_key(4738)) _variant_t Legend::LegendEntries ( const _variant_t & Index );
__declspec(implementation_key(4739)) _variant_t Legend::Select ( );
__declspec(implementation_key(4740)) _variant_t Legend::GetBorder ( );
__declspec(implementation_key(4741)) void Legend::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(4742)) _variant_t Legend::GetCreator ( );
__declspec(implementation_key(4743)) void Legend::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4744)) _variant_t Legend::GetFont ( );
__declspec(implementation_key(4745)) void Legend::PutFont ( const _variant_t & _val );
__declspec(implementation_key(4746)) _variant_t Legend::GetHeight ( );
__declspec(implementation_key(4747)) void Legend::PutHeight ( const _variant_t & _val );
__declspec(implementation_key(4748)) _variant_t Legend::GetInterior ( );
__declspec(implementation_key(4749)) void Legend::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(4750)) _variant_t Legend::GetLeft ( );
__declspec(implementation_key(4751)) void Legend::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(4752)) _variant_t Legend::GetName ( );
__declspec(implementation_key(4753)) void Legend::PutName ( const _variant_t & _val );
__declspec(implementation_key(4754)) _variant_t Legend::GetParent ( );
__declspec(implementation_key(4755)) void Legend::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4756)) _variant_t Legend::GetPosition ( );
__declspec(implementation_key(4757)) void Legend::PutPosition ( const _variant_t & _val );
__declspec(implementation_key(4758)) _variant_t Legend::GetShadow ( );
__declspec(implementation_key(4759)) void Legend::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(4760)) _variant_t Legend::GetTop ( );
__declspec(implementation_key(4761)) void Legend::PutTop ( const _variant_t & _val );
__declspec(implementation_key(4762)) _variant_t Legend::GetWidth ( );
__declspec(implementation_key(4763)) void Legend::PutWidth ( const _variant_t & _val );
__declspec(implementation_key(4764)) _variant_t TickLabels::Application ( );
__declspec(implementation_key(4765)) _variant_t TickLabels::Delete ( );
__declspec(implementation_key(4766)) _variant_t TickLabels::Select ( );
__declspec(implementation_key(4767)) _variant_t TickLabels::GetCreator ( );
__declspec(implementation_key(4768)) void TickLabels::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4769)) _variant_t TickLabels::GetFont ( );
__declspec(implementation_key(4770)) void TickLabels::PutFont ( const _variant_t & _val );
__declspec(implementation_key(4771)) _variant_t TickLabels::GetName ( );
__declspec(implementation_key(4772)) void TickLabels::PutName ( const _variant_t & _val );
__declspec(implementation_key(4773)) _variant_t TickLabels::GetNumberFormat ( );
__declspec(implementation_key(4774)) void TickLabels::PutNumberFormat ( const _variant_t & _val );
__declspec(implementation_key(4775)) _variant_t TickLabels::GetNumberFormatLinked ( );
__declspec(implementation_key(4776)) void TickLabels::PutNumberFormatLinked ( const _variant_t & _val );
__declspec(implementation_key(4777)) _variant_t TickLabels::GetOrientation ( );
__declspec(implementation_key(4778)) void TickLabels::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(4779)) _variant_t TickLabels::GetParent ( );
__declspec(implementation_key(4780)) void TickLabels::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4781)) _variant_t Chart::Activate ( );
__declspec(implementation_key(4782)) _variant_t Chart::Application ( );
__declspec(implementation_key(4783)) _variant_t Chart::ApplyDataLabels ( const _variant_t & Type, const _variant_t & LegendKey );
__declspec(implementation_key(4784)) _variant_t Chart::Arcs ( const _variant_t & Index );
__declspec(implementation_key(4785)) _variant_t Chart::AreaGroups ( const _variant_t & Index );
__declspec(implementation_key(4786)) _variant_t Chart::AutoFormat ( const _variant_t & Gallery, const _variant_t & Format );
__declspec(implementation_key(4787)) _variant_t Chart::Axes ( const _variant_t & Type, const _variant_t & AxisGroup );
__declspec(implementation_key(4788)) _variant_t Chart::BarGroups ( const _variant_t & Index );
__declspec(implementation_key(4789)) _variant_t Chart::Buttons ( const _variant_t & Index );
__declspec(implementation_key(4790)) _variant_t Chart::ChartGroups ( const _variant_t & Index );
__declspec(implementation_key(4791)) _variant_t Chart::ChartObjects ( const _variant_t & Index );
__declspec(implementation_key(4792)) _variant_t Chart::ChartWizard ( const _variant_t & Source, const _variant_t & Gallery, const _variant_t & Format, const _variant_t & PlotBy, const _variant_t & CategoryLabels, const _variant_t & SeriesLabels, const _variant_t & HasLegend, const _variant_t & Title, const _variant_t & CategoryTitle, const _variant_t & ValueTitle, const _variant_t & ExtraTitle );
__declspec(implementation_key(4793)) _variant_t Chart::CheckBoxes ( const _variant_t & Index );
__declspec(implementation_key(4794)) _variant_t Chart::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest );
__declspec(implementation_key(4795)) _variant_t Chart::ColumnGroups ( const _variant_t & Index );
__declspec(implementation_key(4796)) _variant_t Chart::Copy ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4797)) _variant_t Chart::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format, const _variant_t & Size );
__declspec(implementation_key(4798)) _variant_t Chart::CreatePublisher ( const _variant_t & Edition, const _variant_t & Appearance, const _variant_t & Size, const _variant_t & ContainsPICT, const _variant_t & ContainsBIFF, const _variant_t & ContainsRTF, const _variant_t & ContainsVALU );
__declspec(implementation_key(4799)) _variant_t Chart::Delete ( );
__declspec(implementation_key(4800)) _variant_t Chart::Deselect ( );
__declspec(implementation_key(4801)) _variant_t Chart::DoughnutGroups ( const _variant_t & Index );
__declspec(implementation_key(4802)) _variant_t Chart::DrawingObjects ( const _variant_t & Index );
__declspec(implementation_key(4803)) _variant_t Chart::Drawings ( const _variant_t & Index );
__declspec(implementation_key(4804)) _variant_t Chart::DropDowns ( const _variant_t & Index );
__declspec(implementation_key(4805)) _variant_t Chart::_Evaluate ( const _variant_t & Name );
__declspec(implementation_key(4806)) _variant_t Chart::Evaluate ( const _variant_t & Name );
__declspec(implementation_key(4807)) _variant_t Chart::GroupBoxes ( const _variant_t & Index );
__declspec(implementation_key(4808)) _variant_t Chart::GroupObjects ( const _variant_t & Index );
__declspec(implementation_key(4809)) _variant_t Chart::Labels ( const _variant_t & Index );
__declspec(implementation_key(4810)) _variant_t Chart::LineGroups ( const _variant_t & Index );
__declspec(implementation_key(4811)) _variant_t Chart::Lines ( const _variant_t & Index );
__declspec(implementation_key(4812)) _variant_t Chart::ListBoxes ( const _variant_t & Index );
__declspec(implementation_key(4813)) _variant_t Chart::Move ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4814)) _variant_t Chart::OLEObjects ( const _variant_t & Index );
__declspec(implementation_key(4815)) _variant_t Chart::OptionButtons ( const _variant_t & Index );
__declspec(implementation_key(4816)) _variant_t Chart::Ovals ( const _variant_t & Index );
__declspec(implementation_key(4817)) _variant_t Chart::Paste ( const _variant_t & Type );
__declspec(implementation_key(4818)) _variant_t Chart::Pictures ( const _variant_t & Index );
__declspec(implementation_key(4819)) _variant_t Chart::PieGroups ( const _variant_t & Index );
__declspec(implementation_key(4820)) _variant_t Chart::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(4821)) _variant_t Chart::PrintPreview ( );
__declspec(implementation_key(4822)) _variant_t Chart::Protect ( const _variant_t & Password, const _variant_t & DrawingObjects, const _variant_t & Contents, const _variant_t & Scenarios, const _variant_t & UserInterfaceOnly );
__declspec(implementation_key(4823)) _variant_t Chart::RadarGroups ( const _variant_t & Index );
__declspec(implementation_key(4824)) _variant_t Chart::Rectangles ( const _variant_t & Index );
__declspec(implementation_key(4825)) _variant_t Chart::SaveAs ( const _variant_t & Filename, const _variant_t & FileFormat, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ReadOnlyRecommended, const _variant_t & CreateBackup );
__declspec(implementation_key(4826)) _variant_t Chart::ScrollBars ( const _variant_t & Index );
__declspec(implementation_key(4827)) _variant_t Chart::Select ( const _variant_t & Replace );
__declspec(implementation_key(4828)) _variant_t Chart::SeriesCollection ( const _variant_t & Index );
__declspec(implementation_key(4829)) _variant_t Chart::SetBackgroundPicture ( const _variant_t & Filename );
__declspec(implementation_key(4830)) _variant_t Chart::Spinners ( const _variant_t & Index );
__declspec(implementation_key(4831)) _variant_t Chart::TextBoxes ( const _variant_t & Index );
__declspec(implementation_key(4832)) _variant_t Chart::Unprotect ( const _variant_t & Password );
__declspec(implementation_key(4833)) _variant_t Chart::XYGroups ( const _variant_t & Index );
__declspec(implementation_key(4834)) _variant_t Chart::GetArea3DGroup ( );
__declspec(implementation_key(4835)) void Chart::PutArea3DGroup ( const _variant_t & _val );
__declspec(implementation_key(4836)) _variant_t Chart::GetAutoScaling ( );
__declspec(implementation_key(4837)) void Chart::PutAutoScaling ( const _variant_t & _val );
__declspec(implementation_key(4838)) _variant_t Chart::GetBar3DGroup ( );
__declspec(implementation_key(4839)) void Chart::PutBar3DGroup ( const _variant_t & _val );
__declspec(implementation_key(4840)) _variant_t Chart::GetChartArea ( );
__declspec(implementation_key(4841)) void Chart::PutChartArea ( const _variant_t & _val );
__declspec(implementation_key(4842)) _variant_t Chart::GetChartTitle ( );
__declspec(implementation_key(4843)) void Chart::PutChartTitle ( const _variant_t & _val );
__declspec(implementation_key(4844)) _variant_t Chart::GetColumn3DGroup ( );
__declspec(implementation_key(4845)) void Chart::PutColumn3DGroup ( const _variant_t & _val );
__declspec(implementation_key(4846)) _variant_t Chart::GetCorners ( );
__declspec(implementation_key(4847)) void Chart::PutCorners ( const _variant_t & _val );
__declspec(implementation_key(4848)) _variant_t Chart::GetCreator ( );
__declspec(implementation_key(4849)) void Chart::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4850)) _variant_t Chart::GetDepthPercent ( );
__declspec(implementation_key(4851)) void Chart::PutDepthPercent ( const _variant_t & _val );
__declspec(implementation_key(4852)) _variant_t Chart::GetDisplayBlanksAs ( );
__declspec(implementation_key(4853)) void Chart::PutDisplayBlanksAs ( const _variant_t & _val );
__declspec(implementation_key(4854)) _variant_t Chart::GetElevation ( );
__declspec(implementation_key(4855)) void Chart::PutElevation ( const _variant_t & _val );
__declspec(implementation_key(4856)) _variant_t Chart::GetFloor ( );
__declspec(implementation_key(4857)) void Chart::PutFloor ( const _variant_t & _val );
__declspec(implementation_key(4858)) _variant_t Chart::GetGapDepth ( );
__declspec(implementation_key(4859)) void Chart::PutGapDepth ( const _variant_t & _val );
__declspec(implementation_key(4860)) _variant_t Chart::GetHasAxis ( );
__declspec(implementation_key(4861)) void Chart::PutHasAxis ( const _variant_t & _val );
__declspec(implementation_key(4862)) _variant_t Chart::GetHasLegend ( );
__declspec(implementation_key(4863)) void Chart::PutHasLegend ( const _variant_t & _val );
__declspec(implementation_key(4864)) _variant_t Chart::GetHasTitle ( );
__declspec(implementation_key(4865)) void Chart::PutHasTitle ( const _variant_t & _val );
__declspec(implementation_key(4866)) _variant_t Chart::GetHeightPercent ( );
__declspec(implementation_key(4867)) void Chart::PutHeightPercent ( const _variant_t & _val );
__declspec(implementation_key(4868)) _variant_t Chart::GetIndex ( );
__declspec(implementation_key(4869)) void Chart::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(4870)) _variant_t Chart::GetLegend ( );
__declspec(implementation_key(4871)) void Chart::PutLegend ( const _variant_t & _val );
__declspec(implementation_key(4872)) _variant_t Chart::GetLine3DGroup ( );
__declspec(implementation_key(4873)) void Chart::PutLine3DGroup ( const _variant_t & _val );
__declspec(implementation_key(4874)) _variant_t Chart::GetName ( );
__declspec(implementation_key(4875)) void Chart::PutName ( const _variant_t & _val );
__declspec(implementation_key(4876)) _variant_t Chart::GetNext ( );
__declspec(implementation_key(4877)) void Chart::PutNext ( const _variant_t & _val );
__declspec(implementation_key(4878)) _variant_t Chart::GetOnDoubleClick ( );
__declspec(implementation_key(4879)) void Chart::PutOnDoubleClick ( const _variant_t & _val );
__declspec(implementation_key(4880)) _variant_t Chart::GetOnSheetActivate ( );
__declspec(implementation_key(4881)) void Chart::PutOnSheetActivate ( const _variant_t & _val );
__declspec(implementation_key(4882)) _variant_t Chart::GetOnSheetDeactivate ( );
__declspec(implementation_key(4883)) void Chart::PutOnSheetDeactivate ( const _variant_t & _val );
__declspec(implementation_key(4884)) _variant_t Chart::GetPageSetup ( );
__declspec(implementation_key(4885)) void Chart::PutPageSetup ( const _variant_t & _val );
__declspec(implementation_key(4886)) _variant_t Chart::GetParent ( );
__declspec(implementation_key(4887)) void Chart::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4888)) _variant_t Chart::GetPerspective ( );
__declspec(implementation_key(4889)) void Chart::PutPerspective ( const _variant_t & _val );
__declspec(implementation_key(4890)) _variant_t Chart::GetPie3DGroup ( );
__declspec(implementation_key(4891)) void Chart::PutPie3DGroup ( const _variant_t & _val );
__declspec(implementation_key(4892)) _variant_t Chart::GetPlotArea ( );
__declspec(implementation_key(4893)) void Chart::PutPlotArea ( const _variant_t & _val );
__declspec(implementation_key(4894)) _variant_t Chart::GetPlotVisibleOnly ( );
__declspec(implementation_key(4895)) void Chart::PutPlotVisibleOnly ( const _variant_t & _val );
__declspec(implementation_key(4896)) _variant_t Chart::GetPrevious ( );
__declspec(implementation_key(4897)) void Chart::PutPrevious ( const _variant_t & _val );
__declspec(implementation_key(4898)) _variant_t Chart::GetProtectContents ( );
__declspec(implementation_key(4899)) void Chart::PutProtectContents ( const _variant_t & _val );
__declspec(implementation_key(4900)) _variant_t Chart::GetProtectDrawingObjects ( );
__declspec(implementation_key(4901)) void Chart::PutProtectDrawingObjects ( const _variant_t & _val );
__declspec(implementation_key(4902)) _variant_t Chart::GetProtectionMode ( );
__declspec(implementation_key(4903)) void Chart::PutProtectionMode ( const _variant_t & _val );
__declspec(implementation_key(4904)) _variant_t Chart::GetRightAngleAxes ( );
__declspec(implementation_key(4905)) void Chart::PutRightAngleAxes ( const _variant_t & _val );
__declspec(implementation_key(4906)) _variant_t Chart::GetRotation ( );
__declspec(implementation_key(4907)) void Chart::PutRotation ( const _variant_t & _val );
__declspec(implementation_key(4908)) _variant_t Chart::GetSizeWithWindow ( );
__declspec(implementation_key(4909)) void Chart::PutSizeWithWindow ( const _variant_t & _val );
__declspec(implementation_key(4910)) _variant_t Chart::GetSubType ( );
__declspec(implementation_key(4911)) void Chart::PutSubType ( const _variant_t & _val );
__declspec(implementation_key(4912)) _variant_t Chart::GetSurfaceGroup ( );
__declspec(implementation_key(4913)) void Chart::PutSurfaceGroup ( const _variant_t & _val );
__declspec(implementation_key(4914)) _variant_t Chart::GetType ( );
__declspec(implementation_key(4915)) void Chart::PutType ( const _variant_t & _val );
__declspec(implementation_key(4916)) _variant_t Chart::GetVisible ( );
__declspec(implementation_key(4917)) void Chart::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(4918)) _variant_t Chart::GetWalls ( );
__declspec(implementation_key(4919)) void Chart::PutWalls ( const _variant_t & _val );
__declspec(implementation_key(4920)) _variant_t Chart::GetWallsAndGridlines2D ( );
__declspec(implementation_key(4921)) void Chart::PutWallsAndGridlines2D ( const _variant_t & _val );
__declspec(implementation_key(4922)) _variant_t Charts::_NewEnum ( );
__declspec(implementation_key(4923)) _variant_t Charts::Add ( const _variant_t & Before, const _variant_t & After, const _variant_t & Count );
__declspec(implementation_key(4924)) _variant_t Charts::Application ( );
__declspec(implementation_key(4925)) _variant_t Charts::Copy ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4926)) _variant_t Charts::Delete ( );
__declspec(implementation_key(4927)) _variant_t Charts::Item ( const _variant_t & Index );
__declspec(implementation_key(4928)) _variant_t Charts::Move ( const _variant_t & Before, const _variant_t & After );
__declspec(implementation_key(4929)) _variant_t Charts::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate );
__declspec(implementation_key(4930)) _variant_t Charts::PrintPreview ( );
__declspec(implementation_key(4931)) _variant_t Charts::Select ( const _variant_t & Replace );
__declspec(implementation_key(4932)) _variant_t Charts::GetCount ( );
__declspec(implementation_key(4933)) void Charts::PutCount ( const _variant_t & _val );
__declspec(implementation_key(4934)) _variant_t Charts::GetCreator ( );
__declspec(implementation_key(4935)) void Charts::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4936)) _variant_t Charts::GetParent ( );
__declspec(implementation_key(4937)) void Charts::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4938)) _variant_t Charts::GetVisible ( );
__declspec(implementation_key(4939)) void Charts::PutVisible ( const _variant_t & _val );
__declspec(implementation_key(4940)) _variant_t ChartGroup::Application ( );
__declspec(implementation_key(4941)) _variant_t ChartGroup::SeriesCollection ( const _variant_t & Index );
__declspec(implementation_key(4942)) _variant_t ChartGroup::GetAxisGroup ( );
__declspec(implementation_key(4943)) void ChartGroup::PutAxisGroup ( const _variant_t & _val );
__declspec(implementation_key(4944)) _variant_t ChartGroup::GetCreator ( );
__declspec(implementation_key(4945)) void ChartGroup::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4946)) _variant_t ChartGroup::GetDoughnutHoleSize ( );
__declspec(implementation_key(4947)) void ChartGroup::PutDoughnutHoleSize ( const _variant_t & _val );
__declspec(implementation_key(4948)) _variant_t ChartGroup::GetDownBars ( );
__declspec(implementation_key(4949)) void ChartGroup::PutDownBars ( const _variant_t & _val );
__declspec(implementation_key(4950)) _variant_t ChartGroup::GetDropLines ( );
__declspec(implementation_key(4951)) void ChartGroup::PutDropLines ( const _variant_t & _val );
__declspec(implementation_key(4952)) _variant_t ChartGroup::GetFirstSliceAngle ( );
__declspec(implementation_key(4953)) void ChartGroup::PutFirstSliceAngle ( const _variant_t & _val );
__declspec(implementation_key(4954)) _variant_t ChartGroup::GetGapWidth ( );
__declspec(implementation_key(4955)) void ChartGroup::PutGapWidth ( const _variant_t & _val );
__declspec(implementation_key(4956)) _variant_t ChartGroup::GetHasDropLines ( );
__declspec(implementation_key(4957)) void ChartGroup::PutHasDropLines ( const _variant_t & _val );
__declspec(implementation_key(4958)) _variant_t ChartGroup::GetHasHiLoLines ( );
__declspec(implementation_key(4959)) void ChartGroup::PutHasHiLoLines ( const _variant_t & _val );
__declspec(implementation_key(4960)) _variant_t ChartGroup::GetHasRadarAxisLabels ( );
__declspec(implementation_key(4961)) void ChartGroup::PutHasRadarAxisLabels ( const _variant_t & _val );
__declspec(implementation_key(4962)) _variant_t ChartGroup::GetHasSeriesLines ( );
__declspec(implementation_key(4963)) void ChartGroup::PutHasSeriesLines ( const _variant_t & _val );
__declspec(implementation_key(4964)) _variant_t ChartGroup::GetHasUpDownBars ( );
__declspec(implementation_key(4965)) void ChartGroup::PutHasUpDownBars ( const _variant_t & _val );
__declspec(implementation_key(4966)) _variant_t ChartGroup::GetHiLoLines ( );
__declspec(implementation_key(4967)) void ChartGroup::PutHiLoLines ( const _variant_t & _val );
__declspec(implementation_key(4968)) _variant_t ChartGroup::GetOverlap ( );
__declspec(implementation_key(4969)) void ChartGroup::PutOverlap ( const _variant_t & _val );
__declspec(implementation_key(4970)) _variant_t ChartGroup::GetParent ( );
__declspec(implementation_key(4971)) void ChartGroup::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4972)) _variant_t ChartGroup::GetRadarAxisLabels ( );
__declspec(implementation_key(4973)) void ChartGroup::PutRadarAxisLabels ( const _variant_t & _val );
__declspec(implementation_key(4974)) _variant_t ChartGroup::GetSeriesLines ( );
__declspec(implementation_key(4975)) void ChartGroup::PutSeriesLines ( const _variant_t & _val );
__declspec(implementation_key(4976)) _variant_t ChartGroup::GetSubType ( );
__declspec(implementation_key(4977)) void ChartGroup::PutSubType ( const _variant_t & _val );
__declspec(implementation_key(4978)) _variant_t ChartGroup::GetType ( );
__declspec(implementation_key(4979)) void ChartGroup::PutType ( const _variant_t & _val );
__declspec(implementation_key(4980)) _variant_t ChartGroup::GetUpBars ( );
__declspec(implementation_key(4981)) void ChartGroup::PutUpBars ( const _variant_t & _val );
__declspec(implementation_key(4982)) _variant_t ChartGroup::GetVaryByCategories ( );
__declspec(implementation_key(4983)) void ChartGroup::PutVaryByCategories ( const _variant_t & _val );
__declspec(implementation_key(4984)) _variant_t ChartGroups::_NewEnum ( );
__declspec(implementation_key(4985)) _variant_t ChartGroups::Application ( );
__declspec(implementation_key(4986)) _variant_t ChartGroups::Item ( const _variant_t & Index );
__declspec(implementation_key(4987)) _variant_t ChartGroups::GetCount ( );
__declspec(implementation_key(4988)) void ChartGroups::PutCount ( const _variant_t & _val );
__declspec(implementation_key(4989)) _variant_t ChartGroups::GetCreator ( );
__declspec(implementation_key(4990)) void ChartGroups::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(4991)) _variant_t ChartGroups::GetParent ( );
__declspec(implementation_key(4992)) void ChartGroups::PutParent ( const _variant_t & _val );
__declspec(implementation_key(4993)) _variant_t Axis::Application ( );
__declspec(implementation_key(4994)) _variant_t Axis::Delete ( );
__declspec(implementation_key(4995)) _variant_t Axis::Select ( );
__declspec(implementation_key(4996)) _variant_t Axis::GetAxisBetweenCategories ( );
__declspec(implementation_key(4997)) void Axis::PutAxisBetweenCategories ( const _variant_t & _val );
__declspec(implementation_key(4998)) _variant_t Axis::GetAxisGroup ( );
__declspec(implementation_key(4999)) void Axis::PutAxisGroup ( const _variant_t & _val );
__declspec(implementation_key(5000)) _variant_t Axis::GetAxisTitle ( );
__declspec(implementation_key(5001)) void Axis::PutAxisTitle ( const _variant_t & _val );
__declspec(implementation_key(5002)) _variant_t Axis::GetBorder ( );
__declspec(implementation_key(5003)) void Axis::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(5004)) _variant_t Axis::GetCategoryNames ( );
__declspec(implementation_key(5005)) void Axis::PutCategoryNames ( const _variant_t & _val );
__declspec(implementation_key(5006)) _variant_t Axis::GetCreator ( );
__declspec(implementation_key(5007)) void Axis::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5008)) _variant_t Axis::GetCrosses ( );
__declspec(implementation_key(5009)) void Axis::PutCrosses ( const _variant_t & _val );
__declspec(implementation_key(5010)) _variant_t Axis::GetCrossesAt ( );
__declspec(implementation_key(5011)) void Axis::PutCrossesAt ( const _variant_t & _val );
__declspec(implementation_key(5012)) _variant_t Axis::GetHasMajorGridlines ( );
__declspec(implementation_key(5013)) void Axis::PutHasMajorGridlines ( const _variant_t & _val );
__declspec(implementation_key(5014)) _variant_t Axis::GetHasMinorGridlines ( );
__declspec(implementation_key(5015)) void Axis::PutHasMinorGridlines ( const _variant_t & _val );
__declspec(implementation_key(5016)) _variant_t Axis::GetHasTitle ( );
__declspec(implementation_key(5017)) void Axis::PutHasTitle ( const _variant_t & _val );
__declspec(implementation_key(5018)) _variant_t Axis::GetMajorGridlines ( );
__declspec(implementation_key(5019)) void Axis::PutMajorGridlines ( const _variant_t & _val );
__declspec(implementation_key(5020)) _variant_t Axis::GetMajorTickMark ( );
__declspec(implementation_key(5021)) void Axis::PutMajorTickMark ( const _variant_t & _val );
__declspec(implementation_key(5022)) _variant_t Axis::GetMajorUnit ( );
__declspec(implementation_key(5023)) void Axis::PutMajorUnit ( const _variant_t & _val );
__declspec(implementation_key(5024)) _variant_t Axis::GetMajorUnitIsAuto ( );
__declspec(implementation_key(5025)) void Axis::PutMajorUnitIsAuto ( const _variant_t & _val );
__declspec(implementation_key(5026)) _variant_t Axis::GetMaximumScale ( );
__declspec(implementation_key(5027)) void Axis::PutMaximumScale ( const _variant_t & _val );
__declspec(implementation_key(5028)) _variant_t Axis::GetMaximumScaleIsAuto ( );
__declspec(implementation_key(5029)) void Axis::PutMaximumScaleIsAuto ( const _variant_t & _val );
__declspec(implementation_key(5030)) _variant_t Axis::GetMinimumScale ( );
__declspec(implementation_key(5031)) void Axis::PutMinimumScale ( const _variant_t & _val );
__declspec(implementation_key(5032)) _variant_t Axis::GetMinimumScaleIsAuto ( );
__declspec(implementation_key(5033)) void Axis::PutMinimumScaleIsAuto ( const _variant_t & _val );
__declspec(implementation_key(5034)) _variant_t Axis::GetMinorGridlines ( );
__declspec(implementation_key(5035)) void Axis::PutMinorGridlines ( const _variant_t & _val );
__declspec(implementation_key(5036)) _variant_t Axis::GetMinorTickMark ( );
__declspec(implementation_key(5037)) void Axis::PutMinorTickMark ( const _variant_t & _val );
__declspec(implementation_key(5038)) _variant_t Axis::GetMinorUnit ( );
__declspec(implementation_key(5039)) void Axis::PutMinorUnit ( const _variant_t & _val );
__declspec(implementation_key(5040)) _variant_t Axis::GetMinorUnitIsAuto ( );
__declspec(implementation_key(5041)) void Axis::PutMinorUnitIsAuto ( const _variant_t & _val );
__declspec(implementation_key(5042)) _variant_t Axis::GetParent ( );
__declspec(implementation_key(5043)) void Axis::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5044)) _variant_t Axis::GetReversePlotOrder ( );
__declspec(implementation_key(5045)) void Axis::PutReversePlotOrder ( const _variant_t & _val );
__declspec(implementation_key(5046)) _variant_t Axis::GetScaleType ( );
__declspec(implementation_key(5047)) void Axis::PutScaleType ( const _variant_t & _val );
__declspec(implementation_key(5048)) _variant_t Axis::GetTickLabelPosition ( );
__declspec(implementation_key(5049)) void Axis::PutTickLabelPosition ( const _variant_t & _val );
__declspec(implementation_key(5050)) _variant_t Axis::GetTickLabels ( );
__declspec(implementation_key(5051)) void Axis::PutTickLabels ( const _variant_t & _val );
__declspec(implementation_key(5052)) _variant_t Axis::GetTickLabelSpacing ( );
__declspec(implementation_key(5053)) void Axis::PutTickLabelSpacing ( const _variant_t & _val );
__declspec(implementation_key(5054)) _variant_t Axis::GetTickMarkSpacing ( );
__declspec(implementation_key(5055)) void Axis::PutTickMarkSpacing ( const _variant_t & _val );
__declspec(implementation_key(5056)) _variant_t Axis::GetType ( );
__declspec(implementation_key(5057)) void Axis::PutType ( const _variant_t & _val );
__declspec(implementation_key(5058)) _variant_t Axes::_NewEnum ( );
__declspec(implementation_key(5059)) _variant_t Axes::Application ( );
__declspec(implementation_key(5060)) _variant_t Axes::Item ( const _variant_t & Type, const _variant_t & AxisGroup );
__declspec(implementation_key(5061)) _variant_t Axes::GetCount ( );
__declspec(implementation_key(5062)) void Axes::PutCount ( const _variant_t & _val );
__declspec(implementation_key(5063)) _variant_t Axes::GetCreator ( );
__declspec(implementation_key(5064)) void Axes::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5065)) _variant_t Axes::GetParent ( );
__declspec(implementation_key(5066)) void Axes::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5067)) _variant_t DataLabel::Application ( );
__declspec(implementation_key(5068)) _variant_t DataLabel::Characters ( const _variant_t & Start, const _variant_t & Length );
__declspec(implementation_key(5069)) _variant_t DataLabel::Delete ( );
__declspec(implementation_key(5070)) _variant_t DataLabel::Select ( );
__declspec(implementation_key(5071)) _variant_t DataLabel::GetAutoText ( );
__declspec(implementation_key(5072)) void DataLabel::PutAutoText ( const _variant_t & _val );
__declspec(implementation_key(5073)) _variant_t DataLabel::GetBorder ( );
__declspec(implementation_key(5074)) void DataLabel::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(5075)) _variant_t DataLabel::GetCaption ( );
__declspec(implementation_key(5076)) void DataLabel::PutCaption ( const _variant_t & _val );
__declspec(implementation_key(5077)) _variant_t DataLabel::GetCreator ( );
__declspec(implementation_key(5078)) void DataLabel::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5079)) _variant_t DataLabel::GetFont ( );
__declspec(implementation_key(5080)) void DataLabel::PutFont ( const _variant_t & _val );
__declspec(implementation_key(5081)) _variant_t DataLabel::GetHorizontalAlignment ( );
__declspec(implementation_key(5082)) void DataLabel::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(5083)) _variant_t DataLabel::GetInterior ( );
__declspec(implementation_key(5084)) void DataLabel::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(5085)) _variant_t DataLabel::GetLeft ( );
__declspec(implementation_key(5086)) void DataLabel::PutLeft ( const _variant_t & _val );
__declspec(implementation_key(5087)) _variant_t DataLabel::GetName ( );
__declspec(implementation_key(5088)) void DataLabel::PutName ( const _variant_t & _val );
__declspec(implementation_key(5089)) _variant_t DataLabel::GetNumberFormat ( );
__declspec(implementation_key(5090)) void DataLabel::PutNumberFormat ( const _variant_t & _val );
__declspec(implementation_key(5091)) _variant_t DataLabel::GetNumberFormatLinked ( );
__declspec(implementation_key(5092)) void DataLabel::PutNumberFormatLinked ( const _variant_t & _val );
__declspec(implementation_key(5093)) _variant_t DataLabel::GetOrientation ( );
__declspec(implementation_key(5094)) void DataLabel::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(5095)) _variant_t DataLabel::GetParent ( );
__declspec(implementation_key(5096)) void DataLabel::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5097)) _variant_t DataLabel::GetShadow ( );
__declspec(implementation_key(5098)) void DataLabel::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(5099)) _variant_t DataLabel::GetShowLegendKey ( );
__declspec(implementation_key(5100)) void DataLabel::PutShowLegendKey ( const _variant_t & _val );
__declspec(implementation_key(5101)) _variant_t DataLabel::GetText ( );
__declspec(implementation_key(5102)) void DataLabel::PutText ( const _variant_t & _val );
__declspec(implementation_key(5103)) _variant_t DataLabel::GetTop ( );
__declspec(implementation_key(5104)) void DataLabel::PutTop ( const _variant_t & _val );
__declspec(implementation_key(5105)) _variant_t DataLabel::GetType ( );
__declspec(implementation_key(5106)) void DataLabel::PutType ( const _variant_t & _val );
__declspec(implementation_key(5107)) _variant_t DataLabel::GetVerticalAlignment ( );
__declspec(implementation_key(5108)) void DataLabel::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(5109)) _variant_t DataLabels::_NewEnum ( );
__declspec(implementation_key(5110)) _variant_t DataLabels::Application ( );
__declspec(implementation_key(5111)) _variant_t DataLabels::Delete ( );
__declspec(implementation_key(5112)) _variant_t DataLabels::Item ( const _variant_t & Index );
__declspec(implementation_key(5113)) _variant_t DataLabels::Select ( );
__declspec(implementation_key(5114)) _variant_t DataLabels::GetAutoText ( );
__declspec(implementation_key(5115)) void DataLabels::PutAutoText ( const _variant_t & _val );
__declspec(implementation_key(5116)) _variant_t DataLabels::GetBorder ( );
__declspec(implementation_key(5117)) void DataLabels::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(5118)) _variant_t DataLabels::GetCount ( );
__declspec(implementation_key(5119)) void DataLabels::PutCount ( const _variant_t & _val );
__declspec(implementation_key(5120)) _variant_t DataLabels::GetCreator ( );
__declspec(implementation_key(5121)) void DataLabels::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5122)) _variant_t DataLabels::GetFont ( );
__declspec(implementation_key(5123)) void DataLabels::PutFont ( const _variant_t & _val );
__declspec(implementation_key(5124)) _variant_t DataLabels::GetHorizontalAlignment ( );
__declspec(implementation_key(5125)) void DataLabels::PutHorizontalAlignment ( const _variant_t & _val );
__declspec(implementation_key(5126)) _variant_t DataLabels::GetInterior ( );
__declspec(implementation_key(5127)) void DataLabels::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(5128)) _variant_t DataLabels::GetName ( );
__declspec(implementation_key(5129)) void DataLabels::PutName ( const _variant_t & _val );
__declspec(implementation_key(5130)) _variant_t DataLabels::GetNumberFormat ( );
__declspec(implementation_key(5131)) void DataLabels::PutNumberFormat ( const _variant_t & _val );
__declspec(implementation_key(5132)) _variant_t DataLabels::GetNumberFormatLinked ( );
__declspec(implementation_key(5133)) void DataLabels::PutNumberFormatLinked ( const _variant_t & _val );
__declspec(implementation_key(5134)) _variant_t DataLabels::GetOrientation ( );
__declspec(implementation_key(5135)) void DataLabels::PutOrientation ( const _variant_t & _val );
__declspec(implementation_key(5136)) _variant_t DataLabels::GetParent ( );
__declspec(implementation_key(5137)) void DataLabels::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5138)) _variant_t DataLabels::GetShadow ( );
__declspec(implementation_key(5139)) void DataLabels::PutShadow ( const _variant_t & _val );
__declspec(implementation_key(5140)) _variant_t DataLabels::GetShowLegendKey ( );
__declspec(implementation_key(5141)) void DataLabels::PutShowLegendKey ( const _variant_t & _val );
__declspec(implementation_key(5142)) _variant_t DataLabels::GetType ( );
__declspec(implementation_key(5143)) void DataLabels::PutType ( const _variant_t & _val );
__declspec(implementation_key(5144)) _variant_t DataLabels::GetVerticalAlignment ( );
__declspec(implementation_key(5145)) void DataLabels::PutVerticalAlignment ( const _variant_t & _val );
__declspec(implementation_key(5146)) _variant_t Point::Application ( );
__declspec(implementation_key(5147)) _variant_t Point::ApplyDataLabels ( const _variant_t & Type, const _variant_t & LegendKey );
__declspec(implementation_key(5148)) _variant_t Point::ClearFormats ( );
__declspec(implementation_key(5149)) _variant_t Point::Copy ( );
__declspec(implementation_key(5150)) _variant_t Point::Delete ( );
__declspec(implementation_key(5151)) _variant_t Point::Paste ( );
__declspec(implementation_key(5152)) _variant_t Point::Select ( );
__declspec(implementation_key(5153)) _variant_t Point::GetBorder ( );
__declspec(implementation_key(5154)) void Point::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(5155)) _variant_t Point::GetCreator ( );
__declspec(implementation_key(5156)) void Point::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5157)) _variant_t Point::GetDataLabel ( );
__declspec(implementation_key(5158)) void Point::PutDataLabel ( const _variant_t & _val );
__declspec(implementation_key(5159)) _variant_t Point::GetExplosion ( );
__declspec(implementation_key(5160)) void Point::PutExplosion ( const _variant_t & _val );
__declspec(implementation_key(5161)) _variant_t Point::GetHasDataLabel ( );
__declspec(implementation_key(5162)) void Point::PutHasDataLabel ( const _variant_t & _val );
__declspec(implementation_key(5163)) _variant_t Point::GetInterior ( );
__declspec(implementation_key(5164)) void Point::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(5165)) _variant_t Point::GetInvertIfNegative ( );
__declspec(implementation_key(5166)) void Point::PutInvertIfNegative ( const _variant_t & _val );
__declspec(implementation_key(5167)) _variant_t Point::GetMarkerBackgroundColor ( );
__declspec(implementation_key(5168)) void Point::PutMarkerBackgroundColor ( const _variant_t & _val );
__declspec(implementation_key(5169)) _variant_t Point::GetMarkerBackgroundColorIndex ( );
__declspec(implementation_key(5170)) void Point::PutMarkerBackgroundColorIndex ( const _variant_t & _val );
__declspec(implementation_key(5171)) _variant_t Point::GetMarkerForegroundColor ( );
__declspec(implementation_key(5172)) void Point::PutMarkerForegroundColor ( const _variant_t & _val );
__declspec(implementation_key(5173)) _variant_t Point::GetMarkerForegroundColorIndex ( );
__declspec(implementation_key(5174)) void Point::PutMarkerForegroundColorIndex ( const _variant_t & _val );
__declspec(implementation_key(5175)) _variant_t Point::GetMarkerStyle ( );
__declspec(implementation_key(5176)) void Point::PutMarkerStyle ( const _variant_t & _val );
__declspec(implementation_key(5177)) _variant_t Point::GetParent ( );
__declspec(implementation_key(5178)) void Point::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5179)) _variant_t Point::GetPictureType ( );
__declspec(implementation_key(5180)) void Point::PutPictureType ( const _variant_t & _val );
__declspec(implementation_key(5181)) _variant_t Point::GetPictureUnit ( );
__declspec(implementation_key(5182)) void Point::PutPictureUnit ( const _variant_t & _val );
__declspec(implementation_key(5183)) _variant_t Points::_NewEnum ( );
__declspec(implementation_key(5184)) _variant_t Points::Application ( );
__declspec(implementation_key(5185)) _variant_t Points::Item ( const _variant_t & Index );
__declspec(implementation_key(5186)) _variant_t Points::GetCount ( );
__declspec(implementation_key(5187)) void Points::PutCount ( const _variant_t & _val );
__declspec(implementation_key(5188)) _variant_t Points::GetCreator ( );
__declspec(implementation_key(5189)) void Points::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5190)) _variant_t Points::GetParent ( );
__declspec(implementation_key(5191)) void Points::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5192)) _variant_t Series::Application ( );
__declspec(implementation_key(5193)) _variant_t Series::ApplyDataLabels ( const _variant_t & Type, const _variant_t & LegendKey );
__declspec(implementation_key(5194)) _variant_t Series::ClearFormats ( );
__declspec(implementation_key(5195)) _variant_t Series::Copy ( );
__declspec(implementation_key(5196)) _variant_t Series::DataLabels ( const _variant_t & Index );
__declspec(implementation_key(5197)) _variant_t Series::Delete ( );
__declspec(implementation_key(5198)) _variant_t Series::ErrorBar ( const _variant_t & Direction, const _variant_t & Include, const _variant_t & Type, const _variant_t & Amount, const _variant_t & MinusValues );
__declspec(implementation_key(5199)) _variant_t Series::Paste ( );
__declspec(implementation_key(5200)) _variant_t Series::Points ( const _variant_t & Index );
__declspec(implementation_key(5201)) _variant_t Series::Select ( );
__declspec(implementation_key(5202)) _variant_t Series::Trendlines ( const _variant_t & Index );
__declspec(implementation_key(5203)) _variant_t Series::GetAxisGroup ( );
__declspec(implementation_key(5204)) void Series::PutAxisGroup ( const _variant_t & _val );
__declspec(implementation_key(5205)) _variant_t Series::GetBorder ( );
__declspec(implementation_key(5206)) void Series::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(5207)) _variant_t Series::GetCreator ( );
__declspec(implementation_key(5208)) void Series::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5209)) _variant_t Series::GetErrorBars ( );
__declspec(implementation_key(5210)) void Series::PutErrorBars ( const _variant_t & _val );
__declspec(implementation_key(5211)) _variant_t Series::GetExplosion ( );
__declspec(implementation_key(5212)) void Series::PutExplosion ( const _variant_t & _val );
__declspec(implementation_key(5213)) _variant_t Series::GetFormula ( );
__declspec(implementation_key(5214)) void Series::PutFormula ( const _variant_t & _val );
__declspec(implementation_key(5215)) _variant_t Series::GetFormulaLocal ( );
__declspec(implementation_key(5216)) void Series::PutFormulaLocal ( const _variant_t & _val );
__declspec(implementation_key(5217)) _variant_t Series::GetFormulaR1C1 ( );
__declspec(implementation_key(5218)) void Series::PutFormulaR1C1 ( const _variant_t & _val );
__declspec(implementation_key(5219)) _variant_t Series::GetFormulaR1C1Local ( );
__declspec(implementation_key(5220)) void Series::PutFormulaR1C1Local ( const _variant_t & _val );
__declspec(implementation_key(5221)) _variant_t Series::GetHasDataLabels ( );
__declspec(implementation_key(5222)) void Series::PutHasDataLabels ( const _variant_t & _val );
__declspec(implementation_key(5223)) _variant_t Series::GetHasErrorBars ( );
__declspec(implementation_key(5224)) void Series::PutHasErrorBars ( const _variant_t & _val );
__declspec(implementation_key(5225)) _variant_t Series::GetInterior ( );
__declspec(implementation_key(5226)) void Series::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(5227)) _variant_t Series::GetInvertIfNegative ( );
__declspec(implementation_key(5228)) void Series::PutInvertIfNegative ( const _variant_t & _val );
__declspec(implementation_key(5229)) _variant_t Series::GetMarkerBackgroundColor ( );
__declspec(implementation_key(5230)) void Series::PutMarkerBackgroundColor ( const _variant_t & _val );
__declspec(implementation_key(5231)) _variant_t Series::GetMarkerBackgroundColorIndex ( );
__declspec(implementation_key(5232)) void Series::PutMarkerBackgroundColorIndex ( const _variant_t & _val );
__declspec(implementation_key(5233)) _variant_t Series::GetMarkerForegroundColor ( );
__declspec(implementation_key(5234)) void Series::PutMarkerForegroundColor ( const _variant_t & _val );
__declspec(implementation_key(5235)) _variant_t Series::GetMarkerForegroundColorIndex ( );
__declspec(implementation_key(5236)) void Series::PutMarkerForegroundColorIndex ( const _variant_t & _val );
__declspec(implementation_key(5237)) _variant_t Series::GetMarkerStyle ( );
__declspec(implementation_key(5238)) void Series::PutMarkerStyle ( const _variant_t & _val );
__declspec(implementation_key(5239)) _variant_t Series::GetName ( );
__declspec(implementation_key(5240)) void Series::PutName ( const _variant_t & _val );
__declspec(implementation_key(5241)) _variant_t Series::GetParent ( );
__declspec(implementation_key(5242)) void Series::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5243)) _variant_t Series::GetPictureType ( );
__declspec(implementation_key(5244)) void Series::PutPictureType ( const _variant_t & _val );
__declspec(implementation_key(5245)) _variant_t Series::GetPictureUnit ( );
__declspec(implementation_key(5246)) void Series::PutPictureUnit ( const _variant_t & _val );
__declspec(implementation_key(5247)) _variant_t Series::GetPlotOrder ( );
__declspec(implementation_key(5248)) void Series::PutPlotOrder ( const _variant_t & _val );
__declspec(implementation_key(5249)) _variant_t Series::GetSmooth ( );
__declspec(implementation_key(5250)) void Series::PutSmooth ( const _variant_t & _val );
__declspec(implementation_key(5251)) _variant_t Series::GetType ( );
__declspec(implementation_key(5252)) void Series::PutType ( const _variant_t & _val );
__declspec(implementation_key(5253)) _variant_t Series::GetValues ( );
__declspec(implementation_key(5254)) void Series::PutValues ( const _variant_t & _val );
__declspec(implementation_key(5255)) _variant_t Series::GetXValues ( );
__declspec(implementation_key(5256)) void Series::PutXValues ( const _variant_t & _val );
__declspec(implementation_key(5257)) _variant_t SeriesCollection::_NewEnum ( );
__declspec(implementation_key(5258)) _variant_t SeriesCollection::Add ( const _variant_t & Source, const _variant_t & Rowcol, const _variant_t & SeriesLabels, const _variant_t & CategoryLabels, const _variant_t & Replace );
__declspec(implementation_key(5259)) _variant_t SeriesCollection::Application ( );
__declspec(implementation_key(5260)) _variant_t SeriesCollection::Extend ( const _variant_t & Source, const _variant_t & Rowcol, const _variant_t & CategoryLabels );
__declspec(implementation_key(5261)) _variant_t SeriesCollection::Item ( const _variant_t & Index );
__declspec(implementation_key(5262)) _variant_t SeriesCollection::Paste ( const _variant_t & Rowcol, const _variant_t & SeriesLabels, const _variant_t & CategoryLabels, const _variant_t & Replace, const _variant_t & NewSeries );
__declspec(implementation_key(5263)) _variant_t SeriesCollection::GetCount ( );
__declspec(implementation_key(5264)) void SeriesCollection::PutCount ( const _variant_t & _val );
__declspec(implementation_key(5265)) _variant_t SeriesCollection::GetCreator ( );
__declspec(implementation_key(5266)) void SeriesCollection::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5267)) _variant_t SeriesCollection::GetParent ( );
__declspec(implementation_key(5268)) void SeriesCollection::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5269)) _variant_t LegendEntry::Application ( );
__declspec(implementation_key(5270)) _variant_t LegendEntry::Delete ( );
__declspec(implementation_key(5271)) _variant_t LegendEntry::Select ( );
__declspec(implementation_key(5272)) _variant_t LegendEntry::GetCreator ( );
__declspec(implementation_key(5273)) void LegendEntry::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5274)) _variant_t LegendEntry::GetFont ( );
__declspec(implementation_key(5275)) void LegendEntry::PutFont ( const _variant_t & _val );
__declspec(implementation_key(5276)) _variant_t LegendEntry::GetIndex ( );
__declspec(implementation_key(5277)) void LegendEntry::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(5278)) _variant_t LegendEntry::GetLegendKey ( );
__declspec(implementation_key(5279)) void LegendEntry::PutLegendKey ( const _variant_t & _val );
__declspec(implementation_key(5280)) _variant_t LegendEntry::GetParent ( );
__declspec(implementation_key(5281)) void LegendEntry::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5282)) _variant_t LegendEntries::_NewEnum ( );
__declspec(implementation_key(5283)) _variant_t LegendEntries::Application ( );
__declspec(implementation_key(5284)) _variant_t LegendEntries::Item ( const _variant_t & Index );
__declspec(implementation_key(5285)) _variant_t LegendEntries::GetCount ( );
__declspec(implementation_key(5286)) void LegendEntries::PutCount ( const _variant_t & _val );
__declspec(implementation_key(5287)) _variant_t LegendEntries::GetCreator ( );
__declspec(implementation_key(5288)) void LegendEntries::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5289)) _variant_t LegendEntries::GetParent ( );
__declspec(implementation_key(5290)) void LegendEntries::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5291)) _variant_t LegendKey::Application ( );
__declspec(implementation_key(5292)) _variant_t LegendKey::ClearFormats ( );
__declspec(implementation_key(5293)) _variant_t LegendKey::Delete ( );
__declspec(implementation_key(5294)) _variant_t LegendKey::Select ( );
__declspec(implementation_key(5295)) _variant_t LegendKey::GetBorder ( );
__declspec(implementation_key(5296)) void LegendKey::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(5297)) _variant_t LegendKey::GetCreator ( );
__declspec(implementation_key(5298)) void LegendKey::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5299)) _variant_t LegendKey::GetInterior ( );
__declspec(implementation_key(5300)) void LegendKey::PutInterior ( const _variant_t & _val );
__declspec(implementation_key(5301)) _variant_t LegendKey::GetInvertIfNegative ( );
__declspec(implementation_key(5302)) void LegendKey::PutInvertIfNegative ( const _variant_t & _val );
__declspec(implementation_key(5303)) _variant_t LegendKey::GetMarkerBackgroundColor ( );
__declspec(implementation_key(5304)) void LegendKey::PutMarkerBackgroundColor ( const _variant_t & _val );
__declspec(implementation_key(5305)) _variant_t LegendKey::GetMarkerBackgroundColorIndex ( );
__declspec(implementation_key(5306)) void LegendKey::PutMarkerBackgroundColorIndex ( const _variant_t & _val );
__declspec(implementation_key(5307)) _variant_t LegendKey::GetMarkerForegroundColor ( );
__declspec(implementation_key(5308)) void LegendKey::PutMarkerForegroundColor ( const _variant_t & _val );
__declspec(implementation_key(5309)) _variant_t LegendKey::GetMarkerForegroundColorIndex ( );
__declspec(implementation_key(5310)) void LegendKey::PutMarkerForegroundColorIndex ( const _variant_t & _val );
__declspec(implementation_key(5311)) _variant_t LegendKey::GetMarkerStyle ( );
__declspec(implementation_key(5312)) void LegendKey::PutMarkerStyle ( const _variant_t & _val );
__declspec(implementation_key(5313)) _variant_t LegendKey::GetParent ( );
__declspec(implementation_key(5314)) void LegendKey::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5315)) _variant_t LegendKey::GetSmooth ( );
__declspec(implementation_key(5316)) void LegendKey::PutSmooth ( const _variant_t & _val );
__declspec(implementation_key(5317)) _variant_t Trendline::Application ( );
__declspec(implementation_key(5318)) _variant_t Trendline::ClearFormats ( );
__declspec(implementation_key(5319)) _variant_t Trendline::Delete ( );
__declspec(implementation_key(5320)) _variant_t Trendline::Select ( );
__declspec(implementation_key(5321)) _variant_t Trendline::GetBackward ( );
__declspec(implementation_key(5322)) void Trendline::PutBackward ( const _variant_t & _val );
__declspec(implementation_key(5323)) _variant_t Trendline::GetBorder ( );
__declspec(implementation_key(5324)) void Trendline::PutBorder ( const _variant_t & _val );
__declspec(implementation_key(5325)) _variant_t Trendline::GetCreator ( );
__declspec(implementation_key(5326)) void Trendline::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5327)) _variant_t Trendline::GetDataLabel ( );
__declspec(implementation_key(5328)) void Trendline::PutDataLabel ( const _variant_t & _val );
__declspec(implementation_key(5329)) _variant_t Trendline::GetDisplayEquation ( );
__declspec(implementation_key(5330)) void Trendline::PutDisplayEquation ( const _variant_t & _val );
__declspec(implementation_key(5331)) _variant_t Trendline::GetDisplayRSquared ( );
__declspec(implementation_key(5332)) void Trendline::PutDisplayRSquared ( const _variant_t & _val );
__declspec(implementation_key(5333)) _variant_t Trendline::GetForward ( );
__declspec(implementation_key(5334)) void Trendline::PutForward ( const _variant_t & _val );
__declspec(implementation_key(5335)) _variant_t Trendline::GetIndex ( );
__declspec(implementation_key(5336)) void Trendline::PutIndex ( const _variant_t & _val );
__declspec(implementation_key(5337)) _variant_t Trendline::GetIntercept ( );
__declspec(implementation_key(5338)) void Trendline::PutIntercept ( const _variant_t & _val );
__declspec(implementation_key(5339)) _variant_t Trendline::GetInterceptIsAuto ( );
__declspec(implementation_key(5340)) void Trendline::PutInterceptIsAuto ( const _variant_t & _val );
__declspec(implementation_key(5341)) _variant_t Trendline::GetName ( );
__declspec(implementation_key(5342)) void Trendline::PutName ( const _variant_t & _val );
__declspec(implementation_key(5343)) _variant_t Trendline::GetNameIsAuto ( );
__declspec(implementation_key(5344)) void Trendline::PutNameIsAuto ( const _variant_t & _val );
__declspec(implementation_key(5345)) _variant_t Trendline::GetOrder ( );
__declspec(implementation_key(5346)) void Trendline::PutOrder ( const _variant_t & _val );
__declspec(implementation_key(5347)) _variant_t Trendline::GetParent ( );
__declspec(implementation_key(5348)) void Trendline::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5349)) _variant_t Trendline::GetPeriod ( );
__declspec(implementation_key(5350)) void Trendline::PutPeriod ( const _variant_t & _val );
__declspec(implementation_key(5351)) _variant_t Trendline::GetType ( );
__declspec(implementation_key(5352)) void Trendline::PutType ( const _variant_t & _val );
__declspec(implementation_key(5353)) _variant_t Trendlines::_NewEnum ( );
__declspec(implementation_key(5354)) _variant_t Trendlines::Add ( const _variant_t & Type, const _variant_t & Order, const _variant_t & Period, const _variant_t & Forward, const _variant_t & Backward, const _variant_t & Intercept, const _variant_t & DisplayEquation, const _variant_t & DisplayRSquared, const _variant_t & Name );
__declspec(implementation_key(5355)) _variant_t Trendlines::Application ( );
__declspec(implementation_key(5356)) _variant_t Trendlines::Item ( const _variant_t & Index );
__declspec(implementation_key(5357)) _variant_t Trendlines::GetCount ( );
__declspec(implementation_key(5358)) void Trendlines::PutCount ( const _variant_t & _val );
__declspec(implementation_key(5359)) _variant_t Trendlines::GetCreator ( );
__declspec(implementation_key(5360)) void Trendlines::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5361)) _variant_t Trendlines::GetParent ( );
__declspec(implementation_key(5362)) void Trendlines::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5363)) _variant_t AutoCorrect::AddReplacement ( const _variant_t & What, const _variant_t & Replacement );
__declspec(implementation_key(5364)) _variant_t AutoCorrect::Application ( );
__declspec(implementation_key(5365)) _variant_t AutoCorrect::DeleteReplacement ( const _variant_t & What );
__declspec(implementation_key(5366)) _variant_t AutoCorrect::GetCapitalizeNamesOfDays ( );
__declspec(implementation_key(5367)) void AutoCorrect::PutCapitalizeNamesOfDays ( const _variant_t & _val );
__declspec(implementation_key(5368)) _variant_t AutoCorrect::GetCreator ( );
__declspec(implementation_key(5369)) void AutoCorrect::PutCreator ( const _variant_t & _val );
__declspec(implementation_key(5370)) _variant_t AutoCorrect::GetParent ( );
__declspec(implementation_key(5371)) void AutoCorrect::PutParent ( const _variant_t & _val );
__declspec(implementation_key(5372)) _variant_t AutoCorrect::GetReplacementList ( );
__declspec(implementation_key(5373)) void AutoCorrect::PutReplacementList ( const _variant_t & _val );
__declspec(implementation_key(5374)) _variant_t AutoCorrect::GetReplaceText ( );
__declspec(implementation_key(5375)) void AutoCorrect::PutReplaceText ( const _variant_t & _val );
__declspec(implementation_key(5376)) _variant_t AutoCorrect::GetTwoInitialCapitals ( );
__declspec(implementation_key(5377)) void AutoCorrect::PutTwoInitialCapitals ( const _variant_t & _val );
#pragma stop_map_region

} // namespace XL95

#pragma pack(pop)
