// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (ec352bde).
//
// c:\code\zylux\fb12\obj\debugs\pcol\xl5en32.tli
//
// Wrapper implementations for Win32 type library xl5en32.olb
// compiler-generated file created 09/13/00 at 12:27:57 - DO NOT EDIT!


//
// dispinterface _Global wrapper method implementations
//

#pragma implementation_key(1)
inline _variant_t XL95::_Global::AddIns ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x225, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(2)
inline _variant_t XL95::_Global::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3)
inline _variant_t XL95::_Global::Calculate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x117, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4)
inline _variant_t XL95::_Global::Cells ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xee, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &RowIndex, &ColumnIndex);
    return _variant_t(_result, false);
}

#pragma implementation_key(5)
inline _variant_t XL95::_Global::Charts ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(6)
inline _variant_t XL95::_Global::Columns ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(7)
inline _variant_t XL95::_Global::DDEExecute ( const _variant_t & Channel, const _variant_t & String ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x14d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &Channel, &String);
    return _variant_t(_result, false);
}

#pragma implementation_key(8)
inline _variant_t XL95::_Global::DDEInitiate ( const _variant_t & App, const _variant_t & Topic ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x14e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &App, &Topic);
    return _variant_t(_result, false);
}

#pragma implementation_key(9)
inline _variant_t XL95::_Global::DDEPoke ( const _variant_t & Channel, const _variant_t & Item, const _variant_t & Data ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x14f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c", &Channel, &Item, &Data);
    return _variant_t(_result, false);
}

#pragma implementation_key(10)
inline _variant_t XL95::_Global::DDERequest ( const _variant_t & Channel, const _variant_t & Item ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x150, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &Channel, &Item);
    return _variant_t(_result, false);
}

#pragma implementation_key(11)
inline _variant_t XL95::_Global::DDETerminate ( const _variant_t & Channel ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x151, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Channel);
    return _variant_t(_result, false);
}

#pragma implementation_key(12)
inline _variant_t XL95::_Global::DialogSheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2fc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(13)
inline _variant_t XL95::_Global::_Evaluate ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(14)
inline _variant_t XL95::_Global::Evaluate ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfffffffb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(15)
inline _variant_t XL95::_Global::Excel4IntlMacroSheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x245, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(16)
inline _variant_t XL95::_Global::Excel4MacroSheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x243, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(17)
inline _variant_t XL95::_Global::ExecuteExcel4Macro ( const _variant_t & String ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x15e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &String);
    return _variant_t(_result, false);
}

#pragma implementation_key(18)
inline _variant_t XL95::_Global::Intersect ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2fe, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Arg1, &Arg2, &Arg3, &Arg4, &Arg5, &Arg6, &Arg7, &Arg8, &Arg9, &Arg10, &Arg11, &Arg12, &Arg13, &Arg14, &Arg15, &Arg16, &Arg17, &Arg18, &Arg19, &Arg20, &Arg21, &Arg22, &Arg23, &Arg24, &Arg25, &Arg26, &Arg27, &Arg28, &Arg29, &Arg30);
    return _variant_t(_result, false);
}

#pragma implementation_key(19)
inline _variant_t XL95::_Global::MenuBars ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x24d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(20)
inline _variant_t XL95::_Global::Modules ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x246, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(21)
inline _variant_t XL95::_Global::Names ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ba, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Index, &IndexLocal, &RefersTo);
    return _variant_t(_result, false);
}

#pragma implementation_key(22)
inline _variant_t XL95::_Global::Range ( const _variant_t & Cell1, const _variant_t & Cell2 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xc5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Cell1, &Cell2);
    return _variant_t(_result, false);
}

#pragma implementation_key(23)
inline _variant_t XL95::_Global::Rows ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x102, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(24)
inline _variant_t XL95::_Global::Run ( const _variant_t & Macro, const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x103, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Macro, &Arg1, &Arg2, &Arg3, &Arg4, &Arg5, &Arg6, &Arg7, &Arg8, &Arg9, &Arg10, &Arg11, &Arg12, &Arg13, &Arg14, &Arg15, &Arg16, &Arg17, &Arg18, &Arg19, &Arg20, &Arg21, &Arg22, &Arg23, &Arg24, &Arg25, &Arg26, &Arg27, &Arg28, &Arg29, &Arg30);
    return _variant_t(_result, false);
}

#pragma implementation_key(25)
inline _variant_t XL95::_Global::SendKeys ( const _variant_t & Keys, const _variant_t & Wait ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x17f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Keys, &Wait);
    return _variant_t(_result, false);
}

#pragma implementation_key(26)
inline _variant_t XL95::_Global::Sheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1e5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(27)
inline _variant_t XL95::_Global::ShortcutMenus ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x308, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(28)
inline _variant_t XL95::_Global::Toolbars ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x228, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(29)
inline _variant_t XL95::_Global::Union ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x30b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Arg1, &Arg2, &Arg3, &Arg4, &Arg5, &Arg6, &Arg7, &Arg8, &Arg9, &Arg10, &Arg11, &Arg12, &Arg13, &Arg14, &Arg15, &Arg16, &Arg17, &Arg18, &Arg19, &Arg20, &Arg21, &Arg22, &Arg23, &Arg24, &Arg25, &Arg26, &Arg27, &Arg28, &Arg29, &Arg30);
    return _variant_t(_result, false);
}

#pragma implementation_key(30)
inline _variant_t XL95::_Global::Windows ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ae, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(31)
inline _variant_t XL95::_Global::Workbooks ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x23c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(32)
inline _variant_t XL95::_Global::Worksheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ee, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(33)
inline _variant_t XL95::_Global::GetActiveCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x131, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(34)
inline void XL95::_Global::PutActiveCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x131, VT_VARIANT, &_val);
}

#pragma implementation_key(35)
inline _variant_t XL95::_Global::GetActiveChart ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(36)
inline void XL95::_Global::PutActiveChart ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb7, VT_VARIANT, &_val);
}

#pragma implementation_key(37)
inline _variant_t XL95::_Global::GetActiveDialog ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x32f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(38)
inline void XL95::_Global::PutActiveDialog ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x32f, VT_VARIANT, &_val);
}

#pragma implementation_key(39)
inline _variant_t XL95::_Global::GetActiveMenuBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2f6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(40)
inline void XL95::_Global::PutActiveMenuBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2f6, VT_VARIANT, &_val);
}

#pragma implementation_key(41)
inline _variant_t XL95::_Global::GetActivePrinter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x132, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(42)
inline void XL95::_Global::PutActivePrinter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x132, VT_VARIANT, &_val);
}

#pragma implementation_key(43)
inline _variant_t XL95::_Global::GetActiveSheet ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x133, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(44)
inline void XL95::_Global::PutActiveSheet ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x133, VT_VARIANT, &_val);
}

#pragma implementation_key(45)
inline _variant_t XL95::_Global::GetActiveWindow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2f7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(46)
inline void XL95::_Global::PutActiveWindow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2f7, VT_VARIANT, &_val);
}

#pragma implementation_key(47)
inline _variant_t XL95::_Global::GetActiveWorkbook ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x134, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(48)
inline void XL95::_Global::PutActiveWorkbook ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x134, VT_VARIANT, &_val);
}

#pragma implementation_key(49)
inline _variant_t XL95::_Global::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(50)
inline void XL95::_Global::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(51)
inline _variant_t XL95::_Global::GetDDEAppReturnCode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x14c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(52)
inline void XL95::_Global::PutDDEAppReturnCode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x14c, VT_VARIANT, &_val);
}

#pragma implementation_key(53)
inline _variant_t XL95::_Global::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(54)
inline void XL95::_Global::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(55)
inline _variant_t XL95::_Global::GetSelection ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x93, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(56)
inline void XL95::_Global::PutSelection ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x93, VT_VARIANT, &_val);
}

#pragma implementation_key(57)
inline _variant_t XL95::_Global::GetThisWorkbook ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x30a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(58)
inline void XL95::_Global::PutThisWorkbook ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x30a, VT_VARIANT, &_val);
}

//
// dispinterface Application wrapper method implementations
//

#pragma implementation_key(59)
inline _variant_t XL95::Application::_WSFunction ( const _variant_t & Range, const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xa9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Range, &Arg1, &Arg2, &Arg3, &Arg4, &Arg5, &Arg6, &Arg7, &Arg8, &Arg9, &Arg10, &Arg11, &Arg12, &Arg13, &Arg14, &Arg15, &Arg16, &Arg17, &Arg18, &Arg19, &Arg20, &Arg21, &Arg22, &Arg23, &Arg24, &Arg25, &Arg26, &Arg27, &Arg28, &Arg29, &Arg30);
    return _variant_t(_result, false);
}

#pragma implementation_key(60)
inline _variant_t XL95::Application::Acos ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4063, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(61)
inline _variant_t XL95::Application::Acosh ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40e9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(62)
inline _variant_t XL95::Application::ActivateMicrosoftApp ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x447, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(63)
inline _variant_t XL95::Application::AddChartAutoFormat ( const _variant_t & Chart, const _variant_t & Name, const _variant_t & Description ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c", &Chart, &Name, &Description);
    return _variant_t(_result, false);
}

#pragma implementation_key(64)
inline _variant_t XL95::Application::AddCustomList ( const _variant_t & ListArray, const _variant_t & ByRow ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x30c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &ListArray, &ByRow);
    return _variant_t(_result, false);
}

#pragma implementation_key(65)
inline _variant_t XL95::Application::AddIns ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x225, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(66)
inline _variant_t XL95::Application::And ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4024, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(67)
inline _variant_t XL95::Application::_Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(68)
inline _variant_t XL95::Application::Asin ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4062, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(69)
inline _variant_t XL95::Application::Asinh ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40e8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(70)
inline _variant_t XL95::Application::Atan2 ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4061, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(71)
inline _variant_t XL95::Application::Atanh ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40ea, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(72)
inline _variant_t XL95::Application::AveDev ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x410d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(73)
inline _variant_t XL95::Application::Average ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4005, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(74)
inline _variant_t XL95::Application::BetaDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x410e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(75)
inline _variant_t XL95::Application::BetaInv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4110, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(76)
inline _variant_t XL95::Application::BinomDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4111, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(77)
inline _variant_t XL95::Application::Calculate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x117, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(78)
inline _variant_t XL95::Application::Ceiling ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4120, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(79)
inline _variant_t XL95::Application::Cells ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xee, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &RowIndex, &ColumnIndex);
    return _variant_t(_result, false);
}

#pragma implementation_key(80)
inline _variant_t XL95::Application::CentimetersToPoints ( const _variant_t & Centimeters ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x43e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Centimeters);
    return _variant_t(_result, false);
}

#pragma implementation_key(81)
inline _variant_t XL95::Application::Charts ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(82)
inline _variant_t XL95::Application::CheckSpelling ( const _variant_t & Word, const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c", &Word, &CustomDictionary, &IgnoreUppercase);
    return _variant_t(_result, false);
}

#pragma implementation_key(83)
inline _variant_t XL95::Application::ChiDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4112, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(84)
inline _variant_t XL95::Application::ChiInv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4113, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(85)
inline _variant_t XL95::Application::ChiTest ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4132, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(86)
inline _variant_t XL95::Application::Choose ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4064, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(87)
inline _variant_t XL95::Application::Clean ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40a2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(88)
inline _variant_t XL95::Application::Columns ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(89)
inline _variant_t XL95::Application::Combin ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4114, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(90)
inline _variant_t XL95::Application::Confidence ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4115, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(91)
inline _variant_t XL95::Application::ConvertFormula ( const _variant_t & Formula, const _variant_t & FromReferenceStyle, const _variant_t & ToReferenceStyle, const _variant_t & ToAbsolute, const _variant_t & RelativeTo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x145, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c\x080c", &Formula, &FromReferenceStyle, &ToReferenceStyle, &ToAbsolute, &RelativeTo);
    return _variant_t(_result, false);
}

#pragma implementation_key(92)
inline _variant_t XL95::Application::Correl ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4133, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(93)
inline _variant_t XL95::Application::Cosh ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40e6, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(94)
inline _variant_t XL95::Application::Count ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4000, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(95)
inline _variant_t XL95::Application::CountA ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40a9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(96)
inline _variant_t XL95::Application::CountBlank ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x415b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(97)
inline _variant_t XL95::Application::CountIf ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x415a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(98)
inline _variant_t XL95::Application::Covar ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4134, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(99)
inline _variant_t XL95::Application::CritBinom ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4116, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(100)
inline _variant_t XL95::Application::DAverage ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x402a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(101)
inline _variant_t XL95::Application::Days360 ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40dc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(102)
inline _variant_t XL95::Application::Db ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f7, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(103)
inline _variant_t XL95::Application::DCount ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4028, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(104)
inline _variant_t XL95::Application::DCountA ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40c7, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(105)
inline _variant_t XL95::Application::Ddb ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4090, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(106)
inline _variant_t XL95::Application::DDEExecute ( const _variant_t & Channel, const _variant_t & String ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x14d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &Channel, &String);
    return _variant_t(_result, false);
}

#pragma implementation_key(107)
inline _variant_t XL95::Application::DDEInitiate ( const _variant_t & App, const _variant_t & Topic ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x14e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &App, &Topic);
    return _variant_t(_result, false);
}

#pragma implementation_key(108)
inline _variant_t XL95::Application::DDEPoke ( const _variant_t & Channel, const _variant_t & Item, const _variant_t & Data ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x14f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c", &Channel, &Item, &Data);
    return _variant_t(_result, false);
}

#pragma implementation_key(109)
inline _variant_t XL95::Application::DDERequest ( const _variant_t & Channel, const _variant_t & Item ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x150, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &Channel, &Item);
    return _variant_t(_result, false);
}

#pragma implementation_key(110)
inline _variant_t XL95::Application::DDETerminate ( const _variant_t & Channel ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x151, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Channel);
    return _variant_t(_result, false);
}

#pragma implementation_key(111)
inline _variant_t XL95::Application::Degrees ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4157, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(112)
inline _variant_t XL95::Application::DeleteChartAutoFormat ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(113)
inline _variant_t XL95::Application::DeleteCustomList ( const _variant_t & ListNum ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x30f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &ListNum);
    return _variant_t(_result, false);
}

#pragma implementation_key(114)
inline _variant_t XL95::Application::DevSq ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x413e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(115)
inline _variant_t XL95::Application::DGet ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40eb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(116)
inline _variant_t XL95::Application::Dialogs ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(117)
inline _variant_t XL95::Application::DialogSheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2fc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(118)
inline _variant_t XL95::Application::DMax ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x402c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(119)
inline _variant_t XL95::Application::DMin ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x402b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(120)
inline _variant_t XL95::Application::Dollar ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x400d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(121)
inline _variant_t XL95::Application::DoubleClick ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x15d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(122)
inline _variant_t XL95::Application::DProduct ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40bd, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(123)
inline _variant_t XL95::Application::DStDev ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x402d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(124)
inline _variant_t XL95::Application::DStDevP ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40c3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(125)
inline _variant_t XL95::Application::DSum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4029, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(126)
inline _variant_t XL95::Application::DVar ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x402f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(127)
inline _variant_t XL95::Application::DVarP ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40c4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(128)
inline _variant_t XL95::Application::_Evaluate ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(129)
inline _variant_t XL95::Application::Evaluate ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfffffffb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(130)
inline _variant_t XL95::Application::Even ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4117, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(131)
inline _variant_t XL95::Application::Excel4IntlMacroSheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x245, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(132)
inline _variant_t XL95::Application::Excel4MacroSheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x243, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(133)
inline _variant_t XL95::Application::ExecuteExcel4Macro ( const _variant_t & String ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x15e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &String);
    return _variant_t(_result, false);
}

#pragma implementation_key(134)
inline _variant_t XL95::Application::ExponDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4118, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(135)
inline _variant_t XL95::Application::Fact ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40b8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(136)
inline _variant_t XL95::Application::FDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(137)
inline _variant_t XL95::Application::Find ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x407c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(138)
inline _variant_t XL95::Application::FindB ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40cd, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(139)
inline _variant_t XL95::Application::FindFile ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x42c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(140)
inline _variant_t XL95::Application::FInv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x411a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(141)
inline _variant_t XL95::Application::Fisher ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x411b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(142)
inline _variant_t XL95::Application::FisherInv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x411c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(143)
inline _variant_t XL95::Application::Fixed ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x400e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(144)
inline _variant_t XL95::Application::Floor ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x411d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(145)
inline _variant_t XL95::Application::Forecast ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4135, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(146)
inline _variant_t XL95::Application::Frequency ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40fc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(147)
inline _variant_t XL95::Application::FTest ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4136, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(148)
inline _variant_t XL95::Application::Fv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4039, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(149)
inline _variant_t XL95::Application::GammaDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x411e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(150)
inline _variant_t XL95::Application::GammaInv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x411f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(151)
inline _variant_t XL95::Application::GammaLn ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x410f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(152)
inline _variant_t XL95::Application::GeoMean ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x413f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(153)
inline _variant_t XL95::Application::GetCustomListContents ( const _variant_t & ListNum ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x312, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &ListNum);
    return _variant_t(_result, false);
}

#pragma implementation_key(154)
inline _variant_t XL95::Application::GetCustomListNum ( const _variant_t & ListArray ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x311, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &ListArray);
    return _variant_t(_result, false);
}

#pragma implementation_key(155)
inline _variant_t XL95::Application::GetOpenFilename ( const _variant_t & FileFilter, const _variant_t & FilterIndex, const _variant_t & Title, const _variant_t & ButtonText, const _variant_t & MultiSelect ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x433, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &FileFilter, &FilterIndex, &Title, &ButtonText, &MultiSelect);
    return _variant_t(_result, false);
}

#pragma implementation_key(156)
inline _variant_t XL95::Application::GetSaveAsFilename ( const _variant_t & InitialFilename, const _variant_t & FileFilter, const _variant_t & FilterIndex, const _variant_t & Title, const _variant_t & ButtonText ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x434, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &InitialFilename, &FileFilter, &FilterIndex, &Title, &ButtonText);
    return _variant_t(_result, false);
}

#pragma implementation_key(157)
inline _variant_t XL95::Application::Goto ( const _variant_t & Reference, const _variant_t & Scroll ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1db, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Reference, &Scroll);
    return _variant_t(_result, false);
}

#pragma implementation_key(158)
inline _variant_t XL95::Application::Growth ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4034, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(159)
inline _variant_t XL95::Application::HarMean ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4140, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(160)
inline _variant_t XL95::Application::Help ( const _variant_t & HelpFile, const _variant_t & HelpContextID ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x162, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &HelpFile, &HelpContextID);
    return _variant_t(_result, false);
}

#pragma implementation_key(161)
inline _variant_t XL95::Application::HLookup ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4065, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(162)
inline _variant_t XL95::Application::HypGeomDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4121, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(163)
inline _variant_t XL95::Application::InchesToPoints ( const _variant_t & Inches ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x43f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Inches);
    return _variant_t(_result, false);
}

#pragma implementation_key(164)
inline _variant_t XL95::Application::Index ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x401d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(165)
inline _variant_t XL95::Application::InputBox ( const _variant_t & Prompt, const _variant_t & Title, const _variant_t & Default, const _variant_t & Left, const _variant_t & Top, const _variant_t & HelpFile, const _variant_t & HelpContextID, const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x165, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Prompt, &Title, &Default, &Left, &Top, &HelpFile, &HelpContextID, &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(166)
inline _variant_t XL95::Application::Intercept ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4137, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(167)
inline _variant_t XL95::Application::Intersect ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2fe, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Arg1, &Arg2, &Arg3, &Arg4, &Arg5, &Arg6, &Arg7, &Arg8, &Arg9, &Arg10, &Arg11, &Arg12, &Arg13, &Arg14, &Arg15, &Arg16, &Arg17, &Arg18, &Arg19, &Arg20, &Arg21, &Arg22, &Arg23, &Arg24, &Arg25, &Arg26, &Arg27, &Arg28, &Arg29, &Arg30);
    return _variant_t(_result, false);
}

#pragma implementation_key(168)
inline _variant_t XL95::Application::Ipmt ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40a7, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(169)
inline _variant_t XL95::Application::Irr ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x403e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(170)
inline _variant_t XL95::Application::IsErr ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x407e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(171)
inline _variant_t XL95::Application::IsError ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(172)
inline _variant_t XL95::Application::IsLogical ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40c6, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(173)
inline _variant_t XL95::Application::IsNA ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(174)
inline _variant_t XL95::Application::IsNonText ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40be, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(175)
inline _variant_t XL95::Application::IsNumber ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4080, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(176)
inline _variant_t XL95::Application::Ispmt ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x415e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(177)
inline _variant_t XL95::Application::IsText ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x407f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(178)
inline _variant_t XL95::Application::Kurt ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4142, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(179)
inline _variant_t XL95::Application::Large ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4145, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(180)
inline _variant_t XL95::Application::LinEst ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4031, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(181)
inline _variant_t XL95::Application::Ln ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4016, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(182)
inline _variant_t XL95::Application::Log ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x406d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(183)
inline _variant_t XL95::Application::Log10 ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4017, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(184)
inline _variant_t XL95::Application::LogEst ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4033, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(185)
inline _variant_t XL95::Application::LogInv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4123, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(186)
inline _variant_t XL95::Application::LogNormDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4122, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(187)
inline _variant_t XL95::Application::Lookup ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x401c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(188)
inline _variant_t XL95::Application::MacroOptions ( const _variant_t & Macro, const _variant_t & Description, const _variant_t & HasMenu, const _variant_t & MenuText, const _variant_t & HasShortcutKey, const _variant_t & ShortcutKey, const _variant_t & Category, const _variant_t & StatusBar, const _variant_t & HelpContextID, const _variant_t & HelpFile ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x46f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Macro, &Description, &HasMenu, &MenuText, &HasShortcutKey, &ShortcutKey, &Category, &StatusBar, &HelpContextID, &HelpFile);
    return _variant_t(_result, false);
}

#pragma implementation_key(189)
inline _variant_t XL95::Application::MailLogoff ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3b1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(190)
inline _variant_t XL95::Application::MailLogon ( const _variant_t & Name, const _variant_t & Password, const _variant_t & DownloadNewMail ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3af, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Name, &Password, &DownloadNewMail);
    return _variant_t(_result, false);
}

#pragma implementation_key(191)
inline _variant_t XL95::Application::Match ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4040, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(192)
inline _variant_t XL95::Application::Max ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4007, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(193)
inline _variant_t XL95::Application::MDeterm ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40a3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(194)
inline _variant_t XL95::Application::Median ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40e3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(195)
inline _variant_t XL95::Application::MenuBars ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x24d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(196)
inline _variant_t XL95::Application::Min ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4006, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(197)
inline _variant_t XL95::Application::MInverse ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40a4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(198)
inline _variant_t XL95::Application::MIrr ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x403d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(199)
inline _variant_t XL95::Application::MMult ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40a5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(200)
inline _variant_t XL95::Application::Mode ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x414a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(201)
inline _variant_t XL95::Application::Modules ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x246, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(202)
inline _variant_t XL95::Application::Names ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ba, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Index, &IndexLocal, &RefersTo);
    return _variant_t(_result, false);
}

#pragma implementation_key(203)
inline _variant_t XL95::Application::NegBinomDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4124, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(204)
inline _variant_t XL95::Application::NextLetter ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3cc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(205)
inline _variant_t XL95::Application::NormDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4125, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(206)
inline _variant_t XL95::Application::NormInv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4127, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(207)
inline _variant_t XL95::Application::NormSDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4126, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(208)
inline _variant_t XL95::Application::NormSInv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4128, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(209)
inline _variant_t XL95::Application::NPer ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x403a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(210)
inline _variant_t XL95::Application::Npv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x400b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(211)
inline _variant_t XL95::Application::Odd ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x412a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(212)
inline _variant_t XL95::Application::OnKey ( const _variant_t & Key, const _variant_t & Procedure ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x272, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Key, &Procedure);
    return _variant_t(_result, false);
}

#pragma implementation_key(213)
inline _variant_t XL95::Application::OnRepeat ( const _variant_t & Text, const _variant_t & Procedure ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x301, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &Text, &Procedure);
    return _variant_t(_result, false);
}

#pragma implementation_key(214)
inline _variant_t XL95::Application::OnTime ( const _variant_t & EarliestTime, const _variant_t & Procedure, const _variant_t & LatestTime, const _variant_t & Schedule ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x270, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c", &EarliestTime, &Procedure, &LatestTime, &Schedule);
    return _variant_t(_result, false);
}

#pragma implementation_key(215)
inline _variant_t XL95::Application::OnUndo ( const _variant_t & Text, const _variant_t & Procedure ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x302, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &Text, &Procedure);
    return _variant_t(_result, false);
}

#pragma implementation_key(216)
inline _variant_t XL95::Application::Or ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4025, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(217)
inline _variant_t XL95::Application::Pearson ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4138, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(218)
inline _variant_t XL95::Application::Percentile ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4148, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(219)
inline _variant_t XL95::Application::PercentRank ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4149, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(220)
inline _variant_t XL95::Application::Permut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x412b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(221)
inline _variant_t XL95::Application::Pi ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4013, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(222)
inline _variant_t XL95::Application::Pmt ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x403b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(223)
inline _variant_t XL95::Application::Poisson ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x412c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(224)
inline _variant_t XL95::Application::Power ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4151, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(225)
inline _variant_t XL95::Application::Ppmt ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40a8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(226)
inline _variant_t XL95::Application::Prob ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x413d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(227)
inline _variant_t XL95::Application::Product ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40b7, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(228)
inline _variant_t XL95::Application::Proper ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4072, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(229)
inline _variant_t XL95::Application::Pv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4038, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(230)
inline _variant_t XL95::Application::Quartile ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4147, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(231)
inline _variant_t XL95::Application::Quit ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x12e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(232)
inline _variant_t XL95::Application::Radians ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4156, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(233)
inline _variant_t XL95::Application::Range ( const _variant_t & Cell1, const _variant_t & Cell2 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xc5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Cell1, &Cell2);
    return _variant_t(_result, false);
}

#pragma implementation_key(234)
inline _variant_t XL95::Application::Rank ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40d8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(235)
inline _variant_t XL95::Application::Rate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x403c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(236)
inline _variant_t XL95::Application::RecordMacro ( const _variant_t & BasicCode, const _variant_t & XlmCode ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x305, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &BasicCode, &XlmCode);
    return _variant_t(_result, false);
}

#pragma implementation_key(237)
inline _variant_t XL95::Application::RegisterXLL ( const _variant_t & Filename ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Filename);
    return _variant_t(_result, false);
}

#pragma implementation_key(238)
inline _variant_t XL95::Application::Repeat ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x12d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(239)
inline _variant_t XL95::Application::Replace ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4077, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(240)
inline _variant_t XL95::Application::ReplaceB ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40cf, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(241)
inline _variant_t XL95::Application::Rept ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x401e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(242)
inline _variant_t XL95::Application::ResetTipWizard ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3a0, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(243)
inline _variant_t XL95::Application::Roman ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4162, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(244)
inline _variant_t XL95::Application::Round ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x401b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(245)
inline _variant_t XL95::Application::RoundDown ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40d5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(246)
inline _variant_t XL95::Application::RoundUp ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40d4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(247)
inline _variant_t XL95::Application::Rows ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x102, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(248)
inline _variant_t XL95::Application::RSq ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4139, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(249)
inline _variant_t XL95::Application::Run ( const _variant_t & Macro, const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x103, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Macro, &Arg1, &Arg2, &Arg3, &Arg4, &Arg5, &Arg6, &Arg7, &Arg8, &Arg9, &Arg10, &Arg11, &Arg12, &Arg13, &Arg14, &Arg15, &Arg16, &Arg17, &Arg18, &Arg19, &Arg20, &Arg21, &Arg22, &Arg23, &Arg24, &Arg25, &Arg26, &Arg27, &Arg28, &Arg29, &Arg30);
    return _variant_t(_result, false);
}

#pragma implementation_key(250)
inline _variant_t XL95::Application::Save ( const _variant_t & Filename ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Filename);
    return _variant_t(_result, false);
}

#pragma implementation_key(251)
inline _variant_t XL95::Application::Search ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4052, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(252)
inline _variant_t XL95::Application::SearchB ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40ce, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(253)
inline _variant_t XL95::Application::SendKeys ( const _variant_t & Keys, const _variant_t & Wait ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x17f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Keys, &Wait);
    return _variant_t(_result, false);
}

#pragma implementation_key(254)
inline _variant_t XL95::Application::SetDefaultChart ( const _variant_t & FormatName ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xdb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &FormatName);
    return _variant_t(_result, false);
}

#pragma implementation_key(255)
inline _variant_t XL95::Application::Sheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1e5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(256)
inline _variant_t XL95::Application::ShortcutMenus ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x308, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(257)
inline _variant_t XL95::Application::Sinh ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40e5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(258)
inline _variant_t XL95::Application::Skew ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4143, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(259)
inline _variant_t XL95::Application::Sln ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x408e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(260)
inline _variant_t XL95::Application::Slope ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x413b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(261)
inline _variant_t XL95::Application::Small ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4146, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(262)
inline _variant_t XL95::Application::Standardize ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4129, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(263)
inline _variant_t XL95::Application::StDev ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x400c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(264)
inline _variant_t XL95::Application::StDevP ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40c1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(265)
inline _variant_t XL95::Application::StEyx ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x413a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(266)
inline _variant_t XL95::Application::Substitute ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4078, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(267)
inline _variant_t XL95::Application::Subtotal ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4158, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(268)
inline _variant_t XL95::Application::Sum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4004, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(269)
inline _variant_t XL95::Application::SumIf ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4159, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(270)
inline _variant_t XL95::Application::SumProduct ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40e4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(271)
inline _variant_t XL95::Application::SumSq ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4141, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(272)
inline _variant_t XL95::Application::SumX2MY2 ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(273)
inline _variant_t XL95::Application::SumX2PY2 ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4131, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(274)
inline _variant_t XL95::Application::SumXMY2 ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x412f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(275)
inline _variant_t XL95::Application::Syd ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x408f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(276)
inline _variant_t XL95::Application::Tanh ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40e7, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(277)
inline _variant_t XL95::Application::TDist ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x412d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(278)
inline _variant_t XL95::Application::Text ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4030, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(279)
inline _variant_t XL95::Application::TInv ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x414c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(280)
inline _variant_t XL95::Application::Toolbars ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x228, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(281)
inline _variant_t XL95::Application::Transpose ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4053, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(282)
inline _variant_t XL95::Application::Trend ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4032, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(283)
inline _variant_t XL95::Application::Trim ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4076, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(284)
inline _variant_t XL95::Application::TrimMean ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x414b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(285)
inline _variant_t XL95::Application::TTest ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x413c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(286)
inline _variant_t XL95::Application::Undo ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x12f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(287)
inline _variant_t XL95::Application::Union ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x30b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Arg1, &Arg2, &Arg3, &Arg4, &Arg5, &Arg6, &Arg7, &Arg8, &Arg9, &Arg10, &Arg11, &Arg12, &Arg13, &Arg14, &Arg15, &Arg16, &Arg17, &Arg18, &Arg19, &Arg20, &Arg21, &Arg22, &Arg23, &Arg24, &Arg25, &Arg26, &Arg27, &Arg28, &Arg29, &Arg30);
    return _variant_t(_result, false);
}

#pragma implementation_key(288)
inline _variant_t XL95::Application::USDollar ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40cc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(289)
inline _variant_t XL95::Application::Var ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x402e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(290)
inline _variant_t XL95::Application::VarP ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40c2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(291)
inline _variant_t XL95::Application::Vdb ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40de, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(292)
inline _variant_t XL95::Application::VLookup ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4066, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(293)
inline _variant_t XL95::Application::Volatile ( const _variant_t & Volatile ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x314, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Volatile);
    return _variant_t(_result, false);
}

#pragma implementation_key(294)
inline _variant_t XL95::Application::Wait ( const _variant_t & Time ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x189, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Time);
    return _variant_t(_result, false);
}

#pragma implementation_key(295)
inline _variant_t XL95::Application::Weekday ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4046, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(296)
inline _variant_t XL95::Application::Weibull ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x412e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(297)
inline _variant_t XL95::Application::Windows ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ae, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(298)
inline _variant_t XL95::Application::Workbooks ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x23c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(299)
inline _variant_t XL95::Application::Worksheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ee, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(300)
inline _variant_t XL95::Application::ZTest ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4144, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(301)
inline _variant_t XL95::Application::GetActiveCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x131, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(302)
inline void XL95::Application::PutActiveCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x131, VT_VARIANT, &_val);
}

#pragma implementation_key(303)
inline _variant_t XL95::Application::GetActiveChart ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(304)
inline void XL95::Application::PutActiveChart ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb7, VT_VARIANT, &_val);
}

#pragma implementation_key(305)
inline _variant_t XL95::Application::GetActiveDialog ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x32f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(306)
inline void XL95::Application::PutActiveDialog ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x32f, VT_VARIANT, &_val);
}

#pragma implementation_key(307)
inline _variant_t XL95::Application::GetActiveMenuBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2f6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(308)
inline void XL95::Application::PutActiveMenuBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2f6, VT_VARIANT, &_val);
}

#pragma implementation_key(309)
inline _variant_t XL95::Application::GetActivePrinter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x132, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(310)
inline void XL95::Application::PutActivePrinter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x132, VT_VARIANT, &_val);
}

#pragma implementation_key(311)
inline _variant_t XL95::Application::GetActiveSheet ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x133, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(312)
inline void XL95::Application::PutActiveSheet ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x133, VT_VARIANT, &_val);
}

#pragma implementation_key(313)
inline _variant_t XL95::Application::GetActiveWindow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2f7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(314)
inline void XL95::Application::PutActiveWindow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2f7, VT_VARIANT, &_val);
}

#pragma implementation_key(315)
inline _variant_t XL95::Application::GetActiveWorkbook ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x134, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(316)
inline void XL95::Application::PutActiveWorkbook ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x134, VT_VARIANT, &_val);
}

#pragma implementation_key(317)
inline _variant_t XL95::Application::GetAlertBeforeOverwriting ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3a2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(318)
inline void XL95::Application::PutAlertBeforeOverwriting ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3a2, VT_VARIANT, &_val);
}

#pragma implementation_key(319)
inline _variant_t XL95::Application::GetAltStartupPath ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x139, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(320)
inline void XL95::Application::PutAltStartupPath ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x139, VT_VARIANT, &_val);
}

#pragma implementation_key(321)
inline _variant_t XL95::Application::GetAskToUpdateLinks ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(322)
inline void XL95::Application::PutAskToUpdateLinks ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e0, VT_VARIANT, &_val);
}

#pragma implementation_key(323)
inline _variant_t XL95::Application::GetAutoCorrect ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x479, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(324)
inline void XL95::Application::PutAutoCorrect ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x479, VT_VARIANT, &_val);
}

#pragma implementation_key(325)
inline _variant_t XL95::Application::GetBuild ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x13a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(326)
inline void XL95::Application::PutBuild ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x13a, VT_VARIANT, &_val);
}

#pragma implementation_key(327)
inline _variant_t XL95::Application::GetCalculateBeforeSave ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x13b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(328)
inline void XL95::Application::PutCalculateBeforeSave ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x13b, VT_VARIANT, &_val);
}

#pragma implementation_key(329)
inline _variant_t XL95::Application::GetCalculation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x13c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(330)
inline void XL95::Application::PutCalculation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x13c, VT_VARIANT, &_val);
}

#pragma implementation_key(331)
inline _variant_t XL95::Application::GetCaller ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x13d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(332)
inline void XL95::Application::PutCaller ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x13d, VT_VARIANT, &_val);
}

#pragma implementation_key(333)
inline _variant_t XL95::Application::GetCanPlaySounds ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x13e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(334)
inline void XL95::Application::PutCanPlaySounds ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x13e, VT_VARIANT, &_val);
}

#pragma implementation_key(335)
inline _variant_t XL95::Application::GetCanRecordSounds ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x13f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(336)
inline void XL95::Application::PutCanRecordSounds ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x13f, VT_VARIANT, &_val);
}

#pragma implementation_key(337)
inline _variant_t XL95::Application::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(338)
inline void XL95::Application::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(339)
inline _variant_t XL95::Application::GetCellDragAndDrop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x140, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(340)
inline void XL95::Application::PutCellDragAndDrop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x140, VT_VARIANT, &_val);
}

#pragma implementation_key(341)
inline _variant_t XL95::Application::GetClipboardFormats ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x141, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(342)
inline void XL95::Application::PutClipboardFormats ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x141, VT_VARIANT, &_val);
}

#pragma implementation_key(343)
inline _variant_t XL95::Application::GetColorButtons ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x16d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(344)
inline void XL95::Application::PutColorButtons ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x16d, VT_VARIANT, &_val);
}

#pragma implementation_key(345)
inline _variant_t XL95::Application::GetCommandUnderlines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x143, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(346)
inline void XL95::Application::PutCommandUnderlines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x143, VT_VARIANT, &_val);
}

#pragma implementation_key(347)
inline _variant_t XL95::Application::GetConstrainNumeric ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x144, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(348)
inline void XL95::Application::PutConstrainNumeric ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x144, VT_VARIANT, &_val);
}

#pragma implementation_key(349)
inline _variant_t XL95::Application::GetCopyObjectsWithCells ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3df, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(350)
inline void XL95::Application::PutCopyObjectsWithCells ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3df, VT_VARIANT, &_val);
}

#pragma implementation_key(351)
inline _variant_t XL95::Application::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(352)
inline void XL95::Application::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(353)
inline _variant_t XL95::Application::GetCursor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x489, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(354)
inline void XL95::Application::PutCursor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x489, VT_VARIANT, &_val);
}

#pragma implementation_key(355)
inline _variant_t XL95::Application::GetCustomListCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x313, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(356)
inline void XL95::Application::PutCustomListCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x313, VT_VARIANT, &_val);
}

#pragma implementation_key(357)
inline _variant_t XL95::Application::GetCutCopyMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x14a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(358)
inline void XL95::Application::PutCutCopyMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x14a, VT_VARIANT, &_val);
}

#pragma implementation_key(359)
inline _variant_t XL95::Application::GetDataEntryMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x14b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(360)
inline void XL95::Application::PutDataEntryMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x14b, VT_VARIANT, &_val);
}

#pragma implementation_key(361)
inline _variant_t XL95::Application::GetDDEAppReturnCode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x14c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(362)
inline void XL95::Application::PutDDEAppReturnCode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x14c, VT_VARIANT, &_val);
}

#pragma implementation_key(363)
inline _variant_t XL95::Application::GetDefaultFilePath ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x40e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(364)
inline void XL95::Application::PutDefaultFilePath ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x40e, VT_VARIANT, &_val);
}

#pragma implementation_key(365)
inline _variant_t XL95::Application::GetDisplayAlerts ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x157, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(366)
inline void XL95::Application::PutDisplayAlerts ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x157, VT_VARIANT, &_val);
}

#pragma implementation_key(367)
inline _variant_t XL95::Application::GetDisplayClipboardWindow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x142, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(368)
inline void XL95::Application::PutDisplayClipboardWindow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x142, VT_VARIANT, &_val);
}

#pragma implementation_key(369)
inline _variant_t XL95::Application::GetDisplayExcel4Menus ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x39f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(370)
inline void XL95::Application::PutDisplayExcel4Menus ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x39f, VT_VARIANT, &_val);
}

#pragma implementation_key(371)
inline _variant_t XL95::Application::GetDisplayFormulaBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x158, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(372)
inline void XL95::Application::PutDisplayFormulaBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x158, VT_VARIANT, &_val);
}

#pragma implementation_key(373)
inline _variant_t XL95::Application::GetDisplayFullScreen ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x425, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(374)
inline void XL95::Application::PutDisplayFullScreen ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x425, VT_VARIANT, &_val);
}

#pragma implementation_key(375)
inline _variant_t XL95::Application::GetDisplayInfoWindow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2fd, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(376)
inline void XL95::Application::PutDisplayInfoWindow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2fd, VT_VARIANT, &_val);
}

#pragma implementation_key(377)
inline _variant_t XL95::Application::GetDisplayNoteIndicator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x159, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(378)
inline void XL95::Application::PutDisplayNoteIndicator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x159, VT_VARIANT, &_val);
}

#pragma implementation_key(379)
inline _variant_t XL95::Application::GetDisplayRecentFiles ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x39e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(380)
inline void XL95::Application::PutDisplayRecentFiles ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x39e, VT_VARIANT, &_val);
}

#pragma implementation_key(381)
inline _variant_t XL95::Application::GetDisplayScrollBars ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x15a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(382)
inline void XL95::Application::PutDisplayScrollBars ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x15a, VT_VARIANT, &_val);
}

#pragma implementation_key(383)
inline _variant_t XL95::Application::GetDisplayStatusBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x15b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(384)
inline void XL95::Application::PutDisplayStatusBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x15b, VT_VARIANT, &_val);
}

#pragma implementation_key(385)
inline _variant_t XL95::Application::GetEditDirectlyInCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3a1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(386)
inline void XL95::Application::PutEditDirectlyInCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3a1, VT_VARIANT, &_val);
}

#pragma implementation_key(387)
inline _variant_t XL95::Application::GetEnableAnimations ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x49c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(388)
inline void XL95::Application::PutEnableAnimations ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x49c, VT_VARIANT, &_val);
}

#pragma implementation_key(389)
inline _variant_t XL95::Application::GetEnableAutoComplete ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x49b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(390)
inline void XL95::Application::PutEnableAutoComplete ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x49b, VT_VARIANT, &_val);
}

#pragma implementation_key(391)
inline _variant_t XL95::Application::GetEnableCancelKey ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x448, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(392)
inline void XL95::Application::PutEnableCancelKey ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x448, VT_VARIANT, &_val);
}

#pragma implementation_key(393)
inline _variant_t XL95::Application::GetEnableTipWizard ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x428, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(394)
inline void XL95::Application::PutEnableTipWizard ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x428, VT_VARIANT, &_val);
}

#pragma implementation_key(395)
inline _variant_t XL95::Application::GetFileConverters ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3a3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(396)
inline void XL95::Application::PutFileConverters ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3a3, VT_VARIANT, &_val);
}

#pragma implementation_key(397)
inline _variant_t XL95::Application::GetFixedDecimal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x15f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(398)
inline void XL95::Application::PutFixedDecimal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x15f, VT_VARIANT, &_val);
}

#pragma implementation_key(399)
inline _variant_t XL95::Application::GetFixedDecimalPlaces ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x160, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(400)
inline void XL95::Application::PutFixedDecimalPlaces ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x160, VT_VARIANT, &_val);
}

#pragma implementation_key(401)
inline _variant_t XL95::Application::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(402)
inline void XL95::Application::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(403)
inline _variant_t XL95::Application::GetIgnoreRemoteRequests ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x164, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(404)
inline void XL95::Application::PutIgnoreRemoteRequests ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x164, VT_VARIANT, &_val);
}

#pragma implementation_key(405)
inline _variant_t XL95::Application::GetInteractive ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x169, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(406)
inline void XL95::Application::PutInteractive ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x169, VT_VARIANT, &_val);
}

#pragma implementation_key(407)
inline _variant_t XL95::Application::GetInternational ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x16a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(408)
inline void XL95::Application::PutInternational ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x16a, VT_VARIANT, &_val);
}

#pragma implementation_key(409)
inline _variant_t XL95::Application::GetIteration ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x16b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(410)
inline void XL95::Application::PutIteration ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x16b, VT_VARIANT, &_val);
}

#pragma implementation_key(411)
inline _variant_t XL95::Application::GetLargeButtons ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x16c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(412)
inline void XL95::Application::PutLargeButtons ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x16c, VT_VARIANT, &_val);
}

#pragma implementation_key(413)
inline _variant_t XL95::Application::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(414)
inline void XL95::Application::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(415)
inline _variant_t XL95::Application::GetLibraryPath ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x16e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(416)
inline void XL95::Application::PutLibraryPath ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x16e, VT_VARIANT, &_val);
}

#pragma implementation_key(417)
inline _variant_t XL95::Application::GetMailSession ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ae, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(418)
inline void XL95::Application::PutMailSession ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ae, VT_VARIANT, &_val);
}

#pragma implementation_key(419)
inline _variant_t XL95::Application::GetMailSystem ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3cb, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(420)
inline void XL95::Application::PutMailSystem ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3cb, VT_VARIANT, &_val);
}

#pragma implementation_key(421)
inline _variant_t XL95::Application::GetMathCoprocessorAvailable ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x16f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(422)
inline void XL95::Application::PutMathCoprocessorAvailable ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x16f, VT_VARIANT, &_val);
}

#pragma implementation_key(423)
inline _variant_t XL95::Application::GetMaxChange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x170, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(424)
inline void XL95::Application::PutMaxChange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x170, VT_VARIANT, &_val);
}

#pragma implementation_key(425)
inline _variant_t XL95::Application::GetMaxIterations ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x171, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(426)
inline void XL95::Application::PutMaxIterations ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x171, VT_VARIANT, &_val);
}

#pragma implementation_key(427)
inline _variant_t XL95::Application::GetMemoryFree ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x172, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(428)
inline void XL95::Application::PutMemoryFree ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x172, VT_VARIANT, &_val);
}

#pragma implementation_key(429)
inline _variant_t XL95::Application::GetMemoryTotal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x173, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(430)
inline void XL95::Application::PutMemoryTotal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x173, VT_VARIANT, &_val);
}

#pragma implementation_key(431)
inline _variant_t XL95::Application::GetMemoryUsed ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x174, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(432)
inline void XL95::Application::PutMemoryUsed ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x174, VT_VARIANT, &_val);
}

#pragma implementation_key(433)
inline _variant_t XL95::Application::GetMouseAvailable ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x175, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(434)
inline void XL95::Application::PutMouseAvailable ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x175, VT_VARIANT, &_val);
}

#pragma implementation_key(435)
inline _variant_t XL95::Application::GetMoveAfterReturn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x176, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(436)
inline void XL95::Application::PutMoveAfterReturn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x176, VT_VARIANT, &_val);
}

#pragma implementation_key(437)
inline _variant_t XL95::Application::GetMoveAfterReturnDirection ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x478, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(438)
inline void XL95::Application::PutMoveAfterReturnDirection ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x478, VT_VARIANT, &_val);
}

#pragma implementation_key(439)
inline _variant_t XL95::Application::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(440)
inline void XL95::Application::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(441)
inline _variant_t XL95::Application::GetNetworkTemplatesPath ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x184, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(442)
inline void XL95::Application::PutNetworkTemplatesPath ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x184, VT_VARIANT, &_val);
}

#pragma implementation_key(443)
inline _variant_t XL95::Application::GetOnCalculate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(444)
inline void XL95::Application::PutOnCalculate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271, VT_VARIANT, &_val);
}

#pragma implementation_key(445)
inline _variant_t XL95::Application::GetOnData ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x275, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(446)
inline void XL95::Application::PutOnData ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x275, VT_VARIANT, &_val);
}

#pragma implementation_key(447)
inline _variant_t XL95::Application::GetOnDoubleClick ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x274, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(448)
inline void XL95::Application::PutOnDoubleClick ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x274, VT_VARIANT, &_val);
}

#pragma implementation_key(449)
inline _variant_t XL95::Application::GetOnEntry ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(450)
inline void XL95::Application::PutOnEntry ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273, VT_VARIANT, &_val);
}

#pragma implementation_key(451)
inline _variant_t XL95::Application::GetOnSheetActivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x407, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(452)
inline void XL95::Application::PutOnSheetActivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x407, VT_VARIANT, &_val);
}

#pragma implementation_key(453)
inline _variant_t XL95::Application::GetOnSheetDeactivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x439, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(454)
inline void XL95::Application::PutOnSheetDeactivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x439, VT_VARIANT, &_val);
}

#pragma implementation_key(455)
inline _variant_t XL95::Application::GetOnWindow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(456)
inline void XL95::Application::PutOnWindow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26f, VT_VARIANT, &_val);
}

#pragma implementation_key(457)
inline _variant_t XL95::Application::GetOperatingSystem ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x177, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(458)
inline void XL95::Application::PutOperatingSystem ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x177, VT_VARIANT, &_val);
}

#pragma implementation_key(459)
inline _variant_t XL95::Application::GetOrganizationName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x178, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(460)
inline void XL95::Application::PutOrganizationName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x178, VT_VARIANT, &_val);
}

#pragma implementation_key(461)
inline _variant_t XL95::Application::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(462)
inline void XL95::Application::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(463)
inline _variant_t XL95::Application::GetPath ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x123, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(464)
inline void XL95::Application::PutPath ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x123, VT_VARIANT, &_val);
}

#pragma implementation_key(465)
inline _variant_t XL95::Application::GetPathSeparator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x179, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(466)
inline void XL95::Application::PutPathSeparator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x179, VT_VARIANT, &_val);
}

#pragma implementation_key(467)
inline _variant_t XL95::Application::GetPreviousSelections ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x17a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(468)
inline void XL95::Application::PutPreviousSelections ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x17a, VT_VARIANT, &_val);
}

#pragma implementation_key(469)
inline _variant_t XL95::Application::GetPromptForSummaryInfo ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x426, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(470)
inline void XL95::Application::PutPromptForSummaryInfo ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x426, VT_VARIANT, &_val);
}

#pragma implementation_key(471)
inline _variant_t XL95::Application::GetRecordRelative ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x17b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(472)
inline void XL95::Application::PutRecordRelative ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x17b, VT_VARIANT, &_val);
}

#pragma implementation_key(473)
inline _variant_t XL95::Application::GetReferenceStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x17c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(474)
inline void XL95::Application::PutReferenceStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x17c, VT_VARIANT, &_val);
}

#pragma implementation_key(475)
inline _variant_t XL95::Application::GetRegisteredFunctions ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x307, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(476)
inline void XL95::Application::PutRegisteredFunctions ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x307, VT_VARIANT, &_val);
}

#pragma implementation_key(477)
inline _variant_t XL95::Application::GetScreenUpdating ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x17e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(478)
inline void XL95::Application::PutScreenUpdating ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x17e, VT_VARIANT, &_val);
}

#pragma implementation_key(479)
inline _variant_t XL95::Application::GetSelection ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x93, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(480)
inline void XL95::Application::PutSelection ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x93, VT_VARIANT, &_val);
}

#pragma implementation_key(481)
inline _variant_t XL95::Application::GetSheetsInNewWorkbook ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(482)
inline void XL95::Application::PutSheetsInNewWorkbook ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e1, VT_VARIANT, &_val);
}

#pragma implementation_key(483)
inline _variant_t XL95::Application::GetShowToolTips ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x183, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(484)
inline void XL95::Application::PutShowToolTips ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x183, VT_VARIANT, &_val);
}

#pragma implementation_key(485)
inline _variant_t XL95::Application::GetStandardFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x39c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(486)
inline void XL95::Application::PutStandardFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x39c, VT_VARIANT, &_val);
}

#pragma implementation_key(487)
inline _variant_t XL95::Application::GetStandardFontSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x39d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(488)
inline void XL95::Application::PutStandardFontSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x39d, VT_VARIANT, &_val);
}

#pragma implementation_key(489)
inline _variant_t XL95::Application::GetStartupPath ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x181, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(490)
inline void XL95::Application::PutStartupPath ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x181, VT_VARIANT, &_val);
}

#pragma implementation_key(491)
inline _variant_t XL95::Application::GetStatusBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x182, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(492)
inline void XL95::Application::PutStatusBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x182, VT_VARIANT, &_val);
}

#pragma implementation_key(493)
inline _variant_t XL95::Application::GetTemplatesPath ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x17d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(494)
inline void XL95::Application::PutTemplatesPath ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x17d, VT_VARIANT, &_val);
}

#pragma implementation_key(495)
inline _variant_t XL95::Application::GetThisWorkbook ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x30a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(496)
inline void XL95::Application::PutThisWorkbook ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x30a, VT_VARIANT, &_val);
}

#pragma implementation_key(497)
inline _variant_t XL95::Application::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(498)
inline void XL95::Application::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(499)
inline _variant_t XL95::Application::GetTransitionMenuKey ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x136, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(500)
inline void XL95::Application::PutTransitionMenuKey ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x136, VT_VARIANT, &_val);
}

#pragma implementation_key(501)
inline _variant_t XL95::Application::GetTransitionMenuKeyAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x137, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(502)
inline void XL95::Application::PutTransitionMenuKeyAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x137, VT_VARIANT, &_val);
}

#pragma implementation_key(503)
inline _variant_t XL95::Application::GetTransitionNavigKeys ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x138, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(504)
inline void XL95::Application::PutTransitionNavigKeys ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x138, VT_VARIANT, &_val);
}

#pragma implementation_key(505)
inline _variant_t XL95::Application::GetUsableHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x185, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(506)
inline void XL95::Application::PutUsableHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x185, VT_VARIANT, &_val);
}

#pragma implementation_key(507)
inline _variant_t XL95::Application::GetUsableWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x186, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(508)
inline void XL95::Application::PutUsableWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x186, VT_VARIANT, &_val);
}

#pragma implementation_key(509)
inline _variant_t XL95::Application::GetUserName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x187, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(510)
inline void XL95::Application::PutUserName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x187, VT_VARIANT, &_val);
}

#pragma implementation_key(511)
inline _variant_t XL95::Application::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(512)
inline void XL95::Application::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(513)
inline _variant_t XL95::Application::GetVersion ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x188, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(514)
inline void XL95::Application::PutVersion ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x188, VT_VARIANT, &_val);
}

#pragma implementation_key(515)
inline _variant_t XL95::Application::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(516)
inline void XL95::Application::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(517)
inline _variant_t XL95::Application::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(518)
inline void XL95::Application::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(519)
inline _variant_t XL95::Application::GetWindowsForPens ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x18b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(520)
inline void XL95::Application::PutWindowsForPens ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x18b, VT_VARIANT, &_val);
}

#pragma implementation_key(521)
inline _variant_t XL95::Application::GetWindowState ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x18c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(522)
inline void XL95::Application::PutWindowState ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x18c, VT_VARIANT, &_val);
}

//
// dispinterface Style wrapper method implementations
//

#pragma implementation_key(523)
inline _variant_t XL95::Style::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(524)
inline _variant_t XL95::Style::Borders ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1b3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(525)
inline _variant_t XL95::Style::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(526)
inline _variant_t XL95::Style::GetAddIndent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x427, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(527)
inline void XL95::Style::PutAddIndent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x427, VT_VARIANT, &_val);
}

#pragma implementation_key(528)
inline _variant_t XL95::Style::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(529)
inline void XL95::Style::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(530)
inline _variant_t XL95::Style::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(531)
inline void XL95::Style::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(532)
inline _variant_t XL95::Style::GetFormulaHidden ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x106, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(533)
inline void XL95::Style::PutFormulaHidden ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x106, VT_VARIANT, &_val);
}

#pragma implementation_key(534)
inline _variant_t XL95::Style::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(535)
inline void XL95::Style::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(536)
inline _variant_t XL95::Style::GetIncludeAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x19d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(537)
inline void XL95::Style::PutIncludeAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x19d, VT_VARIANT, &_val);
}

#pragma implementation_key(538)
inline _variant_t XL95::Style::GetIncludeBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x19e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(539)
inline void XL95::Style::PutIncludeBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x19e, VT_VARIANT, &_val);
}

#pragma implementation_key(540)
inline _variant_t XL95::Style::GetIncludeFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x19f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(541)
inline void XL95::Style::PutIncludeFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x19f, VT_VARIANT, &_val);
}

#pragma implementation_key(542)
inline _variant_t XL95::Style::GetIncludeNumber ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1a0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(543)
inline void XL95::Style::PutIncludeNumber ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1a0, VT_VARIANT, &_val);
}

#pragma implementation_key(544)
inline _variant_t XL95::Style::GetIncludePatterns ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1a1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(545)
inline void XL95::Style::PutIncludePatterns ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1a1, VT_VARIANT, &_val);
}

#pragma implementation_key(546)
inline _variant_t XL95::Style::GetIncludeProtection ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1a2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(547)
inline void XL95::Style::PutIncludeProtection ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1a2, VT_VARIANT, &_val);
}

#pragma implementation_key(548)
inline _variant_t XL95::Style::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(549)
inline void XL95::Style::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(550)
inline _variant_t XL95::Style::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(551)
inline void XL95::Style::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(552)
inline _variant_t XL95::Style::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(553)
inline void XL95::Style::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(554)
inline _variant_t XL95::Style::GetNameLocal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3a9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(555)
inline void XL95::Style::PutNameLocal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3a9, VT_VARIANT, &_val);
}

#pragma implementation_key(556)
inline _variant_t XL95::Style::GetNumberFormat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(557)
inline void XL95::Style::PutNumberFormat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc1, VT_VARIANT, &_val);
}

#pragma implementation_key(558)
inline _variant_t XL95::Style::GetNumberFormatLocal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x449, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(559)
inline void XL95::Style::PutNumberFormatLocal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x449, VT_VARIANT, &_val);
}

#pragma implementation_key(560)
inline _variant_t XL95::Style::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(561)
inline void XL95::Style::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(562)
inline _variant_t XL95::Style::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(563)
inline void XL95::Style::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(564)
inline _variant_t XL95::Style::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(565)
inline void XL95::Style::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(566)
inline _variant_t XL95::Style::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(567)
inline void XL95::Style::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

#pragma implementation_key(568)
inline _variant_t XL95::Style::GetWrapText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x114, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(569)
inline void XL95::Style::PutWrapText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x114, VT_VARIANT, &_val);
}

//
// dispinterface Styles wrapper method implementations
//

#pragma implementation_key(570)
inline _variant_t XL95::Styles::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(571)
inline _variant_t XL95::Styles::Add ( const _variant_t & Name, const _variant_t & BasedOn ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Name, &BasedOn);
    return _variant_t(_result, false);
}

#pragma implementation_key(572)
inline _variant_t XL95::Styles::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(573)
inline _variant_t XL95::Styles::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(574)
inline _variant_t XL95::Styles::Merge ( const _variant_t & Workbook ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x234, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Workbook);
    return _variant_t(_result, false);
}

#pragma implementation_key(575)
inline _variant_t XL95::Styles::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(576)
inline void XL95::Styles::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(577)
inline _variant_t XL95::Styles::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(578)
inline void XL95::Styles::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(579)
inline _variant_t XL95::Styles::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(580)
inline void XL95::Styles::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Toolbar wrapper method implementations
//

#pragma implementation_key(581)
inline _variant_t XL95::Toolbar::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(582)
inline _variant_t XL95::Toolbar::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(583)
inline _variant_t XL95::Toolbar::Reset ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x22b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(584)
inline _variant_t XL95::Toolbar::ToolbarButtons ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3c4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(585)
inline _variant_t XL95::Toolbar::GetBuiltIn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x229, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(586)
inline void XL95::Toolbar::PutBuiltIn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x229, VT_VARIANT, &_val);
}

#pragma implementation_key(587)
inline _variant_t XL95::Toolbar::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(588)
inline void XL95::Toolbar::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(589)
inline _variant_t XL95::Toolbar::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(590)
inline void XL95::Toolbar::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(591)
inline _variant_t XL95::Toolbar::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(592)
inline void XL95::Toolbar::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(593)
inline _variant_t XL95::Toolbar::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(594)
inline void XL95::Toolbar::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(595)
inline _variant_t XL95::Toolbar::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(596)
inline void XL95::Toolbar::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(597)
inline _variant_t XL95::Toolbar::GetPosition ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x85, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(598)
inline void XL95::Toolbar::PutPosition ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x85, VT_VARIANT, &_val);
}

#pragma implementation_key(599)
inline _variant_t XL95::Toolbar::GetProtection ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(600)
inline void XL95::Toolbar::PutProtection ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb0, VT_VARIANT, &_val);
}

#pragma implementation_key(601)
inline _variant_t XL95::Toolbar::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(602)
inline void XL95::Toolbar::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(603)
inline _variant_t XL95::Toolbar::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(604)
inline void XL95::Toolbar::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(605)
inline _variant_t XL95::Toolbar::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(606)
inline void XL95::Toolbar::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

//
// dispinterface Toolbars wrapper method implementations
//

#pragma implementation_key(607)
inline _variant_t XL95::Toolbars::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(608)
inline _variant_t XL95::Toolbars::Add ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(609)
inline _variant_t XL95::Toolbars::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(610)
inline _variant_t XL95::Toolbars::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(611)
inline _variant_t XL95::Toolbars::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(612)
inline void XL95::Toolbars::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(613)
inline _variant_t XL95::Toolbars::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(614)
inline void XL95::Toolbars::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(615)
inline _variant_t XL95::Toolbars::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(616)
inline void XL95::Toolbars::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface ToolbarButton wrapper method implementations
//

#pragma implementation_key(617)
inline _variant_t XL95::ToolbarButton::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(618)
inline _variant_t XL95::ToolbarButton::Copy ( const _variant_t & Toolbar, const _variant_t & Before ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &Toolbar, &Before);
    return _variant_t(_result, false);
}

#pragma implementation_key(619)
inline _variant_t XL95::ToolbarButton::CopyFace ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3c6, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(620)
inline _variant_t XL95::ToolbarButton::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(621)
inline _variant_t XL95::ToolbarButton::Edit ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x232, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(622)
inline _variant_t XL95::ToolbarButton::Move ( const _variant_t & Toolbar, const _variant_t & Before ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &Toolbar, &Before);
    return _variant_t(_result, false);
}

#pragma implementation_key(623)
inline _variant_t XL95::ToolbarButton::PasteFace ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3c7, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(624)
inline _variant_t XL95::ToolbarButton::Reset ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x22b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(625)
inline _variant_t XL95::ToolbarButton::GetBuiltIn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x229, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(626)
inline void XL95::ToolbarButton::PutBuiltIn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x229, VT_VARIANT, &_val);
}

#pragma implementation_key(627)
inline _variant_t XL95::ToolbarButton::GetBuiltInFace ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(628)
inline void XL95::ToolbarButton::PutBuiltInFace ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22a, VT_VARIANT, &_val);
}

#pragma implementation_key(629)
inline _variant_t XL95::ToolbarButton::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(630)
inline void XL95::ToolbarButton::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(631)
inline _variant_t XL95::ToolbarButton::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(632)
inline void XL95::ToolbarButton::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(633)
inline _variant_t XL95::ToolbarButton::GetHelpContextID ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x163, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(634)
inline void XL95::ToolbarButton::PutHelpContextID ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x163, VT_VARIANT, &_val);
}

#pragma implementation_key(635)
inline _variant_t XL95::ToolbarButton::GetHelpFile ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x168, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(636)
inline void XL95::ToolbarButton::PutHelpFile ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x168, VT_VARIANT, &_val);
}

#pragma implementation_key(637)
inline _variant_t XL95::ToolbarButton::GetId ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x23a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(638)
inline void XL95::ToolbarButton::PutId ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x23a, VT_VARIANT, &_val);
}

#pragma implementation_key(639)
inline _variant_t XL95::ToolbarButton::GetIsGap ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x231, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(640)
inline void XL95::ToolbarButton::PutIsGap ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x231, VT_VARIANT, &_val);
}

#pragma implementation_key(641)
inline _variant_t XL95::ToolbarButton::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(642)
inline void XL95::ToolbarButton::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(643)
inline _variant_t XL95::ToolbarButton::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(644)
inline void XL95::ToolbarButton::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(645)
inline _variant_t XL95::ToolbarButton::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(646)
inline void XL95::ToolbarButton::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(647)
inline _variant_t XL95::ToolbarButton::GetPushed ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x230, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(648)
inline void XL95::ToolbarButton::PutPushed ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x230, VT_VARIANT, &_val);
}

#pragma implementation_key(649)
inline _variant_t XL95::ToolbarButton::GetStatusBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x182, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(650)
inline void XL95::ToolbarButton::PutStatusBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x182, VT_VARIANT, &_val);
}

#pragma implementation_key(651)
inline _variant_t XL95::ToolbarButton::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(652)
inline void XL95::ToolbarButton::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

//
// dispinterface ToolbarButtons wrapper method implementations
//

#pragma implementation_key(653)
inline _variant_t XL95::ToolbarButtons::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(654)
inline _variant_t XL95::ToolbarButtons::Add ( const _variant_t & Button, const _variant_t & Before, const _variant_t & OnAction, const _variant_t & Pushed, const _variant_t & Enabled, const _variant_t & StatusBar, const _variant_t & HelpFile, const _variant_t & HelpContextID ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Button, &Before, &OnAction, &Pushed, &Enabled, &StatusBar, &HelpFile, &HelpContextID);
    return _variant_t(_result, false);
}

#pragma implementation_key(655)
inline _variant_t XL95::ToolbarButtons::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(656)
inline _variant_t XL95::ToolbarButtons::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(657)
inline _variant_t XL95::ToolbarButtons::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(658)
inline void XL95::ToolbarButtons::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(659)
inline _variant_t XL95::ToolbarButtons::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(660)
inline void XL95::ToolbarButtons::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(661)
inline _variant_t XL95::ToolbarButtons::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(662)
inline void XL95::ToolbarButtons::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface AddIn wrapper method implementations
//

#pragma implementation_key(663)
inline _variant_t XL95::AddIn::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(664)
inline _variant_t XL95::AddIn::GetAuthor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x23e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(665)
inline void XL95::AddIn::PutAuthor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x23e, VT_VARIANT, &_val);
}

#pragma implementation_key(666)
inline _variant_t XL95::AddIn::GetComments ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x23f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(667)
inline void XL95::AddIn::PutComments ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x23f, VT_VARIANT, &_val);
}

#pragma implementation_key(668)
inline _variant_t XL95::AddIn::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(669)
inline void XL95::AddIn::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(670)
inline _variant_t XL95::AddIn::GetFullName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x121, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(671)
inline void XL95::AddIn::PutFullName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x121, VT_VARIANT, &_val);
}

#pragma implementation_key(672)
inline _variant_t XL95::AddIn::GetInstalled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x226, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(673)
inline void XL95::AddIn::PutInstalled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x226, VT_VARIANT, &_val);
}

#pragma implementation_key(674)
inline _variant_t XL95::AddIn::GetKeywords ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x241, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(675)
inline void XL95::AddIn::PutKeywords ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x241, VT_VARIANT, &_val);
}

#pragma implementation_key(676)
inline _variant_t XL95::AddIn::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(677)
inline void XL95::AddIn::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(678)
inline _variant_t XL95::AddIn::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(679)
inline void XL95::AddIn::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(680)
inline _variant_t XL95::AddIn::GetPath ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x123, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(681)
inline void XL95::AddIn::PutPath ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x123, VT_VARIANT, &_val);
}

#pragma implementation_key(682)
inline _variant_t XL95::AddIn::GetSubject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(683)
inline void XL95::AddIn::PutSubject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b9, VT_VARIANT, &_val);
}

#pragma implementation_key(684)
inline _variant_t XL95::AddIn::GetTitle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(685)
inline void XL95::AddIn::PutTitle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc7, VT_VARIANT, &_val);
}

//
// dispinterface AddIns wrapper method implementations
//

#pragma implementation_key(686)
inline _variant_t XL95::AddIns::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(687)
inline _variant_t XL95::AddIns::Add ( const _variant_t & Filename, const _variant_t & CopyFile ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Filename, &CopyFile);
    return _variant_t(_result, false);
}

#pragma implementation_key(688)
inline _variant_t XL95::AddIns::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(689)
inline _variant_t XL95::AddIns::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(690)
inline _variant_t XL95::AddIns::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(691)
inline void XL95::AddIns::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(692)
inline _variant_t XL95::AddIns::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(693)
inline void XL95::AddIns::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(694)
inline _variant_t XL95::AddIns::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(695)
inline void XL95::AddIns::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Areas wrapper method implementations
//

#pragma implementation_key(696)
inline _variant_t XL95::Areas::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(697)
inline _variant_t XL95::Areas::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(698)
inline _variant_t XL95::Areas::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(699)
inline _variant_t XL95::Areas::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(700)
inline void XL95::Areas::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(701)
inline _variant_t XL95::Areas::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(702)
inline void XL95::Areas::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(703)
inline _variant_t XL95::Areas::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(704)
inline void XL95::Areas::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Range wrapper method implementations
//

#pragma implementation_key(705)
inline _variant_t XL95::Range::_Dummy ( const _variant_t & Activate, const _variant_t & DirectObject ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Activate, &DirectObject);
    return _variant_t(_result, false);
}

#pragma implementation_key(706)
inline _variant_t XL95::Range::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(707)
inline _variant_t XL95::Range::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(708)
inline _variant_t XL95::Range::Address ( const _variant_t & RowAbsolute, const _variant_t & ColumnAbsolute, const _variant_t & ReferenceStyle, const _variant_t & External, const _variant_t & RelativeTo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xec, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &RowAbsolute, &ColumnAbsolute, &ReferenceStyle, &External, &RelativeTo);
    return _variant_t(_result, false);
}

#pragma implementation_key(709)
inline _variant_t XL95::Range::AddressLocal ( const _variant_t & RowAbsolute, const _variant_t & ColumnAbsolute, const _variant_t & ReferenceStyle, const _variant_t & External, const _variant_t & RelativeTo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1b5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &RowAbsolute, &ColumnAbsolute, &ReferenceStyle, &External, &RelativeTo);
    return _variant_t(_result, false);
}

#pragma implementation_key(710)
inline _variant_t XL95::Range::AdvancedFilter ( const _variant_t & Action, const _variant_t & CriteriaRange, const _variant_t & CopyToRange, const _variant_t & Unique ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x36c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c", &Action, &CriteriaRange, &CopyToRange, &Unique);
    return _variant_t(_result, false);
}

#pragma implementation_key(711)
inline _variant_t XL95::Range::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(712)
inline _variant_t XL95::Range::ApplyNames ( const _variant_t & Names, const _variant_t & IgnoreRelativeAbsolute, const _variant_t & UseRowColumnNames, const _variant_t & OmitColumn, const _variant_t & OmitRow, const _variant_t & Order, const _variant_t & AppendLast ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1b9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Names, &IgnoreRelativeAbsolute, &UseRowColumnNames, &OmitColumn, &OmitRow, &Order, &AppendLast);
    return _variant_t(_result, false);
}

#pragma implementation_key(713)
inline _variant_t XL95::Range::ApplyOutlineStyles ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1c0, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(714)
inline _variant_t XL95::Range::Areas ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x238, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(715)
inline _variant_t XL95::Range::AutoComplete ( const _variant_t & String ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4a1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &String);
    return _variant_t(_result, false);
}

#pragma implementation_key(716)
inline _variant_t XL95::Range::AutoFill ( const _variant_t & Destination, const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1c1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Destination, &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(717)
inline _variant_t XL95::Range::AutoFilter ( const _variant_t & Field, const _variant_t & Criteria1, const _variant_t & Operator, const _variant_t & Criteria2 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x319, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Field, &Criteria1, &Operator, &Criteria2);
    return _variant_t(_result, false);
}

#pragma implementation_key(718)
inline _variant_t XL95::Range::AutoFit ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xed, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(719)
inline _variant_t XL95::Range::AutoFormat ( const _variant_t & Format, const _variant_t & Number, const _variant_t & Font, const _variant_t & Alignment, const _variant_t & Border, const _variant_t & Pattern, const _variant_t & Width ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Format, &Number, &Font, &Alignment, &Border, &Pattern, &Width);
    return _variant_t(_result, false);
}

#pragma implementation_key(720)
inline _variant_t XL95::Range::AutoOutline ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(721)
inline _variant_t XL95::Range::BorderAround ( const _variant_t & LineStyle, const _variant_t & Weight, const _variant_t & ColorIndex, const _variant_t & Color ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x42b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &LineStyle, &Weight, &ColorIndex, &Color);
    return _variant_t(_result, false);
}

#pragma implementation_key(722)
inline _variant_t XL95::Range::Borders ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1b3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(723)
inline _variant_t XL95::Range::Calculate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x117, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(724)
inline _variant_t XL95::Range::Cells ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xee, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &RowIndex, &ColumnIndex);
    return _variant_t(_result, false);
}

#pragma implementation_key(725)
inline _variant_t XL95::Range::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(726)
inline _variant_t XL95::Range::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(727)
inline _variant_t XL95::Range::Clear ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(728)
inline _variant_t XL95::Range::ClearContents ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(729)
inline _variant_t XL95::Range::ClearFormats ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(730)
inline _variant_t XL95::Range::ClearNotes ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xef, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(731)
inline _variant_t XL95::Range::ClearOutline ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(732)
inline _variant_t XL95::Range::ColumnDifferences ( const _variant_t & Comparison ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1fe, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Comparison);
    return _variant_t(_result, false);
}

#pragma implementation_key(733)
inline _variant_t XL95::Range::Columns ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(734)
inline _variant_t XL95::Range::Consolidate ( const _variant_t & Sources, const _variant_t & Function, const _variant_t & TopRow, const _variant_t & LeftColumn, const _variant_t & CreateLinks ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1e2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &Sources, &Function, &TopRow, &LeftColumn, &CreateLinks);
    return _variant_t(_result, false);
}

#pragma implementation_key(735)
inline _variant_t XL95::Range::Copy ( const _variant_t & Destination ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Destination);
    return _variant_t(_result, false);
}

#pragma implementation_key(736)
inline _variant_t XL95::Range::CopyFromRecordset ( const _variant_t & Data, const _variant_t & MaxRows, const _variant_t & MaxColumns ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x480, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c", &Data, &MaxRows, &MaxColumns);
    return _variant_t(_result, false);
}

#pragma implementation_key(737)
inline _variant_t XL95::Range::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(738)
inline _variant_t XL95::Range::CreateNames ( const _variant_t & Top, const _variant_t & Left, const _variant_t & Bottom, const _variant_t & Right ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1c9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Top, &Left, &Bottom, &Right);
    return _variant_t(_result, false);
}

#pragma implementation_key(739)
inline _variant_t XL95::Range::CreatePublisher ( const _variant_t & Edition, const _variant_t & Appearance, const _variant_t & ContainsPICT, const _variant_t & ContainsBIFF, const _variant_t & ContainsRTF, const _variant_t & ContainsVALU ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ca, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c", &Edition, &Appearance, &ContainsPICT, &ContainsBIFF, &ContainsRTF, &ContainsVALU);
    return _variant_t(_result, false);
}

#pragma implementation_key(740)
inline _variant_t XL95::Range::Cut ( const _variant_t & Destination ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Destination);
    return _variant_t(_result, false);
}

#pragma implementation_key(741)
inline _variant_t XL95::Range::DataSeries ( const _variant_t & Rowcol, const _variant_t & Type, const _variant_t & Date, const _variant_t & Step, const _variant_t & Stop, const _variant_t & Trend ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1d0, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c", &Rowcol, &Type, &Date, &Step, &Stop, &Trend);
    return _variant_t(_result, false);
}

#pragma implementation_key(742)
inline _variant_t XL95::Range::Delete ( const _variant_t & Shift ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Shift);
    return _variant_t(_result, false);
}

#pragma implementation_key(743)
inline _variant_t XL95::Range::DialogBoxXL ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(744)
inline _variant_t XL95::Range::End ( const _variant_t & Direction ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Direction);
    return _variant_t(_result, false);
}

#pragma implementation_key(745)
inline _variant_t XL95::Range::FillDown ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(746)
inline _variant_t XL95::Range::FillLeft ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(747)
inline _variant_t XL95::Range::FillRight ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(748)
inline _variant_t XL95::Range::FillUp ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(749)
inline _variant_t XL95::Range::Find ( const _variant_t & What, const _variant_t & After, const _variant_t & LookIn, const _variant_t & LookAt, const _variant_t & SearchOrder, const _variant_t & SearchDirection, const _variant_t & MatchCase, const _variant_t & MatchByte ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x18e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &What, &After, &LookIn, &LookAt, &SearchOrder, &SearchDirection, &MatchCase, &MatchByte);
    return _variant_t(_result, false);
}

#pragma implementation_key(750)
inline _variant_t XL95::Range::FindNext ( const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x18f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(751)
inline _variant_t XL95::Range::FindPrevious ( const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x190, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(752)
inline _variant_t XL95::Range::FunctionWizard ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x23b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(753)
inline _variant_t XL95::Range::GoalSeek ( const _variant_t & Goal, const _variant_t & ChangingCell ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1d8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &Goal, &ChangingCell);
    return _variant_t(_result, false);
}

#pragma implementation_key(754)
inline _variant_t XL95::Range::Group ( const _variant_t & Start, const _variant_t & End, const _variant_t & By, const _variant_t & Periods ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Start, &End, &By, &Periods);
    return _variant_t(_result, false);
}

#pragma implementation_key(755)
inline _variant_t XL95::Range::Insert ( const _variant_t & Shift ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Shift);
    return _variant_t(_result, false);
}

#pragma implementation_key(756)
inline _variant_t XL95::Range::Item ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &RowIndex, &ColumnIndex);
    return _variant_t(_result, false);
}

#pragma implementation_key(757)
inline _variant_t XL95::Range::Justify ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ef, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(758)
inline _variant_t XL95::Range::ListNames ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfd, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(759)
inline _variant_t XL95::Range::NavigateArrow ( const _variant_t & TowardPrecedent, const _variant_t & ArrowNumber, const _variant_t & LinkNumber ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x408, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &TowardPrecedent, &ArrowNumber, &LinkNumber);
    return _variant_t(_result, false);
}

#pragma implementation_key(760)
inline _variant_t XL95::Range::NoteText ( const _variant_t & Text, const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x467, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Text, &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(761)
inline _variant_t XL95::Range::Offset ( const _variant_t & RowOffset, const _variant_t & ColumnOffset ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfe, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &RowOffset, &ColumnOffset);
    return _variant_t(_result, false);
}

#pragma implementation_key(762)
inline _variant_t XL95::Range::Parse ( const _variant_t & ParseLine, const _variant_t & Destination ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1dd, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &ParseLine, &Destination);
    return _variant_t(_result, false);
}

#pragma implementation_key(763)
inline _variant_t XL95::Range::PasteSpecial ( const _variant_t & Paste, const _variant_t & Operation, const _variant_t & SkipBlanks, const _variant_t & Transpose ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x403, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Paste, &Operation, &SkipBlanks, &Transpose);
    return _variant_t(_result, false);
}

#pragma implementation_key(764)
inline _variant_t XL95::Range::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(765)
inline _variant_t XL95::Range::PrintPreview ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(766)
inline _variant_t XL95::Range::_Range ( const _variant_t & Cell1, const _variant_t & Cell2 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xc5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Cell1, &Cell2);
    return _variant_t(_result, false);
}

#pragma implementation_key(767)
inline _variant_t XL95::Range::RemoveSubtotal ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x373, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(768)
inline _variant_t XL95::Range::Replace ( const _variant_t & What, const _variant_t & Replacement, const _variant_t & LookAt, const _variant_t & SearchOrder, const _variant_t & MatchCase, const _variant_t & MatchByte ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xe2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c\x080c\x080c", &What, &Replacement, &LookAt, &SearchOrder, &MatchCase, &MatchByte);
    return _variant_t(_result, false);
}

#pragma implementation_key(769)
inline _variant_t XL95::Range::Resize ( const _variant_t & RowSize, const _variant_t & ColumnSize ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x100, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &RowSize, &ColumnSize);
    return _variant_t(_result, false);
}

#pragma implementation_key(770)
inline _variant_t XL95::Range::RowDifferences ( const _variant_t & Comparison ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ff, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Comparison);
    return _variant_t(_result, false);
}

#pragma implementation_key(771)
inline _variant_t XL95::Range::Rows ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x102, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(772)
inline _variant_t XL95::Range::Run ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x103, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Arg1, &Arg2, &Arg3, &Arg4, &Arg5, &Arg6, &Arg7, &Arg8, &Arg9, &Arg10, &Arg11, &Arg12, &Arg13, &Arg14, &Arg15, &Arg16, &Arg17, &Arg18, &Arg19, &Arg20, &Arg21, &Arg22, &Arg23, &Arg24, &Arg25, &Arg26, &Arg27, &Arg28, &Arg29, &Arg30);
    return _variant_t(_result, false);
}

#pragma implementation_key(773)
inline _variant_t XL95::Range::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(774)
inline _variant_t XL95::Range::Show ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f0, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(775)
inline _variant_t XL95::Range::ShowDependents ( const _variant_t & Remove ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x36d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Remove);
    return _variant_t(_result, false);
}

#pragma implementation_key(776)
inline _variant_t XL95::Range::ShowErrors ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x36e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(777)
inline _variant_t XL95::Range::ShowPrecedents ( const _variant_t & Remove ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x36f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Remove);
    return _variant_t(_result, false);
}

#pragma implementation_key(778)
inline _variant_t XL95::Range::Sort ( const _variant_t & Key1, const _variant_t & Order1, const _variant_t & Key2, const _variant_t & Type, const _variant_t & Order2, const _variant_t & Key3, const _variant_t & Order3, const _variant_t & Header, const _variant_t & OrderCustom, const _variant_t & MatchCase, const _variant_t & Orientation ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x370, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Key1, &Order1, &Key2, &Type, &Order2, &Key3, &Order3, &Header, &OrderCustom, &MatchCase, &Orientation);
    return _variant_t(_result, false);
}

#pragma implementation_key(779)
inline _variant_t XL95::Range::SortSpecial ( const _variant_t & SortMethod, const _variant_t & Key1, const _variant_t & Order1, const _variant_t & Type, const _variant_t & Key2, const _variant_t & Order2, const _variant_t & Key3, const _variant_t & Order3, const _variant_t & Header, const _variant_t & OrderCustom, const _variant_t & MatchCase, const _variant_t & Orientation ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x371, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &SortMethod, &Key1, &Order1, &Type, &Key2, &Order2, &Key3, &Order3, &Header, &OrderCustom, &MatchCase, &Orientation);
    return _variant_t(_result, false);
}

#pragma implementation_key(780)
inline _variant_t XL95::Range::SpecialCells ( const _variant_t & Type, const _variant_t & Value ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x19a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Type, &Value);
    return _variant_t(_result, false);
}

#pragma implementation_key(781)
inline _variant_t XL95::Range::SubscribeTo ( const _variant_t & Edition, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1e1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Edition, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(782)
inline _variant_t XL95::Range::Subtotal ( const _variant_t & GroupBy, const _variant_t & Function, const _variant_t & TotalList, const _variant_t & Replace, const _variant_t & PageBreaks, const _variant_t & SummaryBelowData ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x372, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x080c\x080c\x080c", &GroupBy, &Function, &TotalList, &Replace, &PageBreaks, &SummaryBelowData);
    return _variant_t(_result, false);
}

#pragma implementation_key(783)
inline _variant_t XL95::Range::Table ( const _variant_t & RowInput, const _variant_t & ColumnInput ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &RowInput, &ColumnInput);
    return _variant_t(_result, false);
}

#pragma implementation_key(784)
inline _variant_t XL95::Range::TextToColumns ( const _variant_t & Destination, const _variant_t & DataType, const _variant_t & TextQualifier, const _variant_t & ConsecutiveDelimiter, const _variant_t & Tab, const _variant_t & Semicolon, const _variant_t & Comma, const _variant_t & Space, const _variant_t & Other, const _variant_t & OtherChar, const _variant_t & FieldInfo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x410, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Destination, &DataType, &TextQualifier, &ConsecutiveDelimiter, &Tab, &Semicolon, &Comma, &Space, &Other, &OtherChar, &FieldInfo);
    return _variant_t(_result, false);
}

#pragma implementation_key(785)
inline _variant_t XL95::Range::Ungroup ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(786)
inline _variant_t XL95::Range::Worksheet ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x15c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(787)
inline _variant_t XL95::Range::GetAddIndent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x427, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(788)
inline void XL95::Range::PutAddIndent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x427, VT_VARIANT, &_val);
}

#pragma implementation_key(789)
inline _variant_t XL95::Range::GetColumn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xf0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(790)
inline void XL95::Range::PutColumn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xf0, VT_VARIANT, &_val);
}

#pragma implementation_key(791)
inline _variant_t XL95::Range::GetColumnWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xf2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(792)
inline void XL95::Range::PutColumnWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xf2, VT_VARIANT, &_val);
}

#pragma implementation_key(793)
inline _variant_t XL95::Range::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(794)
inline void XL95::Range::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(795)
inline _variant_t XL95::Range::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(796)
inline void XL95::Range::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(797)
inline _variant_t XL95::Range::GetCurrentArray ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(798)
inline void XL95::Range::PutCurrentArray ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f5, VT_VARIANT, &_val);
}

#pragma implementation_key(799)
inline _variant_t XL95::Range::GetCurrentRegion ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xf3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(800)
inline void XL95::Range::PutCurrentRegion ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xf3, VT_VARIANT, &_val);
}

#pragma implementation_key(801)
inline _variant_t XL95::Range::GetDependents ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x21f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(802)
inline void XL95::Range::PutDependents ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x21f, VT_VARIANT, &_val);
}

#pragma implementation_key(803)
inline _variant_t XL95::Range::GetDirectDependents ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x221, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(804)
inline void XL95::Range::PutDirectDependents ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x221, VT_VARIANT, &_val);
}

#pragma implementation_key(805)
inline _variant_t XL95::Range::GetDirectPrecedents ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x222, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(806)
inline void XL95::Range::PutDirectPrecedents ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x222, VT_VARIANT, &_val);
}

#pragma implementation_key(807)
inline _variant_t XL95::Range::GetEntireColumn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xf6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(808)
inline void XL95::Range::PutEntireColumn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xf6, VT_VARIANT, &_val);
}

#pragma implementation_key(809)
inline _variant_t XL95::Range::GetEntireRow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xf7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(810)
inline void XL95::Range::PutEntireRow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xf7, VT_VARIANT, &_val);
}

#pragma implementation_key(811)
inline _variant_t XL95::Range::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(812)
inline void XL95::Range::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(813)
inline _variant_t XL95::Range::GetFormula ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x105, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(814)
inline void XL95::Range::PutFormula ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x105, VT_VARIANT, &_val);
}

#pragma implementation_key(815)
inline _variant_t XL95::Range::GetFormulaArray ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x24a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(816)
inline void XL95::Range::PutFormulaArray ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x24a, VT_VARIANT, &_val);
}

#pragma implementation_key(817)
inline _variant_t XL95::Range::GetFormulaHidden ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x106, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(818)
inline void XL95::Range::PutFormulaHidden ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x106, VT_VARIANT, &_val);
}

#pragma implementation_key(819)
inline _variant_t XL95::Range::GetFormulaLocal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x107, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(820)
inline void XL95::Range::PutFormulaLocal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x107, VT_VARIANT, &_val);
}

#pragma implementation_key(821)
inline _variant_t XL95::Range::GetFormulaR1C1 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x108, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(822)
inline void XL95::Range::PutFormulaR1C1 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x108, VT_VARIANT, &_val);
}

#pragma implementation_key(823)
inline _variant_t XL95::Range::GetFormulaR1C1Local ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x109, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(824)
inline void XL95::Range::PutFormulaR1C1Local ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x109, VT_VARIANT, &_val);
}

#pragma implementation_key(825)
inline _variant_t XL95::Range::GetHasArray ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(826)
inline void XL95::Range::PutHasArray ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10a, VT_VARIANT, &_val);
}

#pragma implementation_key(827)
inline _variant_t XL95::Range::GetHasFormula ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(828)
inline void XL95::Range::PutHasFormula ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10b, VT_VARIANT, &_val);
}

#pragma implementation_key(829)
inline _variant_t XL95::Range::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(830)
inline void XL95::Range::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(831)
inline _variant_t XL95::Range::GetHidden ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(832)
inline void XL95::Range::PutHidden ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10c, VT_VARIANT, &_val);
}

#pragma implementation_key(833)
inline _variant_t XL95::Range::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(834)
inline void XL95::Range::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(835)
inline _variant_t XL95::Range::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(836)
inline void XL95::Range::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(837)
inline _variant_t XL95::Range::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(838)
inline void XL95::Range::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(839)
inline _variant_t XL95::Range::GetListHeaderRows ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4a3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(840)
inline void XL95::Range::PutListHeaderRows ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4a3, VT_VARIANT, &_val);
}

#pragma implementation_key(841)
inline _variant_t XL95::Range::GetLocationInTable ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2b3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(842)
inline void XL95::Range::PutLocationInTable ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2b3, VT_VARIANT, &_val);
}

#pragma implementation_key(843)
inline _variant_t XL95::Range::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(844)
inline void XL95::Range::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(845)
inline _variant_t XL95::Range::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(846)
inline void XL95::Range::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(847)
inline _variant_t XL95::Range::GetNext ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(848)
inline void XL95::Range::PutNext ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f6, VT_VARIANT, &_val);
}

#pragma implementation_key(849)
inline _variant_t XL95::Range::GetNumberFormat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(850)
inline void XL95::Range::PutNumberFormat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc1, VT_VARIANT, &_val);
}

#pragma implementation_key(851)
inline _variant_t XL95::Range::GetNumberFormatLocal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x449, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(852)
inline void XL95::Range::PutNumberFormatLocal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x449, VT_VARIANT, &_val);
}

#pragma implementation_key(853)
inline _variant_t XL95::Range::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(854)
inline void XL95::Range::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(855)
inline _variant_t XL95::Range::GetOutlineLevel ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(856)
inline void XL95::Range::PutOutlineLevel ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10f, VT_VARIANT, &_val);
}

#pragma implementation_key(857)
inline _variant_t XL95::Range::GetPageBreak ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xff, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(858)
inline void XL95::Range::PutPageBreak ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xff, VT_VARIANT, &_val);
}

#pragma implementation_key(859)
inline _variant_t XL95::Range::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(860)
inline void XL95::Range::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(861)
inline _variant_t XL95::Range::GetPivotField ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2db, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(862)
inline void XL95::Range::PutPivotField ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2db, VT_VARIANT, &_val);
}

#pragma implementation_key(863)
inline _variant_t XL95::Range::GetPivotItem ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2e4, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(864)
inline void XL95::Range::PutPivotItem ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2e4, VT_VARIANT, &_val);
}

#pragma implementation_key(865)
inline _variant_t XL95::Range::GetPivotTable ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2cc, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(866)
inline void XL95::Range::PutPivotTable ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2cc, VT_VARIANT, &_val);
}

#pragma implementation_key(867)
inline _variant_t XL95::Range::GetPrecedents ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x220, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(868)
inline void XL95::Range::PutPrecedents ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x220, VT_VARIANT, &_val);
}

#pragma implementation_key(869)
inline _variant_t XL95::Range::GetPrefixCharacter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(870)
inline void XL95::Range::PutPrefixCharacter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f8, VT_VARIANT, &_val);
}

#pragma implementation_key(871)
inline _variant_t XL95::Range::GetPrevious ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(872)
inline void XL95::Range::PutPrevious ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f7, VT_VARIANT, &_val);
}

#pragma implementation_key(873)
inline _variant_t XL95::Range::GetRow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x101, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(874)
inline void XL95::Range::PutRow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x101, VT_VARIANT, &_val);
}

#pragma implementation_key(875)
inline _variant_t XL95::Range::GetRowHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x110, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(876)
inline void XL95::Range::PutRowHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x110, VT_VARIANT, &_val);
}

#pragma implementation_key(877)
inline _variant_t XL95::Range::GetShowDetail ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x249, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(878)
inline void XL95::Range::PutShowDetail ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x249, VT_VARIANT, &_val);
}

#pragma implementation_key(879)
inline _variant_t XL95::Range::GetSoundNote ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x394, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(880)
inline void XL95::Range::PutSoundNote ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x394, VT_VARIANT, &_val);
}

#pragma implementation_key(881)
inline _variant_t XL95::Range::GetStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x104, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(882)
inline void XL95::Range::PutStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x104, VT_VARIANT, &_val);
}

#pragma implementation_key(883)
inline _variant_t XL95::Range::GetSummary ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x111, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(884)
inline void XL95::Range::PutSummary ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x111, VT_VARIANT, &_val);
}

#pragma implementation_key(885)
inline _variant_t XL95::Range::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(886)
inline void XL95::Range::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(887)
inline _variant_t XL95::Range::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(888)
inline void XL95::Range::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(889)
inline _variant_t XL95::Range::GetUseStandardHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x112, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(890)
inline void XL95::Range::PutUseStandardHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x112, VT_VARIANT, &_val);
}

#pragma implementation_key(891)
inline _variant_t XL95::Range::GetUseStandardWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x113, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(892)
inline void XL95::Range::PutUseStandardWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x113, VT_VARIANT, &_val);
}

#pragma implementation_key(893)
inline _variant_t XL95::Range::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(894)
inline void XL95::Range::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(895)
inline _variant_t XL95::Range::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(896)
inline void XL95::Range::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

#pragma implementation_key(897)
inline _variant_t XL95::Range::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(898)
inline void XL95::Range::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(899)
inline _variant_t XL95::Range::GetWrapText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x114, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(900)
inline void XL95::Range::PutWrapText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x114, VT_VARIANT, &_val);
}

//
// dispinterface Workbook wrapper method implementations
//

#pragma implementation_key(901)
inline _variant_t XL95::Workbook::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(902)
inline _variant_t XL95::Workbook::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(903)
inline _variant_t XL95::Workbook::BuiltinDocumentProperties ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x498, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(904)
inline _variant_t XL95::Workbook::ChangeFileAccess ( const _variant_t & Mode, const _variant_t & WritePassword, const _variant_t & Notify ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3dd, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c", &Mode, &WritePassword, &Notify);
    return _variant_t(_result, false);
}

#pragma implementation_key(905)
inline _variant_t XL95::Workbook::ChangeLink ( const _variant_t & Name, const _variant_t & NewName, const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x322, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c", &Name, &NewName, &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(906)
inline _variant_t XL95::Workbook::Charts ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(907)
inline _variant_t XL95::Workbook::Close ( const _variant_t & SaveChanges, const _variant_t & Filename, const _variant_t & RouteWorkbook ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x115, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &SaveChanges, &Filename, &RouteWorkbook);
    return _variant_t(_result, false);
}

#pragma implementation_key(908)
inline _variant_t XL95::Workbook::CustomDocumentProperties ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x499, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(909)
inline _variant_t XL95::Workbook::DeleteNumberFormat ( const _variant_t & NumberFormat ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x18d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &NumberFormat);
    return _variant_t(_result, false);
}

#pragma implementation_key(910)
inline _variant_t XL95::Workbook::DialogSheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2fc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(911)
inline _variant_t XL95::Workbook::Excel4IntlMacroSheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x245, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(912)
inline _variant_t XL95::Workbook::Excel4MacroSheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x243, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(913)
inline _variant_t XL95::Workbook::ExclusiveAccess ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x490, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(914)
inline _variant_t XL95::Workbook::ForwardMailer ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3cd, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(915)
inline _variant_t XL95::Workbook::LinkInfo ( const _variant_t & Name, const _variant_t & LinkInfo, const _variant_t & Type, const _variant_t & EditionRef ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x327, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c", &Name, &LinkInfo, &Type, &EditionRef);
    return _variant_t(_result, false);
}

#pragma implementation_key(916)
inline _variant_t XL95::Workbook::LinkSources ( const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x328, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(917)
inline _variant_t XL95::Workbook::Modules ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x246, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(918)
inline _variant_t XL95::Workbook::Names ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ba, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Index, &IndexLocal, &RefersTo);
    return _variant_t(_result, false);
}

#pragma implementation_key(919)
inline _variant_t XL95::Workbook::NewWindow ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x118, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(920)
inline _variant_t XL95::Workbook::OpenLinks ( const _variant_t & Name, const _variant_t & ReadOnly, const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x323, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c", &Name, &ReadOnly, &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(921)
inline _variant_t XL95::Workbook::Post ( const _variant_t & DestName ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x48e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &DestName);
    return _variant_t(_result, false);
}

#pragma implementation_key(922)
inline _variant_t XL95::Workbook::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(923)
inline _variant_t XL95::Workbook::PrintPreview ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(924)
inline _variant_t XL95::Workbook::Protect ( const _variant_t & Password, const _variant_t & Structure, const _variant_t & Windows ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Password, &Structure, &Windows);
    return _variant_t(_result, false);
}

#pragma implementation_key(925)
inline _variant_t XL95::Workbook::Reply ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3d1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(926)
inline _variant_t XL95::Workbook::ReplyAll ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3d2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(927)
inline _variant_t XL95::Workbook::Route ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3b2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(928)
inline _variant_t XL95::Workbook::RunAutoMacros ( const _variant_t & Which ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Which);
    return _variant_t(_result, false);
}

#pragma implementation_key(929)
inline _variant_t XL95::Workbook::Save ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(930)
inline _variant_t XL95::Workbook::SaveAs ( const _variant_t & Filename, const _variant_t & FileFormat, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ReadOnlyRecommended, const _variant_t & CreateBackup, const _variant_t & AccessMode, const _variant_t & ConflictResolution ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Filename, &FileFormat, &Password, &WriteResPassword, &ReadOnlyRecommended, &CreateBackup, &AccessMode, &ConflictResolution);
    return _variant_t(_result, false);
}

#pragma implementation_key(931)
inline _variant_t XL95::Workbook::SaveCopyAs ( const _variant_t & Filename ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaf, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Filename);
    return _variant_t(_result, false);
}

#pragma implementation_key(932)
inline _variant_t XL95::Workbook::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3b3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c", &Recipients, &Subject, &ReturnReceipt);
    return _variant_t(_result, false);
}

#pragma implementation_key(933)
inline _variant_t XL95::Workbook::SendMailer ( const _variant_t & FileFormat, const _variant_t & Priority ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3d4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &FileFormat, &Priority);
    return _variant_t(_result, false);
}

#pragma implementation_key(934)
inline _variant_t XL95::Workbook::SetLinkOnData ( const _variant_t & Name, const _variant_t & Procedure ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x329, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Name, &Procedure);
    return _variant_t(_result, false);
}

#pragma implementation_key(935)
inline _variant_t XL95::Workbook::Sheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1e5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(936)
inline _variant_t XL95::Workbook::Styles ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ed, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(937)
inline _variant_t XL95::Workbook::Unprotect ( const _variant_t & Password ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Password);
    return _variant_t(_result, false);
}

#pragma implementation_key(938)
inline _variant_t XL95::Workbook::UpdateFromFile ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3e3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(939)
inline _variant_t XL95::Workbook::UpdateLink ( const _variant_t & Name, const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x324, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Name, &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(940)
inline _variant_t XL95::Workbook::Windows ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ae, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(941)
inline _variant_t XL95::Workbook::Worksheets ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ee, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(942)
inline _variant_t XL95::Workbook::GetActiveChart ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(943)
inline void XL95::Workbook::PutActiveChart ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb7, VT_VARIANT, &_val);
}

#pragma implementation_key(944)
inline _variant_t XL95::Workbook::GetActiveSheet ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x133, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(945)
inline void XL95::Workbook::PutActiveSheet ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x133, VT_VARIANT, &_val);
}

#pragma implementation_key(946)
inline _variant_t XL95::Workbook::GetAuthor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x23e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(947)
inline void XL95::Workbook::PutAuthor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x23e, VT_VARIANT, &_val);
}

#pragma implementation_key(948)
inline _variant_t XL95::Workbook::GetColors ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x11e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(949)
inline void XL95::Workbook::PutColors ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x11e, VT_VARIANT, &_val);
}

#pragma implementation_key(950)
inline _variant_t XL95::Workbook::GetComments ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x23f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(951)
inline void XL95::Workbook::PutComments ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x23f, VT_VARIANT, &_val);
}

#pragma implementation_key(952)
inline _variant_t XL95::Workbook::GetContainer ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4a6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(953)
inline void XL95::Workbook::PutContainer ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4a6, VT_VARIANT, &_val);
}

#pragma implementation_key(954)
inline _variant_t XL95::Workbook::GetCreateBackup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x11f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(955)
inline void XL95::Workbook::PutCreateBackup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x11f, VT_VARIANT, &_val);
}

#pragma implementation_key(956)
inline _variant_t XL95::Workbook::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(957)
inline void XL95::Workbook::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(958)
inline _variant_t XL95::Workbook::GetDate1904 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x193, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(959)
inline void XL95::Workbook::PutDate1904 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x193, VT_VARIANT, &_val);
}

#pragma implementation_key(960)
inline _variant_t XL95::Workbook::GetDisplayDrawingObjects ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x194, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(961)
inline void XL95::Workbook::PutDisplayDrawingObjects ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x194, VT_VARIANT, &_val);
}

#pragma implementation_key(962)
inline _variant_t XL95::Workbook::GetFileFormat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x120, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(963)
inline void XL95::Workbook::PutFileFormat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x120, VT_VARIANT, &_val);
}

#pragma implementation_key(964)
inline _variant_t XL95::Workbook::GetFullName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x121, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(965)
inline void XL95::Workbook::PutFullName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x121, VT_VARIANT, &_val);
}

#pragma implementation_key(966)
inline _variant_t XL95::Workbook::GetHasMailer ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3d0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(967)
inline void XL95::Workbook::PutHasMailer ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3d0, VT_VARIANT, &_val);
}

#pragma implementation_key(968)
inline _variant_t XL95::Workbook::GetHasPassword ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x122, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(969)
inline void XL95::Workbook::PutHasPassword ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x122, VT_VARIANT, &_val);
}

#pragma implementation_key(970)
inline _variant_t XL95::Workbook::GetHasRoutingSlip ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(971)
inline void XL95::Workbook::PutHasRoutingSlip ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b6, VT_VARIANT, &_val);
}

#pragma implementation_key(972)
inline _variant_t XL95::Workbook::GetKeywords ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x241, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(973)
inline void XL95::Workbook::PutKeywords ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x241, VT_VARIANT, &_val);
}

#pragma implementation_key(974)
inline _variant_t XL95::Workbook::GetMailer ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3d3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(975)
inline void XL95::Workbook::PutMailer ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3d3, VT_VARIANT, &_val);
}

#pragma implementation_key(976)
inline _variant_t XL95::Workbook::GetMultiUserEditing ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x491, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(977)
inline void XL95::Workbook::PutMultiUserEditing ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x491, VT_VARIANT, &_val);
}

#pragma implementation_key(978)
inline _variant_t XL95::Workbook::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(979)
inline void XL95::Workbook::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(980)
inline _variant_t XL95::Workbook::GetOnSave ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x49a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(981)
inline void XL95::Workbook::PutOnSave ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x49a, VT_VARIANT, &_val);
}

#pragma implementation_key(982)
inline _variant_t XL95::Workbook::GetOnSheetActivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x407, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(983)
inline void XL95::Workbook::PutOnSheetActivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x407, VT_VARIANT, &_val);
}

#pragma implementation_key(984)
inline _variant_t XL95::Workbook::GetOnSheetDeactivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x439, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(985)
inline void XL95::Workbook::PutOnSheetDeactivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x439, VT_VARIANT, &_val);
}

#pragma implementation_key(986)
inline _variant_t XL95::Workbook::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(987)
inline void XL95::Workbook::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(988)
inline _variant_t XL95::Workbook::GetPath ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x123, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(989)
inline void XL95::Workbook::PutPath ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x123, VT_VARIANT, &_val);
}

#pragma implementation_key(990)
inline _variant_t XL95::Workbook::GetPrecisionAsDisplayed ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x195, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(991)
inline void XL95::Workbook::PutPrecisionAsDisplayed ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x195, VT_VARIANT, &_val);
}

#pragma implementation_key(992)
inline _variant_t XL95::Workbook::GetProtectStructure ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x24c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(993)
inline void XL95::Workbook::PutProtectStructure ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x24c, VT_VARIANT, &_val);
}

#pragma implementation_key(994)
inline _variant_t XL95::Workbook::GetProtectWindows ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x127, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(995)
inline void XL95::Workbook::PutProtectWindows ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x127, VT_VARIANT, &_val);
}

#pragma implementation_key(996)
inline _variant_t XL95::Workbook::GetReadOnly ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x128, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(997)
inline void XL95::Workbook::PutReadOnly ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x128, VT_VARIANT, &_val);
}

#pragma implementation_key(998)
inline _variant_t XL95::Workbook::GetReadOnlyRecommended ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x129, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(999)
inline void XL95::Workbook::PutReadOnlyRecommended ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x129, VT_VARIANT, &_val);
}

#pragma implementation_key(1000)
inline _variant_t XL95::Workbook::GetRevisionNumber ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x494, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1001)
inline void XL95::Workbook::PutRevisionNumber ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x494, VT_VARIANT, &_val);
}

#pragma implementation_key(1002)
inline _variant_t XL95::Workbook::GetRouted ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1003)
inline void XL95::Workbook::PutRouted ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b7, VT_VARIANT, &_val);
}

#pragma implementation_key(1004)
inline _variant_t XL95::Workbook::GetRoutingSlip ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1005)
inline void XL95::Workbook::PutRoutingSlip ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b5, VT_VARIANT, &_val);
}

#pragma implementation_key(1006)
inline _variant_t XL95::Workbook::GetSaved ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x12a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1007)
inline void XL95::Workbook::PutSaved ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x12a, VT_VARIANT, &_val);
}

#pragma implementation_key(1008)
inline _variant_t XL95::Workbook::GetSaveLinkValues ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x196, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1009)
inline void XL95::Workbook::PutSaveLinkValues ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x196, VT_VARIANT, &_val);
}

#pragma implementation_key(1010)
inline _variant_t XL95::Workbook::GetShowConflictHistory ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x493, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1011)
inline void XL95::Workbook::PutShowConflictHistory ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x493, VT_VARIANT, &_val);
}

#pragma implementation_key(1012)
inline _variant_t XL95::Workbook::GetSubject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1013)
inline void XL95::Workbook::PutSubject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b9, VT_VARIANT, &_val);
}

#pragma implementation_key(1014)
inline _variant_t XL95::Workbook::GetTitle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1015)
inline void XL95::Workbook::PutTitle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc7, VT_VARIANT, &_val);
}

#pragma implementation_key(1016)
inline _variant_t XL95::Workbook::GetUpdateRemoteReferences ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x19b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1017)
inline void XL95::Workbook::PutUpdateRemoteReferences ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x19b, VT_VARIANT, &_val);
}

#pragma implementation_key(1018)
inline _variant_t XL95::Workbook::GetUserStatus ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x495, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1019)
inline void XL95::Workbook::PutUserStatus ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x495, VT_VARIANT, &_val);
}

#pragma implementation_key(1020)
inline _variant_t XL95::Workbook::GetWriteReserved ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x12b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1021)
inline void XL95::Workbook::PutWriteReserved ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x12b, VT_VARIANT, &_val);
}

#pragma implementation_key(1022)
inline _variant_t XL95::Workbook::GetWriteReservedBy ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x12c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1023)
inline void XL95::Workbook::PutWriteReservedBy ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x12c, VT_VARIANT, &_val);
}

//
// dispinterface Workbooks wrapper method implementations
//

#pragma implementation_key(1024)
inline _variant_t XL95::Workbooks::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1025)
inline _variant_t XL95::Workbooks::Add ( const _variant_t & Template ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Template);
    return _variant_t(_result, false);
}

#pragma implementation_key(1026)
inline _variant_t XL95::Workbooks::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1027)
inline _variant_t XL95::Workbooks::Close ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x115, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1028)
inline _variant_t XL95::Workbooks::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1029)
inline _variant_t XL95::Workbooks::Open ( const _variant_t & Filename, const _variant_t & UpdateLinks, const _variant_t & ReadOnly, const _variant_t & Format, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & IgnoreReadOnlyRecommended, const _variant_t & Origin, const _variant_t & Delimiter, const _variant_t & Editable, const _variant_t & Notify, const _variant_t & Converter ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2aa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Filename, &UpdateLinks, &ReadOnly, &Format, &Password, &WriteResPassword, &IgnoreReadOnlyRecommended, &Origin, &Delimiter, &Editable, &Notify, &Converter);
    return _variant_t(_result, false);
}

#pragma implementation_key(1030)
inline _variant_t XL95::Workbooks::OpenText ( const _variant_t & Filename, const _variant_t & Origin, const _variant_t & StartRow, const _variant_t & DataType, const _variant_t & TextQualifier, const _variant_t & ConsecutiveDelimiter, const _variant_t & Tab, const _variant_t & Semicolon, const _variant_t & Comma, const _variant_t & Space, const _variant_t & Other, const _variant_t & OtherChar, const _variant_t & FieldInfo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2ab, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Filename, &Origin, &StartRow, &DataType, &TextQualifier, &ConsecutiveDelimiter, &Tab, &Semicolon, &Comma, &Space, &Other, &OtherChar, &FieldInfo);
    return _variant_t(_result, false);
}

#pragma implementation_key(1031)
inline _variant_t XL95::Workbooks::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1032)
inline void XL95::Workbooks::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1033)
inline _variant_t XL95::Workbooks::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1034)
inline void XL95::Workbooks::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1035)
inline _variant_t XL95::Workbooks::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1036)
inline void XL95::Workbooks::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Sheets wrapper method implementations
//

#pragma implementation_key(1037)
inline _variant_t XL95::Sheets::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1038)
inline _variant_t XL95::Sheets::Add ( const _variant_t & Before, const _variant_t & After, const _variant_t & Count, const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Before, &After, &Count, &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(1039)
inline _variant_t XL95::Sheets::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1040)
inline _variant_t XL95::Sheets::Copy ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(1041)
inline _variant_t XL95::Sheets::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1042)
inline _variant_t XL95::Sheets::FillAcrossSheets ( const _variant_t & Range, const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1d5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Range, &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(1043)
inline _variant_t XL95::Sheets::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1044)
inline _variant_t XL95::Sheets::Move ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(1045)
inline _variant_t XL95::Sheets::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(1046)
inline _variant_t XL95::Sheets::PrintPreview ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1047)
inline _variant_t XL95::Sheets::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(1048)
inline _variant_t XL95::Sheets::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1049)
inline void XL95::Sheets::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1050)
inline _variant_t XL95::Sheets::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1051)
inline void XL95::Sheets::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1052)
inline _variant_t XL95::Sheets::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1053)
inline void XL95::Sheets::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1054)
inline _variant_t XL95::Sheets::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1055)
inline void XL95::Sheets::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

//
// dispinterface Worksheet wrapper method implementations
//

#pragma implementation_key(1056)
inline _variant_t XL95::Worksheet::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1057)
inline _variant_t XL95::Worksheet::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1058)
inline _variant_t XL95::Worksheet::Arcs ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2f8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1059)
inline _variant_t XL95::Worksheet::Buttons ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x22d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1060)
inline _variant_t XL95::Worksheet::Calculate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x117, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1061)
inline _variant_t XL95::Worksheet::Cells ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xee, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &RowIndex, &ColumnIndex);
    return _variant_t(_result, false);
}

#pragma implementation_key(1062)
inline _variant_t XL95::Worksheet::ChartObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x424, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1063)
inline _variant_t XL95::Worksheet::CheckBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x338, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1064)
inline _variant_t XL95::Worksheet::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(1065)
inline _variant_t XL95::Worksheet::ClearArrows ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3ca, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1066)
inline _variant_t XL95::Worksheet::Columns ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1067)
inline _variant_t XL95::Worksheet::Copy ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(1068)
inline _variant_t XL95::Worksheet::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1069)
inline _variant_t XL95::Worksheet::DrawingObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1070)
inline _variant_t XL95::Worksheet::Drawings ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x304, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1071)
inline _variant_t XL95::Worksheet::DropDowns ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x344, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1072)
inline _variant_t XL95::Worksheet::_Evaluate ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(1073)
inline _variant_t XL95::Worksheet::Evaluate ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfffffffb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(1074)
inline _variant_t XL95::Worksheet::GroupBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x342, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1075)
inline _variant_t XL95::Worksheet::GroupObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x459, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1076)
inline _variant_t XL95::Worksheet::Labels ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x349, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1077)
inline _variant_t XL95::Worksheet::Lines ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2ff, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1078)
inline _variant_t XL95::Worksheet::ListBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x340, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1079)
inline _variant_t XL95::Worksheet::Move ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(1080)
inline _variant_t XL95::Worksheet::Names ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ba, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Index, &IndexLocal, &RefersTo);
    return _variant_t(_result, false);
}

#pragma implementation_key(1081)
inline _variant_t XL95::Worksheet::OLEObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x31f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1082)
inline _variant_t XL95::Worksheet::OptionButtons ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x33a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1083)
inline _variant_t XL95::Worksheet::Ovals ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x321, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1084)
inline _variant_t XL95::Worksheet::Paste ( const _variant_t & Destination, const _variant_t & Link ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Destination, &Link);
    return _variant_t(_result, false);
}

#pragma implementation_key(1085)
inline _variant_t XL95::Worksheet::PasteSpecial ( const _variant_t & Format, const _variant_t & Link, const _variant_t & DisplayAsIcon, const _variant_t & IconFileName, const _variant_t & IconIndex, const _variant_t & IconLabel ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x403, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c", &Format, &Link, &DisplayAsIcon, &IconFileName, &IconIndex, &IconLabel);
    return _variant_t(_result, false);
}

#pragma implementation_key(1086)
inline _variant_t XL95::Worksheet::Pictures ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x303, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1087)
inline _variant_t XL95::Worksheet::PivotTables ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2b2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1088)
inline _variant_t XL95::Worksheet::PivotTableWizard ( const _variant_t & SourceType, const _variant_t & SourceData, const _variant_t & TableDestination, const _variant_t & TableName, const _variant_t & RowGrand, const _variant_t & ColumnGrand, const _variant_t & SaveData, const _variant_t & HasAutoFormat, const _variant_t & AutoPage, const _variant_t & Reserved ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2ac, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &SourceType, &SourceData, &TableDestination, &TableName, &RowGrand, &ColumnGrand, &SaveData, &HasAutoFormat, &AutoPage, &Reserved);
    return _variant_t(_result, false);
}

#pragma implementation_key(1089)
inline _variant_t XL95::Worksheet::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(1090)
inline _variant_t XL95::Worksheet::PrintPreview ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1091)
inline _variant_t XL95::Worksheet::Protect ( const _variant_t & Password, const _variant_t & DrawingObjects, const _variant_t & Contents, const _variant_t & Scenarios, const _variant_t & UserInterfaceOnly ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &Password, &DrawingObjects, &Contents, &Scenarios, &UserInterfaceOnly);
    return _variant_t(_result, false);
}

#pragma implementation_key(1092)
inline _variant_t XL95::Worksheet::Range ( const _variant_t & Cell1, const _variant_t & Cell2 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xc5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Cell1, &Cell2);
    return _variant_t(_result, false);
}

#pragma implementation_key(1093)
inline _variant_t XL95::Worksheet::Rectangles ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x306, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1094)
inline _variant_t XL95::Worksheet::Rows ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x102, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1095)
inline _variant_t XL95::Worksheet::SaveAs ( const _variant_t & Filename, const _variant_t & FileFormat, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ReadOnlyRecommended, const _variant_t & CreateBackup ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c\x080c\x080c", &Filename, &FileFormat, &Password, &WriteResPassword, &ReadOnlyRecommended, &CreateBackup);
    return _variant_t(_result, false);
}

#pragma implementation_key(1096)
inline _variant_t XL95::Worksheet::Scenarios ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x38c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1097)
inline _variant_t XL95::Worksheet::ScrollBars ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x33e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1098)
inline _variant_t XL95::Worksheet::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(1099)
inline _variant_t XL95::Worksheet::SetBackgroundPicture ( const _variant_t & Filename ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4a4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Filename);
    return _variant_t(_result, false);
}

#pragma implementation_key(1100)
inline _variant_t XL95::Worksheet::ShowAllData ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x31a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1101)
inline _variant_t XL95::Worksheet::ShowDataForm ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x199, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1102)
inline _variant_t XL95::Worksheet::Spinners ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x346, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1103)
inline _variant_t XL95::Worksheet::TextBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x309, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1104)
inline _variant_t XL95::Worksheet::Unprotect ( const _variant_t & Password ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Password);
    return _variant_t(_result, false);
}

#pragma implementation_key(1105)
inline _variant_t XL95::Worksheet::GetAutoFilterMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x318, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1106)
inline void XL95::Worksheet::PutAutoFilterMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x318, VT_VARIANT, &_val);
}

#pragma implementation_key(1107)
inline _variant_t XL95::Worksheet::GetCircularReference ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x42d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1108)
inline void XL95::Worksheet::PutCircularReference ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x42d, VT_VARIANT, &_val);
}

#pragma implementation_key(1109)
inline _variant_t XL95::Worksheet::GetConsolidationFunction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x315, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1110)
inline void XL95::Worksheet::PutConsolidationFunction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x315, VT_VARIANT, &_val);
}

#pragma implementation_key(1111)
inline _variant_t XL95::Worksheet::GetConsolidationOptions ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x316, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1112)
inline void XL95::Worksheet::PutConsolidationOptions ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x316, VT_VARIANT, &_val);
}

#pragma implementation_key(1113)
inline _variant_t XL95::Worksheet::GetConsolidationSources ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x317, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1114)
inline void XL95::Worksheet::PutConsolidationSources ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x317, VT_VARIANT, &_val);
}

#pragma implementation_key(1115)
inline _variant_t XL95::Worksheet::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1116)
inline void XL95::Worksheet::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1117)
inline _variant_t XL95::Worksheet::GetDisplayAutomaticPageBreaks ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x283, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1118)
inline void XL95::Worksheet::PutDisplayAutomaticPageBreaks ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x283, VT_VARIANT, &_val);
}

#pragma implementation_key(1119)
inline _variant_t XL95::Worksheet::GetEnableAutoFilter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x484, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1120)
inline void XL95::Worksheet::PutEnableAutoFilter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x484, VT_VARIANT, &_val);
}

#pragma implementation_key(1121)
inline _variant_t XL95::Worksheet::GetEnableOutlining ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x485, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1122)
inline void XL95::Worksheet::PutEnableOutlining ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x485, VT_VARIANT, &_val);
}

#pragma implementation_key(1123)
inline _variant_t XL95::Worksheet::GetEnablePivotTable ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x486, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1124)
inline void XL95::Worksheet::PutEnablePivotTable ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x486, VT_VARIANT, &_val);
}

#pragma implementation_key(1125)
inline _variant_t XL95::Worksheet::GetFilterMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x320, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1126)
inline void XL95::Worksheet::PutFilterMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x320, VT_VARIANT, &_val);
}

#pragma implementation_key(1127)
inline _variant_t XL95::Worksheet::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1128)
inline void XL95::Worksheet::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1129)
inline _variant_t XL95::Worksheet::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1130)
inline void XL95::Worksheet::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(1131)
inline _variant_t XL95::Worksheet::GetNext ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1132)
inline void XL95::Worksheet::PutNext ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f6, VT_VARIANT, &_val);
}

#pragma implementation_key(1133)
inline _variant_t XL95::Worksheet::GetOnCalculate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1134)
inline void XL95::Worksheet::PutOnCalculate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271, VT_VARIANT, &_val);
}

#pragma implementation_key(1135)
inline _variant_t XL95::Worksheet::GetOnData ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x275, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1136)
inline void XL95::Worksheet::PutOnData ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x275, VT_VARIANT, &_val);
}

#pragma implementation_key(1137)
inline _variant_t XL95::Worksheet::GetOnDoubleClick ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x274, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1138)
inline void XL95::Worksheet::PutOnDoubleClick ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x274, VT_VARIANT, &_val);
}

#pragma implementation_key(1139)
inline _variant_t XL95::Worksheet::GetOnEntry ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1140)
inline void XL95::Worksheet::PutOnEntry ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273, VT_VARIANT, &_val);
}

#pragma implementation_key(1141)
inline _variant_t XL95::Worksheet::GetOnSheetActivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x407, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1142)
inline void XL95::Worksheet::PutOnSheetActivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x407, VT_VARIANT, &_val);
}

#pragma implementation_key(1143)
inline _variant_t XL95::Worksheet::GetOnSheetDeactivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x439, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1144)
inline void XL95::Worksheet::PutOnSheetDeactivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x439, VT_VARIANT, &_val);
}

#pragma implementation_key(1145)
inline _variant_t XL95::Worksheet::GetOutline ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x66, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1146)
inline void XL95::Worksheet::PutOutline ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x66, VT_VARIANT, &_val);
}

#pragma implementation_key(1147)
inline _variant_t XL95::Worksheet::GetPageSetup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1148)
inline void XL95::Worksheet::PutPageSetup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1149)
inline _variant_t XL95::Worksheet::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1150)
inline void XL95::Worksheet::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1151)
inline _variant_t XL95::Worksheet::GetPrevious ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1152)
inline void XL95::Worksheet::PutPrevious ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f7, VT_VARIANT, &_val);
}

#pragma implementation_key(1153)
inline _variant_t XL95::Worksheet::GetProtectContents ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x124, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1154)
inline void XL95::Worksheet::PutProtectContents ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x124, VT_VARIANT, &_val);
}

#pragma implementation_key(1155)
inline _variant_t XL95::Worksheet::GetProtectDrawingObjects ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x125, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1156)
inline void XL95::Worksheet::PutProtectDrawingObjects ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x125, VT_VARIANT, &_val);
}

#pragma implementation_key(1157)
inline _variant_t XL95::Worksheet::GetProtectionMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x487, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1158)
inline void XL95::Worksheet::PutProtectionMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x487, VT_VARIANT, &_val);
}

#pragma implementation_key(1159)
inline _variant_t XL95::Worksheet::GetProtectScenarios ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x126, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1160)
inline void XL95::Worksheet::PutProtectScenarios ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x126, VT_VARIANT, &_val);
}

#pragma implementation_key(1161)
inline _variant_t XL95::Worksheet::GetStandardHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x197, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1162)
inline void XL95::Worksheet::PutStandardHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x197, VT_VARIANT, &_val);
}

#pragma implementation_key(1163)
inline _variant_t XL95::Worksheet::GetStandardWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x198, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1164)
inline void XL95::Worksheet::PutStandardWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x198, VT_VARIANT, &_val);
}

#pragma implementation_key(1165)
inline _variant_t XL95::Worksheet::GetTransitionExpEval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x191, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1166)
inline void XL95::Worksheet::PutTransitionExpEval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x191, VT_VARIANT, &_val);
}

#pragma implementation_key(1167)
inline _variant_t XL95::Worksheet::GetTransitionFormEntry ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x192, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1168)
inline void XL95::Worksheet::PutTransitionFormEntry ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x192, VT_VARIANT, &_val);
}

#pragma implementation_key(1169)
inline _variant_t XL95::Worksheet::GetType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1170)
inline void XL95::Worksheet::PutType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6c, VT_VARIANT, &_val);
}

#pragma implementation_key(1171)
inline _variant_t XL95::Worksheet::GetUsedRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x19c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1172)
inline void XL95::Worksheet::PutUsedRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x19c, VT_VARIANT, &_val);
}

#pragma implementation_key(1173)
inline _variant_t XL95::Worksheet::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1174)
inline void XL95::Worksheet::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

//
// dispinterface Worksheets wrapper method implementations
//

#pragma implementation_key(1175)
inline _variant_t XL95::Worksheets::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1176)
inline _variant_t XL95::Worksheets::Add ( const _variant_t & Before, const _variant_t & After, const _variant_t & Count, const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Before, &After, &Count, &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(1177)
inline _variant_t XL95::Worksheets::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1178)
inline _variant_t XL95::Worksheets::Copy ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(1179)
inline _variant_t XL95::Worksheets::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1180)
inline _variant_t XL95::Worksheets::FillAcrossSheets ( const _variant_t & Range, const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1d5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Range, &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(1181)
inline _variant_t XL95::Worksheets::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1182)
inline _variant_t XL95::Worksheets::Move ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(1183)
inline _variant_t XL95::Worksheets::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(1184)
inline _variant_t XL95::Worksheets::PrintPreview ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1185)
inline _variant_t XL95::Worksheets::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(1186)
inline _variant_t XL95::Worksheets::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1187)
inline void XL95::Worksheets::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1188)
inline _variant_t XL95::Worksheets::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1189)
inline void XL95::Worksheets::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1190)
inline _variant_t XL95::Worksheets::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1191)
inline void XL95::Worksheets::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1192)
inline _variant_t XL95::Worksheets::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1193)
inline void XL95::Worksheets::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

//
// dispinterface PivotTable wrapper method implementations
//

#pragma implementation_key(1194)
inline _variant_t XL95::PivotTable::AddFields ( const _variant_t & RowFields, const _variant_t & ColumnFields, const _variant_t & PageFields, const _variant_t & AddToTable ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2c4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &RowFields, &ColumnFields, &PageFields, &AddToTable);
    return _variant_t(_result, false);
}

#pragma implementation_key(1195)
inline _variant_t XL95::PivotTable::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1196)
inline _variant_t XL95::PivotTable::PivotFields ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2ce, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1197)
inline _variant_t XL95::PivotTable::RefreshTable ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2cd, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1198)
inline _variant_t XL95::PivotTable::ShowPages ( const _variant_t & PageField ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2c2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &PageField);
    return _variant_t(_result, false);
}

#pragma implementation_key(1199)
inline _variant_t XL95::PivotTable::GetColumnFields ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2c9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1200)
inline void XL95::PivotTable::PutColumnFields ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2c9, VT_VARIANT, &_val);
}

#pragma implementation_key(1201)
inline _variant_t XL95::PivotTable::GetColumnGrand ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2b6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1202)
inline void XL95::PivotTable::PutColumnGrand ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2b6, VT_VARIANT, &_val);
}

#pragma implementation_key(1203)
inline _variant_t XL95::PivotTable::GetColumnRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2be, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1204)
inline void XL95::PivotTable::PutColumnRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2be, VT_VARIANT, &_val);
}

#pragma implementation_key(1205)
inline _variant_t XL95::PivotTable::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1206)
inline void XL95::PivotTable::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1207)
inline _variant_t XL95::PivotTable::GetDataBodyRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2c1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1208)
inline void XL95::PivotTable::PutDataBodyRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2c1, VT_VARIANT, &_val);
}

#pragma implementation_key(1209)
inline _variant_t XL95::PivotTable::GetDataFields ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2cb, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1210)
inline void XL95::PivotTable::PutDataFields ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2cb, VT_VARIANT, &_val);
}

#pragma implementation_key(1211)
inline _variant_t XL95::PivotTable::GetDataLabelRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2c0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1212)
inline void XL95::PivotTable::PutDataLabelRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2c0, VT_VARIANT, &_val);
}

#pragma implementation_key(1213)
inline _variant_t XL95::PivotTable::GetHasAutoFormat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2b7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1214)
inline void XL95::PivotTable::PutHasAutoFormat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2b7, VT_VARIANT, &_val);
}

#pragma implementation_key(1215)
inline _variant_t XL95::PivotTable::GetHiddenFields ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2c7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1216)
inline void XL95::PivotTable::PutHiddenFields ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2c7, VT_VARIANT, &_val);
}

#pragma implementation_key(1217)
inline _variant_t XL95::PivotTable::GetInnerDetail ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2ba, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1218)
inline void XL95::PivotTable::PutInnerDetail ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2ba, VT_VARIANT, &_val);
}

#pragma implementation_key(1219)
inline _variant_t XL95::PivotTable::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1220)
inline void XL95::PivotTable::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(1221)
inline _variant_t XL95::PivotTable::GetPageFields ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2ca, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1222)
inline void XL95::PivotTable::PutPageFields ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2ca, VT_VARIANT, &_val);
}

#pragma implementation_key(1223)
inline _variant_t XL95::PivotTable::GetPageRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2bf, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1224)
inline void XL95::PivotTable::PutPageRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2bf, VT_VARIANT, &_val);
}

#pragma implementation_key(1225)
inline _variant_t XL95::PivotTable::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1226)
inline void XL95::PivotTable::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1227)
inline _variant_t XL95::PivotTable::GetRefreshDate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2b8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1228)
inline void XL95::PivotTable::PutRefreshDate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2b8, VT_VARIANT, &_val);
}

#pragma implementation_key(1229)
inline _variant_t XL95::PivotTable::GetRefreshName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2b9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1230)
inline void XL95::PivotTable::PutRefreshName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2b9, VT_VARIANT, &_val);
}

#pragma implementation_key(1231)
inline _variant_t XL95::PivotTable::GetRowFields ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2c8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1232)
inline void XL95::PivotTable::PutRowFields ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2c8, VT_VARIANT, &_val);
}

#pragma implementation_key(1233)
inline _variant_t XL95::PivotTable::GetRowGrand ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2b5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1234)
inline void XL95::PivotTable::PutRowGrand ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2b5, VT_VARIANT, &_val);
}

#pragma implementation_key(1235)
inline _variant_t XL95::PivotTable::GetRowRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2bd, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1236)
inline void XL95::PivotTable::PutRowRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2bd, VT_VARIANT, &_val);
}

#pragma implementation_key(1237)
inline _variant_t XL95::PivotTable::GetSaveData ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2b4, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1238)
inline void XL95::PivotTable::PutSaveData ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2b4, VT_VARIANT, &_val);
}

#pragma implementation_key(1239)
inline _variant_t XL95::PivotTable::GetSourceData ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2ae, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1240)
inline void XL95::PivotTable::PutSourceData ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2ae, VT_VARIANT, &_val);
}

#pragma implementation_key(1241)
inline _variant_t XL95::PivotTable::GetTableRange1 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2bb, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1242)
inline void XL95::PivotTable::PutTableRange1 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2bb, VT_VARIANT, &_val);
}

#pragma implementation_key(1243)
inline _variant_t XL95::PivotTable::GetTableRange2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2bc, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1244)
inline void XL95::PivotTable::PutTableRange2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2bc, VT_VARIANT, &_val);
}

#pragma implementation_key(1245)
inline _variant_t XL95::PivotTable::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1246)
inline void XL95::PivotTable::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(1247)
inline _variant_t XL95::PivotTable::GetVisibleFields ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2c6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1248)
inline void XL95::PivotTable::PutVisibleFields ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2c6, VT_VARIANT, &_val);
}

//
// dispinterface PivotTables wrapper method implementations
//

#pragma implementation_key(1249)
inline _variant_t XL95::PivotTables::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1250)
inline _variant_t XL95::PivotTables::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1251)
inline _variant_t XL95::PivotTables::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1252)
inline _variant_t XL95::PivotTables::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1253)
inline void XL95::PivotTables::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1254)
inline _variant_t XL95::PivotTables::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1255)
inline void XL95::PivotTables::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1256)
inline _variant_t XL95::PivotTables::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1257)
inline void XL95::PivotTables::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface PivotField wrapper method implementations
//

#pragma implementation_key(1258)
inline _variant_t XL95::PivotField::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1259)
inline _variant_t XL95::PivotField::PivotItems ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1260)
inline _variant_t XL95::PivotField::GetBaseField ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2de, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1261)
inline void XL95::PivotField::PutBaseField ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2de, VT_VARIANT, &_val);
}

#pragma implementation_key(1262)
inline _variant_t XL95::PivotField::GetBaseItem ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2df, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1263)
inline void XL95::PivotField::PutBaseItem ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2df, VT_VARIANT, &_val);
}

#pragma implementation_key(1264)
inline _variant_t XL95::PivotField::GetCalculation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x13c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1265)
inline void XL95::PivotField::PutCalculation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x13c, VT_VARIANT, &_val);
}

#pragma implementation_key(1266)
inline _variant_t XL95::PivotField::GetChildField ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2e0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1267)
inline void XL95::PivotField::PutChildField ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2e0, VT_VARIANT, &_val);
}

#pragma implementation_key(1268)
inline _variant_t XL95::PivotField::GetChildItems ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2da, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1269)
inline void XL95::PivotField::PutChildItems ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2da, VT_VARIANT, &_val);
}

#pragma implementation_key(1270)
inline _variant_t XL95::PivotField::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1271)
inline void XL95::PivotField::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1272)
inline _variant_t XL95::PivotField::GetCurrentPage ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2e2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1273)
inline void XL95::PivotField::PutCurrentPage ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2e2, VT_VARIANT, &_val);
}

#pragma implementation_key(1274)
inline _variant_t XL95::PivotField::GetDataRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1275)
inline void XL95::PivotField::PutDataRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d0, VT_VARIANT, &_val);
}

#pragma implementation_key(1276)
inline _variant_t XL95::PivotField::GetDataType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1277)
inline void XL95::PivotField::PutDataType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d2, VT_VARIANT, &_val);
}

#pragma implementation_key(1278)
inline _variant_t XL95::PivotField::GetFunction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x383, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1279)
inline void XL95::PivotField::PutFunction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x383, VT_VARIANT, &_val);
}

#pragma implementation_key(1280)
inline _variant_t XL95::PivotField::GetGroupLevel ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1281)
inline void XL95::PivotField::PutGroupLevel ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d3, VT_VARIANT, &_val);
}

#pragma implementation_key(1282)
inline _variant_t XL95::PivotField::GetHiddenItems ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1283)
inline void XL95::PivotField::PutHiddenItems ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d8, VT_VARIANT, &_val);
}

#pragma implementation_key(1284)
inline _variant_t XL95::PivotField::GetLabelRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2cf, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1285)
inline void XL95::PivotField::PutLabelRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2cf, VT_VARIANT, &_val);
}

#pragma implementation_key(1286)
inline _variant_t XL95::PivotField::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1287)
inline void XL95::PivotField::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(1288)
inline _variant_t XL95::PivotField::GetNumberFormat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1289)
inline void XL95::PivotField::PutNumberFormat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc1, VT_VARIANT, &_val);
}

#pragma implementation_key(1290)
inline _variant_t XL95::PivotField::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1291)
inline void XL95::PivotField::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(1292)
inline _variant_t XL95::PivotField::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1293)
inline void XL95::PivotField::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1294)
inline _variant_t XL95::PivotField::GetParentField ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2dc, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1295)
inline void XL95::PivotField::PutParentField ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2dc, VT_VARIANT, &_val);
}

#pragma implementation_key(1296)
inline _variant_t XL95::PivotField::GetParentItems ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1297)
inline void XL95::PivotField::PutParentItems ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d9, VT_VARIANT, &_val);
}

#pragma implementation_key(1298)
inline _variant_t XL95::PivotField::GetPosition ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x85, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1299)
inline void XL95::PivotField::PutPosition ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x85, VT_VARIANT, &_val);
}

#pragma implementation_key(1300)
inline _variant_t XL95::PivotField::GetSourceName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1301)
inline void XL95::PivotField::PutSourceName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d1, VT_VARIANT, &_val);
}

#pragma implementation_key(1302)
inline _variant_t XL95::PivotField::GetSubtotals ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2dd, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1303)
inline void XL95::PivotField::PutSubtotals ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2dd, VT_VARIANT, &_val);
}

#pragma implementation_key(1304)
inline _variant_t XL95::PivotField::GetTotalLevels ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d4, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1305)
inline void XL95::PivotField::PutTotalLevels ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d4, VT_VARIANT, &_val);
}

#pragma implementation_key(1306)
inline _variant_t XL95::PivotField::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1307)
inline void XL95::PivotField::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(1308)
inline _variant_t XL95::PivotField::GetVisibleItems ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1309)
inline void XL95::PivotField::PutVisibleItems ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d7, VT_VARIANT, &_val);
}

//
// dispinterface PivotFields wrapper method implementations
//

#pragma implementation_key(1310)
inline _variant_t XL95::PivotFields::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1311)
inline _variant_t XL95::PivotFields::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1312)
inline _variant_t XL95::PivotFields::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1313)
inline _variant_t XL95::PivotFields::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1314)
inline void XL95::PivotFields::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1315)
inline _variant_t XL95::PivotFields::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1316)
inline void XL95::PivotFields::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1317)
inline _variant_t XL95::PivotFields::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1318)
inline void XL95::PivotFields::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface PivotItem wrapper method implementations
//

#pragma implementation_key(1319)
inline _variant_t XL95::PivotItem::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1320)
inline _variant_t XL95::PivotItem::GetChildItems ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2da, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1321)
inline void XL95::PivotItem::PutChildItems ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2da, VT_VARIANT, &_val);
}

#pragma implementation_key(1322)
inline _variant_t XL95::PivotItem::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1323)
inline void XL95::PivotItem::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1324)
inline _variant_t XL95::PivotItem::GetDataRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1325)
inline void XL95::PivotItem::PutDataRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d0, VT_VARIANT, &_val);
}

#pragma implementation_key(1326)
inline _variant_t XL95::PivotItem::GetLabelRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2cf, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1327)
inline void XL95::PivotItem::PutLabelRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2cf, VT_VARIANT, &_val);
}

#pragma implementation_key(1328)
inline _variant_t XL95::PivotItem::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1329)
inline void XL95::PivotItem::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(1330)
inline _variant_t XL95::PivotItem::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1331)
inline void XL95::PivotItem::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1332)
inline _variant_t XL95::PivotItem::GetParentItem ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2e5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1333)
inline void XL95::PivotItem::PutParentItem ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2e5, VT_VARIANT, &_val);
}

#pragma implementation_key(1334)
inline _variant_t XL95::PivotItem::GetParentShowDetail ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2e3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1335)
inline void XL95::PivotItem::PutParentShowDetail ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2e3, VT_VARIANT, &_val);
}

#pragma implementation_key(1336)
inline _variant_t XL95::PivotItem::GetPosition ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x85, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1337)
inline void XL95::PivotItem::PutPosition ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x85, VT_VARIANT, &_val);
}

#pragma implementation_key(1338)
inline _variant_t XL95::PivotItem::GetShowDetail ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x249, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1339)
inline void XL95::PivotItem::PutShowDetail ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x249, VT_VARIANT, &_val);
}

#pragma implementation_key(1340)
inline _variant_t XL95::PivotItem::GetSourceName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1341)
inline void XL95::PivotItem::PutSourceName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d1, VT_VARIANT, &_val);
}

#pragma implementation_key(1342)
inline _variant_t XL95::PivotItem::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1343)
inline void XL95::PivotItem::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(1344)
inline _variant_t XL95::PivotItem::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1345)
inline void XL95::PivotItem::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

//
// dispinterface PivotItems wrapper method implementations
//

#pragma implementation_key(1346)
inline _variant_t XL95::PivotItems::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1347)
inline _variant_t XL95::PivotItems::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1348)
inline _variant_t XL95::PivotItems::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1349)
inline _variant_t XL95::PivotItems::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1350)
inline void XL95::PivotItems::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1351)
inline _variant_t XL95::PivotItems::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1352)
inline void XL95::PivotItems::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1353)
inline _variant_t XL95::PivotItems::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1354)
inline void XL95::PivotItems::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Scenario wrapper method implementations
//

#pragma implementation_key(1355)
inline _variant_t XL95::Scenario::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1356)
inline _variant_t XL95::Scenario::ChangeScenario ( const _variant_t & ChangingCells, const _variant_t & Values ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x390, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &ChangingCells, &Values);
    return _variant_t(_result, false);
}

#pragma implementation_key(1357)
inline _variant_t XL95::Scenario::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1358)
inline _variant_t XL95::Scenario::Show ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f0, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1359)
inline _variant_t XL95::Scenario::GetChangingCells ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x38f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1360)
inline void XL95::Scenario::PutChangingCells ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x38f, VT_VARIANT, &_val);
}

#pragma implementation_key(1361)
inline _variant_t XL95::Scenario::GetComment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x38e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1362)
inline void XL95::Scenario::PutComment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x38e, VT_VARIANT, &_val);
}

#pragma implementation_key(1363)
inline _variant_t XL95::Scenario::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1364)
inline void XL95::Scenario::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1365)
inline _variant_t XL95::Scenario::GetHidden ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1366)
inline void XL95::Scenario::PutHidden ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10c, VT_VARIANT, &_val);
}

#pragma implementation_key(1367)
inline _variant_t XL95::Scenario::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1368)
inline void XL95::Scenario::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1369)
inline _variant_t XL95::Scenario::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1370)
inline void XL95::Scenario::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(1371)
inline _variant_t XL95::Scenario::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1372)
inline void XL95::Scenario::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(1373)
inline _variant_t XL95::Scenario::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1374)
inline void XL95::Scenario::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1375)
inline _variant_t XL95::Scenario::GetValues ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xa4, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1376)
inline void XL95::Scenario::PutValues ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xa4, VT_VARIANT, &_val);
}

//
// dispinterface Scenarios wrapper method implementations
//

#pragma implementation_key(1377)
inline _variant_t XL95::Scenarios::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1378)
inline _variant_t XL95::Scenarios::Add ( const _variant_t & Name, const _variant_t & ChangingCells, const _variant_t & Values, const _variant_t & Comment, const _variant_t & Locked, const _variant_t & Hidden ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c\x080c\x080c", &Name, &ChangingCells, &Values, &Comment, &Locked, &Hidden);
    return _variant_t(_result, false);
}

#pragma implementation_key(1379)
inline _variant_t XL95::Scenarios::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1380)
inline _variant_t XL95::Scenarios::CreateSummary ( const _variant_t & ReportType, const _variant_t & ResultCells ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x391, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &ReportType, &ResultCells);
    return _variant_t(_result, false);
}

#pragma implementation_key(1381)
inline _variant_t XL95::Scenarios::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1382)
inline _variant_t XL95::Scenarios::Merge ( const _variant_t & Source ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x234, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Source);
    return _variant_t(_result, false);
}

#pragma implementation_key(1383)
inline _variant_t XL95::Scenarios::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1384)
inline void XL95::Scenarios::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1385)
inline _variant_t XL95::Scenarios::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1386)
inline void XL95::Scenarios::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1387)
inline _variant_t XL95::Scenarios::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1388)
inline void XL95::Scenarios::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface MenuBar wrapper method implementations
//

#pragma implementation_key(1389)
inline _variant_t XL95::MenuBar::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1390)
inline _variant_t XL95::MenuBar::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1391)
inline _variant_t XL95::MenuBar::BuiltIn ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x229, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1392)
inline _variant_t XL95::MenuBar::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1393)
inline _variant_t XL95::MenuBar::Menus ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x24f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1394)
inline _variant_t XL95::MenuBar::Reset ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x22b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1395)
inline _variant_t XL95::MenuBar::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1396)
inline void XL95::MenuBar::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(1397)
inline _variant_t XL95::MenuBar::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1398)
inline void XL95::MenuBar::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1399)
inline _variant_t XL95::MenuBar::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1400)
inline void XL95::MenuBar::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1401)
inline _variant_t XL95::MenuBar::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1402)
inline void XL95::MenuBar::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface MenuBars wrapper method implementations
//

#pragma implementation_key(1403)
inline _variant_t XL95::MenuBars::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1404)
inline _variant_t XL95::MenuBars::Add ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(1405)
inline _variant_t XL95::MenuBars::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1406)
inline _variant_t XL95::MenuBars::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1407)
inline _variant_t XL95::MenuBars::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1408)
inline void XL95::MenuBars::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1409)
inline _variant_t XL95::MenuBars::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1410)
inline void XL95::MenuBars::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1411)
inline _variant_t XL95::MenuBars::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1412)
inline void XL95::MenuBars::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Menu wrapper method implementations
//

#pragma implementation_key(1413)
inline _variant_t XL95::Menu::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1414)
inline _variant_t XL95::Menu::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1415)
inline _variant_t XL95::Menu::MenuItems ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x251, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1416)
inline _variant_t XL95::Menu::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1417)
inline void XL95::Menu::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(1418)
inline _variant_t XL95::Menu::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1419)
inline void XL95::Menu::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1420)
inline _variant_t XL95::Menu::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1421)
inline void XL95::Menu::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(1422)
inline _variant_t XL95::Menu::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1423)
inline void XL95::Menu::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1424)
inline _variant_t XL95::Menu::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1425)
inline void XL95::Menu::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Menus wrapper method implementations
//

#pragma implementation_key(1426)
inline _variant_t XL95::Menus::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1427)
inline _variant_t XL95::Menus::Add ( const _variant_t & Caption, const _variant_t & Before, const _variant_t & Restore ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c", &Caption, &Before, &Restore);
    return _variant_t(_result, false);
}

#pragma implementation_key(1428)
inline _variant_t XL95::Menus::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1429)
inline _variant_t XL95::Menus::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1430)
inline _variant_t XL95::Menus::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1431)
inline void XL95::Menus::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1432)
inline _variant_t XL95::Menus::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1433)
inline void XL95::Menus::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1434)
inline _variant_t XL95::Menus::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1435)
inline void XL95::Menus::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface MenuItem wrapper method implementations
//

#pragma implementation_key(1436)
inline _variant_t XL95::MenuItem::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1437)
inline _variant_t XL95::MenuItem::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1438)
inline _variant_t XL95::MenuItem::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1439)
inline void XL95::MenuItem::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(1440)
inline _variant_t XL95::MenuItem::GetChecked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x257, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1441)
inline void XL95::MenuItem::PutChecked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x257, VT_VARIANT, &_val);
}

#pragma implementation_key(1442)
inline _variant_t XL95::MenuItem::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1443)
inline void XL95::MenuItem::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1444)
inline _variant_t XL95::MenuItem::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1445)
inline void XL95::MenuItem::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(1446)
inline _variant_t XL95::MenuItem::GetHelpContextID ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x163, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1447)
inline void XL95::MenuItem::PutHelpContextID ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x163, VT_VARIANT, &_val);
}

#pragma implementation_key(1448)
inline _variant_t XL95::MenuItem::GetHelpFile ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x168, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1449)
inline void XL95::MenuItem::PutHelpFile ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x168, VT_VARIANT, &_val);
}

#pragma implementation_key(1450)
inline _variant_t XL95::MenuItem::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1451)
inline void XL95::MenuItem::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1452)
inline _variant_t XL95::MenuItem::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1453)
inline void XL95::MenuItem::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(1454)
inline _variant_t XL95::MenuItem::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1455)
inline void XL95::MenuItem::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1456)
inline _variant_t XL95::MenuItem::GetStatusBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x182, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1457)
inline void XL95::MenuItem::PutStatusBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x182, VT_VARIANT, &_val);
}

//
// dispinterface MenuItems wrapper method implementations
//

#pragma implementation_key(1458)
inline _variant_t XL95::MenuItems::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1459)
inline _variant_t XL95::MenuItems::Add ( const _variant_t & Caption, const _variant_t & OnAction, const _variant_t & ShortcutKey, const _variant_t & Before, const _variant_t & Restore, const _variant_t & StatusBar, const _variant_t & HelpFile, const _variant_t & HelpContextID ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Caption, &OnAction, &ShortcutKey, &Before, &Restore, &StatusBar, &HelpFile, &HelpContextID);
    return _variant_t(_result, false);
}

#pragma implementation_key(1460)
inline _variant_t XL95::MenuItems::AddMenu ( const _variant_t & Caption, const _variant_t & Before, const _variant_t & Restore ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x256, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c", &Caption, &Before, &Restore);
    return _variant_t(_result, false);
}

#pragma implementation_key(1461)
inline _variant_t XL95::MenuItems::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1462)
inline _variant_t XL95::MenuItems::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1463)
inline _variant_t XL95::MenuItems::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1464)
inline void XL95::MenuItems::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1465)
inline _variant_t XL95::MenuItems::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1466)
inline void XL95::MenuItems::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1467)
inline _variant_t XL95::MenuItems::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1468)
inline void XL95::MenuItems::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Window wrapper method implementations
//

#pragma implementation_key(1469)
inline _variant_t XL95::Window::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1470)
inline _variant_t XL95::Window::ActivateNext ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x45b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1471)
inline _variant_t XL95::Window::ActivatePrevious ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x45c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1472)
inline _variant_t XL95::Window::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1473)
inline _variant_t XL95::Window::Close ( const _variant_t & SaveChanges, const _variant_t & Filename, const _variant_t & RouteWorkbook ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x115, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &SaveChanges, &Filename, &RouteWorkbook);
    return _variant_t(_result, false);
}

#pragma implementation_key(1474)
inline _variant_t XL95::Window::LargeScroll ( const _variant_t & Down, const _variant_t & Up, const _variant_t & ToRight, const _variant_t & ToLeft ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x223, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Down, &Up, &ToRight, &ToLeft);
    return _variant_t(_result, false);
}

#pragma implementation_key(1475)
inline _variant_t XL95::Window::NewWindow ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x118, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1476)
inline _variant_t XL95::Window::Panes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x28d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1477)
inline _variant_t XL95::Window::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(1478)
inline _variant_t XL95::Window::PrintPreview ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1479)
inline _variant_t XL95::Window::ScrollWorkbookTabs ( const _variant_t & Sheets, const _variant_t & Position ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x296, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Sheets, &Position);
    return _variant_t(_result, false);
}

#pragma implementation_key(1480)
inline _variant_t XL95::Window::SetInfoDisplay ( const _variant_t & Cell, const _variant_t & Formula, const _variant_t & Value, const _variant_t & Format, const _variant_t & Protection, const _variant_t & Names, const _variant_t & Precedents, const _variant_t & Dependents, const _variant_t & Note ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x413, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Cell, &Formula, &Value, &Format, &Protection, &Names, &Precedents, &Dependents, &Note);
    return _variant_t(_result, false);
}

#pragma implementation_key(1481)
inline _variant_t XL95::Window::SmallScroll ( const _variant_t & Down, const _variant_t & Up, const _variant_t & ToRight, const _variant_t & ToLeft ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x224, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Down, &Up, &ToRight, &ToLeft);
    return _variant_t(_result, false);
}

#pragma implementation_key(1482)
inline _variant_t XL95::Window::GetActiveCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x131, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1483)
inline void XL95::Window::PutActiveCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x131, VT_VARIANT, &_val);
}

#pragma implementation_key(1484)
inline _variant_t XL95::Window::GetActiveChart ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1485)
inline void XL95::Window::PutActiveChart ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb7, VT_VARIANT, &_val);
}

#pragma implementation_key(1486)
inline _variant_t XL95::Window::GetActivePane ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x282, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1487)
inline void XL95::Window::PutActivePane ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x282, VT_VARIANT, &_val);
}

#pragma implementation_key(1488)
inline _variant_t XL95::Window::GetActiveSheet ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x133, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1489)
inline void XL95::Window::PutActiveSheet ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x133, VT_VARIANT, &_val);
}

#pragma implementation_key(1490)
inline _variant_t XL95::Window::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1491)
inline void XL95::Window::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(1492)
inline _variant_t XL95::Window::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1493)
inline void XL95::Window::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1494)
inline _variant_t XL95::Window::GetDisplayFormulas ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x284, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1495)
inline void XL95::Window::PutDisplayFormulas ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x284, VT_VARIANT, &_val);
}

#pragma implementation_key(1496)
inline _variant_t XL95::Window::GetDisplayGridlines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x285, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1497)
inline void XL95::Window::PutDisplayGridlines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x285, VT_VARIANT, &_val);
}

#pragma implementation_key(1498)
inline _variant_t XL95::Window::GetDisplayHeadings ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x286, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1499)
inline void XL95::Window::PutDisplayHeadings ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x286, VT_VARIANT, &_val);
}

#pragma implementation_key(1500)
inline _variant_t XL95::Window::GetDisplayHorizontalScrollBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x399, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1501)
inline void XL95::Window::PutDisplayHorizontalScrollBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x399, VT_VARIANT, &_val);
}

#pragma implementation_key(1502)
inline _variant_t XL95::Window::GetDisplayOutline ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x287, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1503)
inline void XL95::Window::PutDisplayOutline ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x287, VT_VARIANT, &_val);
}

#pragma implementation_key(1504)
inline _variant_t XL95::Window::GetDisplayRightToLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x288, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1505)
inline void XL95::Window::PutDisplayRightToLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x288, VT_VARIANT, &_val);
}

#pragma implementation_key(1506)
inline _variant_t XL95::Window::GetDisplayVerticalScrollBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x39a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1507)
inline void XL95::Window::PutDisplayVerticalScrollBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x39a, VT_VARIANT, &_val);
}

#pragma implementation_key(1508)
inline _variant_t XL95::Window::GetDisplayWorkbookTabs ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x39b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1509)
inline void XL95::Window::PutDisplayWorkbookTabs ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x39b, VT_VARIANT, &_val);
}

#pragma implementation_key(1510)
inline _variant_t XL95::Window::GetDisplayZeros ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x289, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1511)
inline void XL95::Window::PutDisplayZeros ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x289, VT_VARIANT, &_val);
}

#pragma implementation_key(1512)
inline _variant_t XL95::Window::GetFreezePanes ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1513)
inline void XL95::Window::PutFreezePanes ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28a, VT_VARIANT, &_val);
}

#pragma implementation_key(1514)
inline _variant_t XL95::Window::GetGridlineColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1515)
inline void XL95::Window::PutGridlineColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28b, VT_VARIANT, &_val);
}

#pragma implementation_key(1516)
inline _variant_t XL95::Window::GetGridlineColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1517)
inline void XL95::Window::PutGridlineColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28c, VT_VARIANT, &_val);
}

#pragma implementation_key(1518)
inline _variant_t XL95::Window::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1519)
inline void XL95::Window::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(1520)
inline _variant_t XL95::Window::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1521)
inline void XL95::Window::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1522)
inline _variant_t XL95::Window::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1523)
inline void XL95::Window::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(1524)
inline _variant_t XL95::Window::GetOnWindow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1525)
inline void XL95::Window::PutOnWindow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26f, VT_VARIANT, &_val);
}

#pragma implementation_key(1526)
inline _variant_t XL95::Window::GetPageSetup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1527)
inline void XL95::Window::PutPageSetup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1528)
inline _variant_t XL95::Window::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1529)
inline void XL95::Window::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1530)
inline _variant_t XL95::Window::GetRangeSelection ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4a5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1531)
inline void XL95::Window::PutRangeSelection ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4a5, VT_VARIANT, &_val);
}

#pragma implementation_key(1532)
inline _variant_t XL95::Window::GetScrollColumn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1533)
inline void XL95::Window::PutScrollColumn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28e, VT_VARIANT, &_val);
}

#pragma implementation_key(1534)
inline _variant_t XL95::Window::GetScrollRow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1535)
inline void XL95::Window::PutScrollRow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28f, VT_VARIANT, &_val);
}

#pragma implementation_key(1536)
inline _variant_t XL95::Window::GetSelectedSheets ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x290, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1537)
inline void XL95::Window::PutSelectedSheets ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x290, VT_VARIANT, &_val);
}

#pragma implementation_key(1538)
inline _variant_t XL95::Window::GetSelection ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x93, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1539)
inline void XL95::Window::PutSelection ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x93, VT_VARIANT, &_val);
}

#pragma implementation_key(1540)
inline _variant_t XL95::Window::GetSplit ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x291, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1541)
inline void XL95::Window::PutSplit ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x291, VT_VARIANT, &_val);
}

#pragma implementation_key(1542)
inline _variant_t XL95::Window::GetSplitColumn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x292, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1543)
inline void XL95::Window::PutSplitColumn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x292, VT_VARIANT, &_val);
}

#pragma implementation_key(1544)
inline _variant_t XL95::Window::GetSplitHorizontal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x293, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1545)
inline void XL95::Window::PutSplitHorizontal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x293, VT_VARIANT, &_val);
}

#pragma implementation_key(1546)
inline _variant_t XL95::Window::GetSplitRow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x294, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1547)
inline void XL95::Window::PutSplitRow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x294, VT_VARIANT, &_val);
}

#pragma implementation_key(1548)
inline _variant_t XL95::Window::GetSplitVertical ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x295, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1549)
inline void XL95::Window::PutSplitVertical ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x295, VT_VARIANT, &_val);
}

#pragma implementation_key(1550)
inline _variant_t XL95::Window::GetTabRatio ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2a1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1551)
inline void XL95::Window::PutTabRatio ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2a1, VT_VARIANT, &_val);
}

#pragma implementation_key(1552)
inline _variant_t XL95::Window::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1553)
inline void XL95::Window::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(1554)
inline _variant_t XL95::Window::GetType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1555)
inline void XL95::Window::PutType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6c, VT_VARIANT, &_val);
}

#pragma implementation_key(1556)
inline _variant_t XL95::Window::GetUsableHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x185, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1557)
inline void XL95::Window::PutUsableHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x185, VT_VARIANT, &_val);
}

#pragma implementation_key(1558)
inline _variant_t XL95::Window::GetUsableWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x186, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1559)
inline void XL95::Window::PutUsableWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x186, VT_VARIANT, &_val);
}

#pragma implementation_key(1560)
inline _variant_t XL95::Window::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1561)
inline void XL95::Window::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(1562)
inline _variant_t XL95::Window::GetVisibleRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x45e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1563)
inline void XL95::Window::PutVisibleRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x45e, VT_VARIANT, &_val);
}

#pragma implementation_key(1564)
inline _variant_t XL95::Window::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1565)
inline void XL95::Window::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(1566)
inline _variant_t XL95::Window::GetWindowNumber ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x45f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1567)
inline void XL95::Window::PutWindowNumber ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x45f, VT_VARIANT, &_val);
}

#pragma implementation_key(1568)
inline _variant_t XL95::Window::GetWindowState ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x18c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1569)
inline void XL95::Window::PutWindowState ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x18c, VT_VARIANT, &_val);
}

#pragma implementation_key(1570)
inline _variant_t XL95::Window::GetZoom ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x297, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1571)
inline void XL95::Window::PutZoom ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x297, VT_VARIANT, &_val);
}

//
// dispinterface Windows wrapper method implementations
//

#pragma implementation_key(1572)
inline _variant_t XL95::Windows::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1573)
inline _variant_t XL95::Windows::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1574)
inline _variant_t XL95::Windows::Arrange ( const _variant_t & ArrangeStyle, const _variant_t & ActiveWorkbook, const _variant_t & SyncHorizontal, const _variant_t & SyncVertical ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &ArrangeStyle, &ActiveWorkbook, &SyncHorizontal, &SyncVertical);
    return _variant_t(_result, false);
}

#pragma implementation_key(1575)
inline _variant_t XL95::Windows::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1576)
inline _variant_t XL95::Windows::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1577)
inline void XL95::Windows::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1578)
inline _variant_t XL95::Windows::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1579)
inline void XL95::Windows::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1580)
inline _variant_t XL95::Windows::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1581)
inline void XL95::Windows::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Pane wrapper method implementations
//

#pragma implementation_key(1582)
inline _variant_t XL95::Pane::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1583)
inline _variant_t XL95::Pane::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1584)
inline _variant_t XL95::Pane::LargeScroll ( const _variant_t & Down, const _variant_t & Up, const _variant_t & ToRight, const _variant_t & ToLeft ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x223, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Down, &Up, &ToRight, &ToLeft);
    return _variant_t(_result, false);
}

#pragma implementation_key(1585)
inline _variant_t XL95::Pane::SmallScroll ( const _variant_t & Down, const _variant_t & Up, const _variant_t & ToRight, const _variant_t & ToLeft ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x224, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Down, &Up, &ToRight, &ToLeft);
    return _variant_t(_result, false);
}

#pragma implementation_key(1586)
inline _variant_t XL95::Pane::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1587)
inline void XL95::Pane::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1588)
inline _variant_t XL95::Pane::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1589)
inline void XL95::Pane::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1590)
inline _variant_t XL95::Pane::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1591)
inline void XL95::Pane::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1592)
inline _variant_t XL95::Pane::GetScrollColumn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1593)
inline void XL95::Pane::PutScrollColumn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28e, VT_VARIANT, &_val);
}

#pragma implementation_key(1594)
inline _variant_t XL95::Pane::GetScrollRow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1595)
inline void XL95::Pane::PutScrollRow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28f, VT_VARIANT, &_val);
}

#pragma implementation_key(1596)
inline _variant_t XL95::Pane::GetVisibleRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x45e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1597)
inline void XL95::Pane::PutVisibleRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x45e, VT_VARIANT, &_val);
}

//
// dispinterface Panes wrapper method implementations
//

#pragma implementation_key(1598)
inline _variant_t XL95::Panes::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1599)
inline _variant_t XL95::Panes::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1600)
inline _variant_t XL95::Panes::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1601)
inline void XL95::Panes::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1602)
inline _variant_t XL95::Panes::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1603)
inline void XL95::Panes::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1604)
inline _variant_t XL95::Panes::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1605)
inline void XL95::Panes::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Name wrapper method implementations
//

#pragma implementation_key(1606)
inline _variant_t XL95::Name::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1607)
inline _variant_t XL95::Name::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1608)
inline _variant_t XL95::Name::GetCategory ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3a6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1609)
inline void XL95::Name::PutCategory ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3a6, VT_VARIANT, &_val);
}

#pragma implementation_key(1610)
inline _variant_t XL95::Name::GetCategoryLocal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3a7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1611)
inline void XL95::Name::PutCategoryLocal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3a7, VT_VARIANT, &_val);
}

#pragma implementation_key(1612)
inline _variant_t XL95::Name::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1613)
inline void XL95::Name::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1614)
inline _variant_t XL95::Name::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1615)
inline void XL95::Name::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1616)
inline _variant_t XL95::Name::GetMacroType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3a8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1617)
inline void XL95::Name::PutMacroType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3a8, VT_VARIANT, &_val);
}

#pragma implementation_key(1618)
inline _variant_t XL95::Name::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1619)
inline void XL95::Name::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(1620)
inline _variant_t XL95::Name::GetNameLocal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3a9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1621)
inline void XL95::Name::PutNameLocal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3a9, VT_VARIANT, &_val);
}

#pragma implementation_key(1622)
inline _variant_t XL95::Name::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1623)
inline void XL95::Name::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1624)
inline _variant_t XL95::Name::GetRefersTo ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3aa, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1625)
inline void XL95::Name::PutRefersTo ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3aa, VT_VARIANT, &_val);
}

#pragma implementation_key(1626)
inline _variant_t XL95::Name::GetRefersToLocal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ab, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1627)
inline void XL95::Name::PutRefersToLocal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ab, VT_VARIANT, &_val);
}

#pragma implementation_key(1628)
inline _variant_t XL95::Name::GetRefersToR1C1 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ac, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1629)
inline void XL95::Name::PutRefersToR1C1 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ac, VT_VARIANT, &_val);
}

#pragma implementation_key(1630)
inline _variant_t XL95::Name::GetRefersToR1C1Local ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ad, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1631)
inline void XL95::Name::PutRefersToR1C1Local ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ad, VT_VARIANT, &_val);
}

#pragma implementation_key(1632)
inline _variant_t XL95::Name::GetRefersToRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x488, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1633)
inline void XL95::Name::PutRefersToRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x488, VT_VARIANT, &_val);
}

#pragma implementation_key(1634)
inline _variant_t XL95::Name::GetShortcutKey ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x255, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1635)
inline void XL95::Name::PutShortcutKey ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x255, VT_VARIANT, &_val);
}

#pragma implementation_key(1636)
inline _variant_t XL95::Name::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1637)
inline void XL95::Name::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(1638)
inline _variant_t XL95::Name::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1639)
inline void XL95::Name::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

//
// dispinterface Names wrapper method implementations
//

#pragma implementation_key(1640)
inline _variant_t XL95::Names::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1641)
inline _variant_t XL95::Names::Add ( const _variant_t & Name, const _variant_t & RefersTo, const _variant_t & Visible, const _variant_t & MacroType, const _variant_t & ShortcutKey, const _variant_t & Category, const _variant_t & NameLocal, const _variant_t & RefersToLocal, const _variant_t & CategoryLocal, const _variant_t & RefersToR1C1, const _variant_t & RefersToR1C1Local ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Name, &RefersTo, &Visible, &MacroType, &ShortcutKey, &Category, &NameLocal, &RefersToLocal, &CategoryLocal, &RefersToR1C1, &RefersToR1C1Local);
    return _variant_t(_result, false);
}

#pragma implementation_key(1642)
inline _variant_t XL95::Names::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1643)
inline _variant_t XL95::Names::Item ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Index, &IndexLocal, &RefersTo);
    return _variant_t(_result, false);
}

#pragma implementation_key(1644)
inline _variant_t XL95::Names::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1645)
inline void XL95::Names::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1646)
inline _variant_t XL95::Names::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1647)
inline void XL95::Names::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1648)
inline _variant_t XL95::Names::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1649)
inline void XL95::Names::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface DrawingObjects wrapper method implementations
//

#pragma implementation_key(1650)
inline _variant_t XL95::DrawingObjects::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1651)
inline _variant_t XL95::DrawingObjects::AddItem ( const _variant_t & Text, const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x353, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Text, &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1652)
inline _variant_t XL95::DrawingObjects::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1653)
inline _variant_t XL95::DrawingObjects::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1654)
inline _variant_t XL95::DrawingObjects::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(1655)
inline _variant_t XL95::DrawingObjects::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(1656)
inline _variant_t XL95::DrawingObjects::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1657)
inline _variant_t XL95::DrawingObjects::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(1658)
inline _variant_t XL95::DrawingObjects::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1659)
inline _variant_t XL95::DrawingObjects::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1660)
inline _variant_t XL95::DrawingObjects::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1661)
inline _variant_t XL95::DrawingObjects::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1662)
inline _variant_t XL95::DrawingObjects::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1663)
inline _variant_t XL95::DrawingObjects::LinkCombo ( const _variant_t & Link ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x358, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Link);
    return _variant_t(_result, false);
}

#pragma implementation_key(1664)
inline _variant_t XL95::DrawingObjects::RemoveAllItems ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x355, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1665)
inline _variant_t XL95::DrawingObjects::RemoveItem ( const _variant_t & Index, const _variant_t & Count ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x354, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Index, &Count);
    return _variant_t(_result, false);
}

#pragma implementation_key(1666)
inline _variant_t XL95::DrawingObjects::Reshape ( const _variant_t & Vertex, const _variant_t & Insert, const _variant_t & Left, const _variant_t & Top ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c", &Vertex, &Insert, &Left, &Top);
    return _variant_t(_result, false);
}

#pragma implementation_key(1667)
inline _variant_t XL95::DrawingObjects::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(1668)
inline _variant_t XL95::DrawingObjects::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1669)
inline _variant_t XL95::DrawingObjects::Ungroup ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1670)
inline _variant_t XL95::DrawingObjects::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1671)
inline void XL95::DrawingObjects::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(1672)
inline _variant_t XL95::DrawingObjects::GetAddIndent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x427, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1673)
inline void XL95::DrawingObjects::PutAddIndent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x427, VT_VARIANT, &_val);
}

#pragma implementation_key(1674)
inline _variant_t XL95::DrawingObjects::GetArrowHeadLength ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x263, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1675)
inline void XL95::DrawingObjects::PutArrowHeadLength ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x263, VT_VARIANT, &_val);
}

#pragma implementation_key(1676)
inline _variant_t XL95::DrawingObjects::GetArrowHeadStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x264, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1677)
inline void XL95::DrawingObjects::PutArrowHeadStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x264, VT_VARIANT, &_val);
}

#pragma implementation_key(1678)
inline _variant_t XL95::DrawingObjects::GetArrowHeadWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x265, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1679)
inline void XL95::DrawingObjects::PutArrowHeadWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x265, VT_VARIANT, &_val);
}

#pragma implementation_key(1680)
inline _variant_t XL95::DrawingObjects::GetAutoSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x266, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1681)
inline void XL95::DrawingObjects::PutAutoSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x266, VT_VARIANT, &_val);
}

#pragma implementation_key(1682)
inline _variant_t XL95::DrawingObjects::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1683)
inline void XL95::DrawingObjects::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(1684)
inline _variant_t XL95::DrawingObjects::GetCancelButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1685)
inline void XL95::DrawingObjects::PutCancelButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35a, VT_VARIANT, &_val);
}

#pragma implementation_key(1686)
inline _variant_t XL95::DrawingObjects::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1687)
inline void XL95::DrawingObjects::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(1688)
inline _variant_t XL95::DrawingObjects::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1689)
inline void XL95::DrawingObjects::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1690)
inline _variant_t XL95::DrawingObjects::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1691)
inline void XL95::DrawingObjects::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1692)
inline _variant_t XL95::DrawingObjects::GetDefaultButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x359, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1693)
inline void XL95::DrawingObjects::PutDefaultButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x359, VT_VARIANT, &_val);
}

#pragma implementation_key(1694)
inline _variant_t XL95::DrawingObjects::GetDismissButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1695)
inline void XL95::DrawingObjects::PutDismissButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35b, VT_VARIANT, &_val);
}

#pragma implementation_key(1696)
inline _variant_t XL95::DrawingObjects::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1697)
inline void XL95::DrawingObjects::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(1698)
inline _variant_t XL95::DrawingObjects::GetDisplayVerticalScrollBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x39a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1699)
inline void XL95::DrawingObjects::PutDisplayVerticalScrollBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x39a, VT_VARIANT, &_val);
}

#pragma implementation_key(1700)
inline _variant_t XL95::DrawingObjects::GetDropDownLines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x350, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1701)
inline void XL95::DrawingObjects::PutDropDownLines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x350, VT_VARIANT, &_val);
}

#pragma implementation_key(1702)
inline _variant_t XL95::DrawingObjects::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1703)
inline void XL95::DrawingObjects::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(1704)
inline _variant_t XL95::DrawingObjects::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1705)
inline void XL95::DrawingObjects::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(1706)
inline _variant_t XL95::DrawingObjects::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1707)
inline void XL95::DrawingObjects::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(1708)
inline _variant_t XL95::DrawingObjects::GetHelpButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1709)
inline void XL95::DrawingObjects::PutHelpButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35c, VT_VARIANT, &_val);
}

#pragma implementation_key(1710)
inline _variant_t XL95::DrawingObjects::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1711)
inline void XL95::DrawingObjects::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(1712)
inline _variant_t XL95::DrawingObjects::GetInputType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x356, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1713)
inline void XL95::DrawingObjects::PutInputType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x356, VT_VARIANT, &_val);
}

#pragma implementation_key(1714)
inline _variant_t XL95::DrawingObjects::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1715)
inline void XL95::DrawingObjects::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(1716)
inline _variant_t XL95::DrawingObjects::GetLargeChange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1717)
inline void XL95::DrawingObjects::PutLargeChange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34d, VT_VARIANT, &_val);
}

#pragma implementation_key(1718)
inline _variant_t XL95::DrawingObjects::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1719)
inline void XL95::DrawingObjects::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(1720)
inline _variant_t XL95::DrawingObjects::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1721)
inline void XL95::DrawingObjects::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(1722)
inline _variant_t XL95::DrawingObjects::GetList ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1723)
inline void XL95::DrawingObjects::PutList ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35d, VT_VARIANT, &_val);
}

#pragma implementation_key(1724)
inline _variant_t XL95::DrawingObjects::GetListFillRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1725)
inline void XL95::DrawingObjects::PutListFillRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34f, VT_VARIANT, &_val);
}

#pragma implementation_key(1726)
inline _variant_t XL95::DrawingObjects::GetListIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x352, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1727)
inline void XL95::DrawingObjects::PutListIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x352, VT_VARIANT, &_val);
}

#pragma implementation_key(1728)
inline _variant_t XL95::DrawingObjects::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1729)
inline void XL95::DrawingObjects::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(1730)
inline _variant_t XL95::DrawingObjects::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1731)
inline void XL95::DrawingObjects::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(1732)
inline _variant_t XL95::DrawingObjects::GetMax ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1733)
inline void XL95::DrawingObjects::PutMax ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34a, VT_VARIANT, &_val);
}

#pragma implementation_key(1734)
inline _variant_t XL95::DrawingObjects::GetMin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1735)
inline void XL95::DrawingObjects::PutMin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34b, VT_VARIANT, &_val);
}

#pragma implementation_key(1736)
inline _variant_t XL95::DrawingObjects::GetMultiLine ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x357, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1737)
inline void XL95::DrawingObjects::PutMultiLine ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x357, VT_VARIANT, &_val);
}

#pragma implementation_key(1738)
inline _variant_t XL95::DrawingObjects::GetMultiSelect ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x20, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1739)
inline void XL95::DrawingObjects::PutMultiSelect ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x20, VT_VARIANT, &_val);
}

#pragma implementation_key(1740)
inline _variant_t XL95::DrawingObjects::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1741)
inline void XL95::DrawingObjects::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(1742)
inline _variant_t XL95::DrawingObjects::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1743)
inline void XL95::DrawingObjects::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(1744)
inline _variant_t XL95::DrawingObjects::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1745)
inline void XL95::DrawingObjects::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1746)
inline _variant_t XL95::DrawingObjects::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1747)
inline void XL95::DrawingObjects::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(1748)
inline _variant_t XL95::DrawingObjects::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1749)
inline void XL95::DrawingObjects::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(1750)
inline _variant_t XL95::DrawingObjects::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1751)
inline void XL95::DrawingObjects::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(1752)
inline _variant_t XL95::DrawingObjects::GetRoundedCorners ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1753)
inline void XL95::DrawingObjects::PutRoundedCorners ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26b, VT_VARIANT, &_val);
}

#pragma implementation_key(1754)
inline _variant_t XL95::DrawingObjects::GetSelected ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x463, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1755)
inline void XL95::DrawingObjects::PutSelected ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x463, VT_VARIANT, &_val);
}

#pragma implementation_key(1756)
inline _variant_t XL95::DrawingObjects::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1757)
inline void XL95::DrawingObjects::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(1758)
inline _variant_t XL95::DrawingObjects::GetSmallChange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1759)
inline void XL95::DrawingObjects::PutSmallChange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34c, VT_VARIANT, &_val);
}

#pragma implementation_key(1760)
inline _variant_t XL95::DrawingObjects::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1761)
inline void XL95::DrawingObjects::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(1762)
inline _variant_t XL95::DrawingObjects::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1763)
inline void XL95::DrawingObjects::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(1764)
inline _variant_t XL95::DrawingObjects::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1765)
inline void XL95::DrawingObjects::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(1766)
inline _variant_t XL95::DrawingObjects::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1767)
inline void XL95::DrawingObjects::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

#pragma implementation_key(1768)
inline _variant_t XL95::DrawingObjects::GetVertices ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1769)
inline void XL95::DrawingObjects::PutVertices ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26d, VT_VARIANT, &_val);
}

#pragma implementation_key(1770)
inline _variant_t XL95::DrawingObjects::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1771)
inline void XL95::DrawingObjects::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(1772)
inline _variant_t XL95::DrawingObjects::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1773)
inline void XL95::DrawingObjects::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(1774)
inline _variant_t XL95::DrawingObjects::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1775)
inline void XL95::DrawingObjects::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface GroupObject wrapper method implementations
//

#pragma implementation_key(1776)
inline _variant_t XL95::GroupObject::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1777)
inline _variant_t XL95::GroupObject::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1778)
inline _variant_t XL95::GroupObject::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(1779)
inline _variant_t XL95::GroupObject::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1780)
inline _variant_t XL95::GroupObject::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(1781)
inline _variant_t XL95::GroupObject::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1782)
inline _variant_t XL95::GroupObject::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1783)
inline _variant_t XL95::GroupObject::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1784)
inline _variant_t XL95::GroupObject::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(1785)
inline _variant_t XL95::GroupObject::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1786)
inline _variant_t XL95::GroupObject::Ungroup ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1787)
inline _variant_t XL95::GroupObject::GetAddIndent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x427, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1788)
inline void XL95::GroupObject::PutAddIndent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x427, VT_VARIANT, &_val);
}

#pragma implementation_key(1789)
inline _variant_t XL95::GroupObject::GetArrowHeadLength ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x263, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1790)
inline void XL95::GroupObject::PutArrowHeadLength ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x263, VT_VARIANT, &_val);
}

#pragma implementation_key(1791)
inline _variant_t XL95::GroupObject::GetArrowHeadStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x264, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1792)
inline void XL95::GroupObject::PutArrowHeadStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x264, VT_VARIANT, &_val);
}

#pragma implementation_key(1793)
inline _variant_t XL95::GroupObject::GetArrowHeadWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x265, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1794)
inline void XL95::GroupObject::PutArrowHeadWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x265, VT_VARIANT, &_val);
}

#pragma implementation_key(1795)
inline _variant_t XL95::GroupObject::GetAutoSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x266, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1796)
inline void XL95::GroupObject::PutAutoSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x266, VT_VARIANT, &_val);
}

#pragma implementation_key(1797)
inline _variant_t XL95::GroupObject::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1798)
inline void XL95::GroupObject::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(1799)
inline _variant_t XL95::GroupObject::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1800)
inline void XL95::GroupObject::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(1801)
inline _variant_t XL95::GroupObject::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1802)
inline void XL95::GroupObject::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1803)
inline _variant_t XL95::GroupObject::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1804)
inline void XL95::GroupObject::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(1805)
inline _variant_t XL95::GroupObject::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1806)
inline void XL95::GroupObject::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(1807)
inline _variant_t XL95::GroupObject::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1808)
inline void XL95::GroupObject::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(1809)
inline _variant_t XL95::GroupObject::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1810)
inline void XL95::GroupObject::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(1811)
inline _variant_t XL95::GroupObject::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1812)
inline void XL95::GroupObject::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1813)
inline _variant_t XL95::GroupObject::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1814)
inline void XL95::GroupObject::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(1815)
inline _variant_t XL95::GroupObject::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1816)
inline void XL95::GroupObject::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(1817)
inline _variant_t XL95::GroupObject::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1818)
inline void XL95::GroupObject::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(1819)
inline _variant_t XL95::GroupObject::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1820)
inline void XL95::GroupObject::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(1821)
inline _variant_t XL95::GroupObject::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1822)
inline void XL95::GroupObject::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(1823)
inline _variant_t XL95::GroupObject::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1824)
inline void XL95::GroupObject::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(1825)
inline _variant_t XL95::GroupObject::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1826)
inline void XL95::GroupObject::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1827)
inline _variant_t XL95::GroupObject::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1828)
inline void XL95::GroupObject::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(1829)
inline _variant_t XL95::GroupObject::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1830)
inline void XL95::GroupObject::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(1831)
inline _variant_t XL95::GroupObject::GetRoundedCorners ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1832)
inline void XL95::GroupObject::PutRoundedCorners ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26b, VT_VARIANT, &_val);
}

#pragma implementation_key(1833)
inline _variant_t XL95::GroupObject::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1834)
inline void XL95::GroupObject::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(1835)
inline _variant_t XL95::GroupObject::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1836)
inline void XL95::GroupObject::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(1837)
inline _variant_t XL95::GroupObject::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1838)
inline void XL95::GroupObject::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(1839)
inline _variant_t XL95::GroupObject::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1840)
inline void XL95::GroupObject::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

#pragma implementation_key(1841)
inline _variant_t XL95::GroupObject::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1842)
inline void XL95::GroupObject::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(1843)
inline _variant_t XL95::GroupObject::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1844)
inline void XL95::GroupObject::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(1845)
inline _variant_t XL95::GroupObject::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1846)
inline void XL95::GroupObject::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface GroupObjects wrapper method implementations
//

#pragma implementation_key(1847)
inline _variant_t XL95::GroupObjects::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1848)
inline _variant_t XL95::GroupObjects::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1849)
inline _variant_t XL95::GroupObjects::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1850)
inline _variant_t XL95::GroupObjects::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(1851)
inline _variant_t XL95::GroupObjects::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1852)
inline _variant_t XL95::GroupObjects::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(1853)
inline _variant_t XL95::GroupObjects::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1854)
inline _variant_t XL95::GroupObjects::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1855)
inline _variant_t XL95::GroupObjects::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1856)
inline _variant_t XL95::GroupObjects::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1857)
inline _variant_t XL95::GroupObjects::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1858)
inline _variant_t XL95::GroupObjects::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(1859)
inline _variant_t XL95::GroupObjects::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1860)
inline _variant_t XL95::GroupObjects::Ungroup ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1861)
inline _variant_t XL95::GroupObjects::GetAddIndent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x427, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1862)
inline void XL95::GroupObjects::PutAddIndent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x427, VT_VARIANT, &_val);
}

#pragma implementation_key(1863)
inline _variant_t XL95::GroupObjects::GetArrowHeadLength ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x263, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1864)
inline void XL95::GroupObjects::PutArrowHeadLength ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x263, VT_VARIANT, &_val);
}

#pragma implementation_key(1865)
inline _variant_t XL95::GroupObjects::GetArrowHeadStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x264, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1866)
inline void XL95::GroupObjects::PutArrowHeadStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x264, VT_VARIANT, &_val);
}

#pragma implementation_key(1867)
inline _variant_t XL95::GroupObjects::GetArrowHeadWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x265, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1868)
inline void XL95::GroupObjects::PutArrowHeadWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x265, VT_VARIANT, &_val);
}

#pragma implementation_key(1869)
inline _variant_t XL95::GroupObjects::GetAutoSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x266, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1870)
inline void XL95::GroupObjects::PutAutoSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x266, VT_VARIANT, &_val);
}

#pragma implementation_key(1871)
inline _variant_t XL95::GroupObjects::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1872)
inline void XL95::GroupObjects::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(1873)
inline _variant_t XL95::GroupObjects::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1874)
inline void XL95::GroupObjects::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1875)
inline _variant_t XL95::GroupObjects::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1876)
inline void XL95::GroupObjects::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1877)
inline _variant_t XL95::GroupObjects::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1878)
inline void XL95::GroupObjects::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(1879)
inline _variant_t XL95::GroupObjects::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1880)
inline void XL95::GroupObjects::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(1881)
inline _variant_t XL95::GroupObjects::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1882)
inline void XL95::GroupObjects::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(1883)
inline _variant_t XL95::GroupObjects::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1884)
inline void XL95::GroupObjects::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(1885)
inline _variant_t XL95::GroupObjects::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1886)
inline void XL95::GroupObjects::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(1887)
inline _variant_t XL95::GroupObjects::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1888)
inline void XL95::GroupObjects::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(1889)
inline _variant_t XL95::GroupObjects::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1890)
inline void XL95::GroupObjects::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(1891)
inline _variant_t XL95::GroupObjects::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1892)
inline void XL95::GroupObjects::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(1893)
inline _variant_t XL95::GroupObjects::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1894)
inline void XL95::GroupObjects::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(1895)
inline _variant_t XL95::GroupObjects::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1896)
inline void XL95::GroupObjects::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1897)
inline _variant_t XL95::GroupObjects::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1898)
inline void XL95::GroupObjects::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(1899)
inline _variant_t XL95::GroupObjects::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1900)
inline void XL95::GroupObjects::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(1901)
inline _variant_t XL95::GroupObjects::GetRoundedCorners ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1902)
inline void XL95::GroupObjects::PutRoundedCorners ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26b, VT_VARIANT, &_val);
}

#pragma implementation_key(1903)
inline _variant_t XL95::GroupObjects::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1904)
inline void XL95::GroupObjects::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(1905)
inline _variant_t XL95::GroupObjects::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1906)
inline void XL95::GroupObjects::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(1907)
inline _variant_t XL95::GroupObjects::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1908)
inline void XL95::GroupObjects::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

#pragma implementation_key(1909)
inline _variant_t XL95::GroupObjects::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1910)
inline void XL95::GroupObjects::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(1911)
inline _variant_t XL95::GroupObjects::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1912)
inline void XL95::GroupObjects::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(1913)
inline _variant_t XL95::GroupObjects::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1914)
inline void XL95::GroupObjects::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Line wrapper method implementations
//

#pragma implementation_key(1915)
inline _variant_t XL95::Line::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1916)
inline _variant_t XL95::Line::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1917)
inline _variant_t XL95::Line::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1918)
inline _variant_t XL95::Line::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(1919)
inline _variant_t XL95::Line::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1920)
inline _variant_t XL95::Line::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1921)
inline _variant_t XL95::Line::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1922)
inline _variant_t XL95::Line::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(1923)
inline _variant_t XL95::Line::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1924)
inline _variant_t XL95::Line::GetArrowHeadLength ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x263, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1925)
inline void XL95::Line::PutArrowHeadLength ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x263, VT_VARIANT, &_val);
}

#pragma implementation_key(1926)
inline _variant_t XL95::Line::GetArrowHeadStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x264, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1927)
inline void XL95::Line::PutArrowHeadStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x264, VT_VARIANT, &_val);
}

#pragma implementation_key(1928)
inline _variant_t XL95::Line::GetArrowHeadWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x265, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1929)
inline void XL95::Line::PutArrowHeadWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x265, VT_VARIANT, &_val);
}

#pragma implementation_key(1930)
inline _variant_t XL95::Line::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1931)
inline void XL95::Line::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(1932)
inline _variant_t XL95::Line::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1933)
inline void XL95::Line::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(1934)
inline _variant_t XL95::Line::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1935)
inline void XL95::Line::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1936)
inline _variant_t XL95::Line::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1937)
inline void XL95::Line::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(1938)
inline _variant_t XL95::Line::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1939)
inline void XL95::Line::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(1940)
inline _variant_t XL95::Line::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1941)
inline void XL95::Line::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1942)
inline _variant_t XL95::Line::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1943)
inline void XL95::Line::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(1944)
inline _variant_t XL95::Line::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1945)
inline void XL95::Line::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(1946)
inline _variant_t XL95::Line::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1947)
inline void XL95::Line::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(1948)
inline _variant_t XL95::Line::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1949)
inline void XL95::Line::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(1950)
inline _variant_t XL95::Line::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1951)
inline void XL95::Line::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(1952)
inline _variant_t XL95::Line::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1953)
inline void XL95::Line::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(1954)
inline _variant_t XL95::Line::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1955)
inline void XL95::Line::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(1956)
inline _variant_t XL95::Line::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1957)
inline void XL95::Line::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(1958)
inline _variant_t XL95::Line::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1959)
inline void XL95::Line::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(1960)
inline _variant_t XL95::Line::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1961)
inline void XL95::Line::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(1962)
inline _variant_t XL95::Line::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1963)
inline void XL95::Line::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(1964)
inline _variant_t XL95::Line::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1965)
inline void XL95::Line::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Lines wrapper method implementations
//

#pragma implementation_key(1966)
inline _variant_t XL95::Lines::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1967)
inline _variant_t XL95::Lines::Add ( const _variant_t & X1, const _variant_t & Y1, const _variant_t & X2, const _variant_t & Y2 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &X1, &Y1, &X2, &Y2);
    return _variant_t(_result, false);
}

#pragma implementation_key(1968)
inline _variant_t XL95::Lines::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1969)
inline _variant_t XL95::Lines::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1970)
inline _variant_t XL95::Lines::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1971)
inline _variant_t XL95::Lines::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(1972)
inline _variant_t XL95::Lines::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1973)
inline _variant_t XL95::Lines::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1974)
inline _variant_t XL95::Lines::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1975)
inline _variant_t XL95::Lines::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1976)
inline _variant_t XL95::Lines::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(1977)
inline _variant_t XL95::Lines::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(1978)
inline _variant_t XL95::Lines::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1979)
inline _variant_t XL95::Lines::GetArrowHeadLength ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x263, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1980)
inline void XL95::Lines::PutArrowHeadLength ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x263, VT_VARIANT, &_val);
}

#pragma implementation_key(1981)
inline _variant_t XL95::Lines::GetArrowHeadStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x264, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1982)
inline void XL95::Lines::PutArrowHeadStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x264, VT_VARIANT, &_val);
}

#pragma implementation_key(1983)
inline _variant_t XL95::Lines::GetArrowHeadWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x265, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1984)
inline void XL95::Lines::PutArrowHeadWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x265, VT_VARIANT, &_val);
}

#pragma implementation_key(1985)
inline _variant_t XL95::Lines::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1986)
inline void XL95::Lines::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(1987)
inline _variant_t XL95::Lines::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1988)
inline void XL95::Lines::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(1989)
inline _variant_t XL95::Lines::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1990)
inline void XL95::Lines::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(1991)
inline _variant_t XL95::Lines::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1992)
inline void XL95::Lines::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(1993)
inline _variant_t XL95::Lines::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1994)
inline void XL95::Lines::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(1995)
inline _variant_t XL95::Lines::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1996)
inline void XL95::Lines::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(1997)
inline _variant_t XL95::Lines::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1998)
inline void XL95::Lines::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(1999)
inline _variant_t XL95::Lines::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2000)
inline void XL95::Lines::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2001)
inline _variant_t XL95::Lines::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2002)
inline void XL95::Lines::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2003)
inline _variant_t XL95::Lines::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2004)
inline void XL95::Lines::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2005)
inline _variant_t XL95::Lines::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2006)
inline void XL95::Lines::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2007)
inline _variant_t XL95::Lines::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2008)
inline void XL95::Lines::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2009)
inline _variant_t XL95::Lines::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2010)
inline void XL95::Lines::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2011)
inline _variant_t XL95::Lines::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2012)
inline void XL95::Lines::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2013)
inline _variant_t XL95::Lines::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2014)
inline void XL95::Lines::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Rectangle wrapper method implementations
//

#pragma implementation_key(2015)
inline _variant_t XL95::Rectangle::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2016)
inline _variant_t XL95::Rectangle::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2017)
inline _variant_t XL95::Rectangle::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2018)
inline _variant_t XL95::Rectangle::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2019)
inline _variant_t XL95::Rectangle::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2020)
inline _variant_t XL95::Rectangle::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2021)
inline _variant_t XL95::Rectangle::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2022)
inline _variant_t XL95::Rectangle::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2023)
inline _variant_t XL95::Rectangle::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2024)
inline _variant_t XL95::Rectangle::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2025)
inline void XL95::Rectangle::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2026)
inline _variant_t XL95::Rectangle::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2027)
inline void XL95::Rectangle::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(2028)
inline _variant_t XL95::Rectangle::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2029)
inline void XL95::Rectangle::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2030)
inline _variant_t XL95::Rectangle::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2031)
inline void XL95::Rectangle::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2032)
inline _variant_t XL95::Rectangle::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2033)
inline void XL95::Rectangle::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2034)
inline _variant_t XL95::Rectangle::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2035)
inline void XL95::Rectangle::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(2036)
inline _variant_t XL95::Rectangle::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2037)
inline void XL95::Rectangle::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2038)
inline _variant_t XL95::Rectangle::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2039)
inline void XL95::Rectangle::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2040)
inline _variant_t XL95::Rectangle::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2041)
inline void XL95::Rectangle::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2042)
inline _variant_t XL95::Rectangle::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2043)
inline void XL95::Rectangle::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(2044)
inline _variant_t XL95::Rectangle::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2045)
inline void XL95::Rectangle::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2046)
inline _variant_t XL95::Rectangle::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2047)
inline void XL95::Rectangle::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2048)
inline _variant_t XL95::Rectangle::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2049)
inline void XL95::Rectangle::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2050)
inline _variant_t XL95::Rectangle::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2051)
inline void XL95::Rectangle::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2052)
inline _variant_t XL95::Rectangle::GetRoundedCorners ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2053)
inline void XL95::Rectangle::PutRoundedCorners ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26b, VT_VARIANT, &_val);
}

#pragma implementation_key(2054)
inline _variant_t XL95::Rectangle::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2055)
inline void XL95::Rectangle::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2056)
inline _variant_t XL95::Rectangle::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2057)
inline void XL95::Rectangle::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2058)
inline _variant_t XL95::Rectangle::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2059)
inline void XL95::Rectangle::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(2060)
inline _variant_t XL95::Rectangle::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2061)
inline void XL95::Rectangle::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2062)
inline _variant_t XL95::Rectangle::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2063)
inline void XL95::Rectangle::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2064)
inline _variant_t XL95::Rectangle::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2065)
inline void XL95::Rectangle::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Rectangles wrapper method implementations
//

#pragma implementation_key(2066)
inline _variant_t XL95::Rectangles::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2067)
inline _variant_t XL95::Rectangles::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(2068)
inline _variant_t XL95::Rectangles::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2069)
inline _variant_t XL95::Rectangles::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2070)
inline _variant_t XL95::Rectangles::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2071)
inline _variant_t XL95::Rectangles::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2072)
inline _variant_t XL95::Rectangles::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2073)
inline _variant_t XL95::Rectangles::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2074)
inline _variant_t XL95::Rectangles::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2075)
inline _variant_t XL95::Rectangles::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2076)
inline _variant_t XL95::Rectangles::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(2077)
inline _variant_t XL95::Rectangles::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2078)
inline _variant_t XL95::Rectangles::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2079)
inline _variant_t XL95::Rectangles::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2080)
inline void XL95::Rectangles::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2081)
inline _variant_t XL95::Rectangles::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2082)
inline void XL95::Rectangles::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(2083)
inline _variant_t XL95::Rectangles::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2084)
inline void XL95::Rectangles::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2085)
inline _variant_t XL95::Rectangles::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2086)
inline void XL95::Rectangles::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2087)
inline _variant_t XL95::Rectangles::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2088)
inline void XL95::Rectangles::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2089)
inline _variant_t XL95::Rectangles::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2090)
inline void XL95::Rectangles::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2091)
inline _variant_t XL95::Rectangles::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2092)
inline void XL95::Rectangles::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2093)
inline _variant_t XL95::Rectangles::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2094)
inline void XL95::Rectangles::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2095)
inline _variant_t XL95::Rectangles::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2096)
inline void XL95::Rectangles::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2097)
inline _variant_t XL95::Rectangles::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2098)
inline void XL95::Rectangles::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2099)
inline _variant_t XL95::Rectangles::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2100)
inline void XL95::Rectangles::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2101)
inline _variant_t XL95::Rectangles::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2102)
inline void XL95::Rectangles::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2103)
inline _variant_t XL95::Rectangles::GetRoundedCorners ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2104)
inline void XL95::Rectangles::PutRoundedCorners ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26b, VT_VARIANT, &_val);
}

#pragma implementation_key(2105)
inline _variant_t XL95::Rectangles::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2106)
inline void XL95::Rectangles::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2107)
inline _variant_t XL95::Rectangles::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2108)
inline void XL95::Rectangles::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2109)
inline _variant_t XL95::Rectangles::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2110)
inline void XL95::Rectangles::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2111)
inline _variant_t XL95::Rectangles::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2112)
inline void XL95::Rectangles::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2113)
inline _variant_t XL95::Rectangles::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2114)
inline void XL95::Rectangles::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Oval wrapper method implementations
//

#pragma implementation_key(2115)
inline _variant_t XL95::Oval::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2116)
inline _variant_t XL95::Oval::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2117)
inline _variant_t XL95::Oval::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2118)
inline _variant_t XL95::Oval::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2119)
inline _variant_t XL95::Oval::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2120)
inline _variant_t XL95::Oval::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2121)
inline _variant_t XL95::Oval::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2122)
inline _variant_t XL95::Oval::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2123)
inline _variant_t XL95::Oval::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2124)
inline _variant_t XL95::Oval::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2125)
inline void XL95::Oval::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2126)
inline _variant_t XL95::Oval::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2127)
inline void XL95::Oval::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(2128)
inline _variant_t XL95::Oval::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2129)
inline void XL95::Oval::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2130)
inline _variant_t XL95::Oval::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2131)
inline void XL95::Oval::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2132)
inline _variant_t XL95::Oval::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2133)
inline void XL95::Oval::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2134)
inline _variant_t XL95::Oval::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2135)
inline void XL95::Oval::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(2136)
inline _variant_t XL95::Oval::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2137)
inline void XL95::Oval::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2138)
inline _variant_t XL95::Oval::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2139)
inline void XL95::Oval::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2140)
inline _variant_t XL95::Oval::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2141)
inline void XL95::Oval::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2142)
inline _variant_t XL95::Oval::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2143)
inline void XL95::Oval::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(2144)
inline _variant_t XL95::Oval::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2145)
inline void XL95::Oval::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2146)
inline _variant_t XL95::Oval::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2147)
inline void XL95::Oval::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2148)
inline _variant_t XL95::Oval::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2149)
inline void XL95::Oval::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2150)
inline _variant_t XL95::Oval::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2151)
inline void XL95::Oval::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2152)
inline _variant_t XL95::Oval::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2153)
inline void XL95::Oval::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2154)
inline _variant_t XL95::Oval::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2155)
inline void XL95::Oval::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2156)
inline _variant_t XL95::Oval::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2157)
inline void XL95::Oval::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(2158)
inline _variant_t XL95::Oval::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2159)
inline void XL95::Oval::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2160)
inline _variant_t XL95::Oval::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2161)
inline void XL95::Oval::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2162)
inline _variant_t XL95::Oval::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2163)
inline void XL95::Oval::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Ovals wrapper method implementations
//

#pragma implementation_key(2164)
inline _variant_t XL95::Ovals::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2165)
inline _variant_t XL95::Ovals::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(2166)
inline _variant_t XL95::Ovals::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2167)
inline _variant_t XL95::Ovals::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2168)
inline _variant_t XL95::Ovals::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2169)
inline _variant_t XL95::Ovals::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2170)
inline _variant_t XL95::Ovals::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2171)
inline _variant_t XL95::Ovals::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2172)
inline _variant_t XL95::Ovals::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2173)
inline _variant_t XL95::Ovals::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2174)
inline _variant_t XL95::Ovals::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(2175)
inline _variant_t XL95::Ovals::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2176)
inline _variant_t XL95::Ovals::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2177)
inline _variant_t XL95::Ovals::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2178)
inline void XL95::Ovals::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2179)
inline _variant_t XL95::Ovals::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2180)
inline void XL95::Ovals::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(2181)
inline _variant_t XL95::Ovals::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2182)
inline void XL95::Ovals::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2183)
inline _variant_t XL95::Ovals::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2184)
inline void XL95::Ovals::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2185)
inline _variant_t XL95::Ovals::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2186)
inline void XL95::Ovals::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2187)
inline _variant_t XL95::Ovals::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2188)
inline void XL95::Ovals::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2189)
inline _variant_t XL95::Ovals::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2190)
inline void XL95::Ovals::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2191)
inline _variant_t XL95::Ovals::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2192)
inline void XL95::Ovals::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2193)
inline _variant_t XL95::Ovals::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2194)
inline void XL95::Ovals::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2195)
inline _variant_t XL95::Ovals::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2196)
inline void XL95::Ovals::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2197)
inline _variant_t XL95::Ovals::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2198)
inline void XL95::Ovals::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2199)
inline _variant_t XL95::Ovals::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2200)
inline void XL95::Ovals::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2201)
inline _variant_t XL95::Ovals::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2202)
inline void XL95::Ovals::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2203)
inline _variant_t XL95::Ovals::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2204)
inline void XL95::Ovals::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2205)
inline _variant_t XL95::Ovals::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2206)
inline void XL95::Ovals::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2207)
inline _variant_t XL95::Ovals::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2208)
inline void XL95::Ovals::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2209)
inline _variant_t XL95::Ovals::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2210)
inline void XL95::Ovals::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Arc wrapper method implementations
//

#pragma implementation_key(2211)
inline _variant_t XL95::Arc::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2212)
inline _variant_t XL95::Arc::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2213)
inline _variant_t XL95::Arc::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2214)
inline _variant_t XL95::Arc::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2215)
inline _variant_t XL95::Arc::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2216)
inline _variant_t XL95::Arc::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2217)
inline _variant_t XL95::Arc::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2218)
inline _variant_t XL95::Arc::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2219)
inline _variant_t XL95::Arc::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2220)
inline _variant_t XL95::Arc::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2221)
inline void XL95::Arc::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2222)
inline _variant_t XL95::Arc::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2223)
inline void XL95::Arc::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(2224)
inline _variant_t XL95::Arc::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2225)
inline void XL95::Arc::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2226)
inline _variant_t XL95::Arc::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2227)
inline void XL95::Arc::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2228)
inline _variant_t XL95::Arc::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2229)
inline void XL95::Arc::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2230)
inline _variant_t XL95::Arc::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2231)
inline void XL95::Arc::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(2232)
inline _variant_t XL95::Arc::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2233)
inline void XL95::Arc::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2234)
inline _variant_t XL95::Arc::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2235)
inline void XL95::Arc::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2236)
inline _variant_t XL95::Arc::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2237)
inline void XL95::Arc::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2238)
inline _variant_t XL95::Arc::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2239)
inline void XL95::Arc::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(2240)
inline _variant_t XL95::Arc::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2241)
inline void XL95::Arc::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2242)
inline _variant_t XL95::Arc::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2243)
inline void XL95::Arc::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2244)
inline _variant_t XL95::Arc::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2245)
inline void XL95::Arc::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2246)
inline _variant_t XL95::Arc::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2247)
inline void XL95::Arc::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2248)
inline _variant_t XL95::Arc::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2249)
inline void XL95::Arc::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2250)
inline _variant_t XL95::Arc::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2251)
inline void XL95::Arc::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(2252)
inline _variant_t XL95::Arc::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2253)
inline void XL95::Arc::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2254)
inline _variant_t XL95::Arc::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2255)
inline void XL95::Arc::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2256)
inline _variant_t XL95::Arc::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2257)
inline void XL95::Arc::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Arcs wrapper method implementations
//

#pragma implementation_key(2258)
inline _variant_t XL95::Arcs::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2259)
inline _variant_t XL95::Arcs::Add ( const _variant_t & X1, const _variant_t & Y1, const _variant_t & X2, const _variant_t & Y2 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &X1, &Y1, &X2, &Y2);
    return _variant_t(_result, false);
}

#pragma implementation_key(2260)
inline _variant_t XL95::Arcs::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2261)
inline _variant_t XL95::Arcs::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2262)
inline _variant_t XL95::Arcs::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2263)
inline _variant_t XL95::Arcs::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2264)
inline _variant_t XL95::Arcs::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2265)
inline _variant_t XL95::Arcs::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2266)
inline _variant_t XL95::Arcs::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2267)
inline _variant_t XL95::Arcs::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2268)
inline _variant_t XL95::Arcs::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(2269)
inline _variant_t XL95::Arcs::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2270)
inline _variant_t XL95::Arcs::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2271)
inline _variant_t XL95::Arcs::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2272)
inline void XL95::Arcs::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2273)
inline _variant_t XL95::Arcs::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2274)
inline void XL95::Arcs::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(2275)
inline _variant_t XL95::Arcs::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2276)
inline void XL95::Arcs::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2277)
inline _variant_t XL95::Arcs::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2278)
inline void XL95::Arcs::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2279)
inline _variant_t XL95::Arcs::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2280)
inline void XL95::Arcs::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2281)
inline _variant_t XL95::Arcs::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2282)
inline void XL95::Arcs::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2283)
inline _variant_t XL95::Arcs::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2284)
inline void XL95::Arcs::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2285)
inline _variant_t XL95::Arcs::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2286)
inline void XL95::Arcs::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2287)
inline _variant_t XL95::Arcs::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2288)
inline void XL95::Arcs::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2289)
inline _variant_t XL95::Arcs::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2290)
inline void XL95::Arcs::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2291)
inline _variant_t XL95::Arcs::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2292)
inline void XL95::Arcs::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2293)
inline _variant_t XL95::Arcs::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2294)
inline void XL95::Arcs::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2295)
inline _variant_t XL95::Arcs::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2296)
inline void XL95::Arcs::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2297)
inline _variant_t XL95::Arcs::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2298)
inline void XL95::Arcs::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2299)
inline _variant_t XL95::Arcs::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2300)
inline void XL95::Arcs::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2301)
inline _variant_t XL95::Arcs::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2302)
inline void XL95::Arcs::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface TextBox wrapper method implementations
//

#pragma implementation_key(2303)
inline _variant_t XL95::TextBox::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2304)
inline _variant_t XL95::TextBox::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2305)
inline _variant_t XL95::TextBox::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(2306)
inline _variant_t XL95::TextBox::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(2307)
inline _variant_t XL95::TextBox::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2308)
inline _variant_t XL95::TextBox::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2309)
inline _variant_t XL95::TextBox::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2310)
inline _variant_t XL95::TextBox::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2311)
inline _variant_t XL95::TextBox::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2312)
inline _variant_t XL95::TextBox::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2313)
inline _variant_t XL95::TextBox::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2314)
inline _variant_t XL95::TextBox::GetAddIndent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x427, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2315)
inline void XL95::TextBox::PutAddIndent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x427, VT_VARIANT, &_val);
}

#pragma implementation_key(2316)
inline _variant_t XL95::TextBox::GetAutoSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x266, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2317)
inline void XL95::TextBox::PutAutoSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x266, VT_VARIANT, &_val);
}

#pragma implementation_key(2318)
inline _variant_t XL95::TextBox::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2319)
inline void XL95::TextBox::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2320)
inline _variant_t XL95::TextBox::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2321)
inline void XL95::TextBox::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(2322)
inline _variant_t XL95::TextBox::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2323)
inline void XL95::TextBox::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(2324)
inline _variant_t XL95::TextBox::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2325)
inline void XL95::TextBox::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2326)
inline _variant_t XL95::TextBox::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2327)
inline void XL95::TextBox::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2328)
inline _variant_t XL95::TextBox::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2329)
inline void XL95::TextBox::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(2330)
inline _variant_t XL95::TextBox::GetFormula ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x105, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2331)
inline void XL95::TextBox::PutFormula ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x105, VT_VARIANT, &_val);
}

#pragma implementation_key(2332)
inline _variant_t XL95::TextBox::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2333)
inline void XL95::TextBox::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2334)
inline _variant_t XL95::TextBox::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2335)
inline void XL95::TextBox::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(2336)
inline _variant_t XL95::TextBox::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2337)
inline void XL95::TextBox::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(2338)
inline _variant_t XL95::TextBox::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2339)
inline void XL95::TextBox::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2340)
inline _variant_t XL95::TextBox::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2341)
inline void XL95::TextBox::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2342)
inline _variant_t XL95::TextBox::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2343)
inline void XL95::TextBox::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2344)
inline _variant_t XL95::TextBox::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2345)
inline void XL95::TextBox::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(2346)
inline _variant_t XL95::TextBox::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2347)
inline void XL95::TextBox::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(2348)
inline _variant_t XL95::TextBox::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2349)
inline void XL95::TextBox::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2350)
inline _variant_t XL95::TextBox::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2351)
inline void XL95::TextBox::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(2352)
inline _variant_t XL95::TextBox::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2353)
inline void XL95::TextBox::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2354)
inline _variant_t XL95::TextBox::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2355)
inline void XL95::TextBox::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2356)
inline _variant_t XL95::TextBox::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2357)
inline void XL95::TextBox::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2358)
inline _variant_t XL95::TextBox::GetRoundedCorners ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2359)
inline void XL95::TextBox::PutRoundedCorners ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26b, VT_VARIANT, &_val);
}

#pragma implementation_key(2360)
inline _variant_t XL95::TextBox::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2361)
inline void XL95::TextBox::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2362)
inline _variant_t XL95::TextBox::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2363)
inline void XL95::TextBox::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(2364)
inline _variant_t XL95::TextBox::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2365)
inline void XL95::TextBox::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2366)
inline _variant_t XL95::TextBox::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2367)
inline void XL95::TextBox::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(2368)
inline _variant_t XL95::TextBox::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2369)
inline void XL95::TextBox::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

#pragma implementation_key(2370)
inline _variant_t XL95::TextBox::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2371)
inline void XL95::TextBox::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2372)
inline _variant_t XL95::TextBox::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2373)
inline void XL95::TextBox::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2374)
inline _variant_t XL95::TextBox::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2375)
inline void XL95::TextBox::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface TextBoxes wrapper method implementations
//

#pragma implementation_key(2376)
inline _variant_t XL95::TextBoxes::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2377)
inline _variant_t XL95::TextBoxes::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(2378)
inline _variant_t XL95::TextBoxes::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2379)
inline _variant_t XL95::TextBoxes::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2380)
inline _variant_t XL95::TextBoxes::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(2381)
inline _variant_t XL95::TextBoxes::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(2382)
inline _variant_t XL95::TextBoxes::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2383)
inline _variant_t XL95::TextBoxes::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2384)
inline _variant_t XL95::TextBoxes::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2385)
inline _variant_t XL95::TextBoxes::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2386)
inline _variant_t XL95::TextBoxes::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2387)
inline _variant_t XL95::TextBoxes::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2388)
inline _variant_t XL95::TextBoxes::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(2389)
inline _variant_t XL95::TextBoxes::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2390)
inline _variant_t XL95::TextBoxes::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2391)
inline _variant_t XL95::TextBoxes::GetAddIndent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x427, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2392)
inline void XL95::TextBoxes::PutAddIndent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x427, VT_VARIANT, &_val);
}

#pragma implementation_key(2393)
inline _variant_t XL95::TextBoxes::GetAutoSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x266, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2394)
inline void XL95::TextBoxes::PutAutoSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x266, VT_VARIANT, &_val);
}

#pragma implementation_key(2395)
inline _variant_t XL95::TextBoxes::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2396)
inline void XL95::TextBoxes::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2397)
inline _variant_t XL95::TextBoxes::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2398)
inline void XL95::TextBoxes::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(2399)
inline _variant_t XL95::TextBoxes::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2400)
inline void XL95::TextBoxes::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(2401)
inline _variant_t XL95::TextBoxes::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2402)
inline void XL95::TextBoxes::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2403)
inline _variant_t XL95::TextBoxes::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2404)
inline void XL95::TextBoxes::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2405)
inline _variant_t XL95::TextBoxes::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2406)
inline void XL95::TextBoxes::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(2407)
inline _variant_t XL95::TextBoxes::GetFormula ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x105, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2408)
inline void XL95::TextBoxes::PutFormula ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x105, VT_VARIANT, &_val);
}

#pragma implementation_key(2409)
inline _variant_t XL95::TextBoxes::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2410)
inline void XL95::TextBoxes::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2411)
inline _variant_t XL95::TextBoxes::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2412)
inline void XL95::TextBoxes::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(2413)
inline _variant_t XL95::TextBoxes::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2414)
inline void XL95::TextBoxes::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2415)
inline _variant_t XL95::TextBoxes::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2416)
inline void XL95::TextBoxes::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2417)
inline _variant_t XL95::TextBoxes::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2418)
inline void XL95::TextBoxes::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2419)
inline _variant_t XL95::TextBoxes::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2420)
inline void XL95::TextBoxes::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(2421)
inline _variant_t XL95::TextBoxes::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2422)
inline void XL95::TextBoxes::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2423)
inline _variant_t XL95::TextBoxes::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2424)
inline void XL95::TextBoxes::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(2425)
inline _variant_t XL95::TextBoxes::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2426)
inline void XL95::TextBoxes::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2427)
inline _variant_t XL95::TextBoxes::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2428)
inline void XL95::TextBoxes::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2429)
inline _variant_t XL95::TextBoxes::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2430)
inline void XL95::TextBoxes::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2431)
inline _variant_t XL95::TextBoxes::GetRoundedCorners ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2432)
inline void XL95::TextBoxes::PutRoundedCorners ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26b, VT_VARIANT, &_val);
}

#pragma implementation_key(2433)
inline _variant_t XL95::TextBoxes::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2434)
inline void XL95::TextBoxes::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2435)
inline _variant_t XL95::TextBoxes::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2436)
inline void XL95::TextBoxes::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(2437)
inline _variant_t XL95::TextBoxes::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2438)
inline void XL95::TextBoxes::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2439)
inline _variant_t XL95::TextBoxes::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2440)
inline void XL95::TextBoxes::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

#pragma implementation_key(2441)
inline _variant_t XL95::TextBoxes::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2442)
inline void XL95::TextBoxes::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2443)
inline _variant_t XL95::TextBoxes::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2444)
inline void XL95::TextBoxes::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2445)
inline _variant_t XL95::TextBoxes::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2446)
inline void XL95::TextBoxes::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Picture wrapper method implementations
//

#pragma implementation_key(2447)
inline _variant_t XL95::Picture::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2448)
inline _variant_t XL95::Picture::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2449)
inline _variant_t XL95::Picture::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2450)
inline _variant_t XL95::Picture::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2451)
inline _variant_t XL95::Picture::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2452)
inline _variant_t XL95::Picture::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2453)
inline _variant_t XL95::Picture::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2454)
inline _variant_t XL95::Picture::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2455)
inline _variant_t XL95::Picture::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2456)
inline _variant_t XL95::Picture::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2457)
inline void XL95::Picture::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2458)
inline _variant_t XL95::Picture::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2459)
inline void XL95::Picture::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(2460)
inline _variant_t XL95::Picture::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2461)
inline void XL95::Picture::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2462)
inline _variant_t XL95::Picture::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2463)
inline void XL95::Picture::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2464)
inline _variant_t XL95::Picture::GetFormula ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x105, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2465)
inline void XL95::Picture::PutFormula ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x105, VT_VARIANT, &_val);
}

#pragma implementation_key(2466)
inline _variant_t XL95::Picture::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2467)
inline void XL95::Picture::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2468)
inline _variant_t XL95::Picture::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2469)
inline void XL95::Picture::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(2470)
inline _variant_t XL95::Picture::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2471)
inline void XL95::Picture::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2472)
inline _variant_t XL95::Picture::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2473)
inline void XL95::Picture::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2474)
inline _variant_t XL95::Picture::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2475)
inline void XL95::Picture::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2476)
inline _variant_t XL95::Picture::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2477)
inline void XL95::Picture::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(2478)
inline _variant_t XL95::Picture::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2479)
inline void XL95::Picture::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2480)
inline _variant_t XL95::Picture::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2481)
inline void XL95::Picture::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2482)
inline _variant_t XL95::Picture::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2483)
inline void XL95::Picture::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2484)
inline _variant_t XL95::Picture::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2485)
inline void XL95::Picture::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2486)
inline _variant_t XL95::Picture::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2487)
inline void XL95::Picture::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2488)
inline _variant_t XL95::Picture::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2489)
inline void XL95::Picture::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2490)
inline _variant_t XL95::Picture::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2491)
inline void XL95::Picture::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(2492)
inline _variant_t XL95::Picture::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2493)
inline void XL95::Picture::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2494)
inline _variant_t XL95::Picture::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2495)
inline void XL95::Picture::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2496)
inline _variant_t XL95::Picture::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2497)
inline void XL95::Picture::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Pictures wrapper method implementations
//

#pragma implementation_key(2498)
inline _variant_t XL95::Pictures::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2499)
inline _variant_t XL95::Pictures::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(2500)
inline _variant_t XL95::Pictures::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2501)
inline _variant_t XL95::Pictures::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2502)
inline _variant_t XL95::Pictures::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2503)
inline _variant_t XL95::Pictures::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2504)
inline _variant_t XL95::Pictures::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2505)
inline _variant_t XL95::Pictures::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2506)
inline _variant_t XL95::Pictures::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2507)
inline _variant_t XL95::Pictures::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2508)
inline _variant_t XL95::Pictures::Insert ( const _variant_t & Filename, const _variant_t & Converter ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Filename, &Converter);
    return _variant_t(_result, false);
}

#pragma implementation_key(2509)
inline _variant_t XL95::Pictures::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(2510)
inline _variant_t XL95::Pictures::Paste ( const _variant_t & Link ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Link);
    return _variant_t(_result, false);
}

#pragma implementation_key(2511)
inline _variant_t XL95::Pictures::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2512)
inline _variant_t XL95::Pictures::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2513)
inline _variant_t XL95::Pictures::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2514)
inline void XL95::Pictures::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2515)
inline _variant_t XL95::Pictures::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2516)
inline void XL95::Pictures::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(2517)
inline _variant_t XL95::Pictures::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2518)
inline void XL95::Pictures::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2519)
inline _variant_t XL95::Pictures::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2520)
inline void XL95::Pictures::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2521)
inline _variant_t XL95::Pictures::GetFormula ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x105, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2522)
inline void XL95::Pictures::PutFormula ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x105, VT_VARIANT, &_val);
}

#pragma implementation_key(2523)
inline _variant_t XL95::Pictures::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2524)
inline void XL95::Pictures::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2525)
inline _variant_t XL95::Pictures::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2526)
inline void XL95::Pictures::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2527)
inline _variant_t XL95::Pictures::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2528)
inline void XL95::Pictures::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2529)
inline _variant_t XL95::Pictures::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2530)
inline void XL95::Pictures::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2531)
inline _variant_t XL95::Pictures::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2532)
inline void XL95::Pictures::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2533)
inline _variant_t XL95::Pictures::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2534)
inline void XL95::Pictures::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2535)
inline _variant_t XL95::Pictures::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2536)
inline void XL95::Pictures::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2537)
inline _variant_t XL95::Pictures::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2538)
inline void XL95::Pictures::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2539)
inline _variant_t XL95::Pictures::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2540)
inline void XL95::Pictures::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2541)
inline _variant_t XL95::Pictures::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2542)
inline void XL95::Pictures::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2543)
inline _variant_t XL95::Pictures::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2544)
inline void XL95::Pictures::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2545)
inline _variant_t XL95::Pictures::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2546)
inline void XL95::Pictures::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2547)
inline _variant_t XL95::Pictures::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2548)
inline void XL95::Pictures::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface OLEObject wrapper method implementations
//

#pragma implementation_key(2549)
inline _variant_t XL95::OLEObject::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2550)
inline _variant_t XL95::OLEObject::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2551)
inline _variant_t XL95::OLEObject::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2552)
inline _variant_t XL95::OLEObject::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2553)
inline _variant_t XL95::OLEObject::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2554)
inline _variant_t XL95::OLEObject::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2555)
inline _variant_t XL95::OLEObject::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2556)
inline _variant_t XL95::OLEObject::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2557)
inline _variant_t XL95::OLEObject::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2558)
inline _variant_t XL95::OLEObject::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2559)
inline _variant_t XL95::OLEObject::Update ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2a8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2560)
inline _variant_t XL95::OLEObject::Verb ( const _variant_t & Verb ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Verb);
    return _variant_t(_result, false);
}

#pragma implementation_key(2561)
inline _variant_t XL95::OLEObject::GetAutoLoad ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4a2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2562)
inline void XL95::OLEObject::PutAutoLoad ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4a2, VT_VARIANT, &_val);
}

#pragma implementation_key(2563)
inline _variant_t XL95::OLEObject::GetAutoUpdate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x418, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2564)
inline void XL95::OLEObject::PutAutoUpdate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x418, VT_VARIANT, &_val);
}

#pragma implementation_key(2565)
inline _variant_t XL95::OLEObject::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2566)
inline void XL95::OLEObject::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2567)
inline _variant_t XL95::OLEObject::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2568)
inline void XL95::OLEObject::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(2569)
inline _variant_t XL95::OLEObject::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2570)
inline void XL95::OLEObject::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2571)
inline _variant_t XL95::OLEObject::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2572)
inline void XL95::OLEObject::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2573)
inline _variant_t XL95::OLEObject::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2574)
inline void XL95::OLEObject::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2575)
inline _variant_t XL95::OLEObject::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2576)
inline void XL95::OLEObject::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(2577)
inline _variant_t XL95::OLEObject::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2578)
inline void XL95::OLEObject::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2579)
inline _variant_t XL95::OLEObject::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2580)
inline void XL95::OLEObject::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2581)
inline _variant_t XL95::OLEObject::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2582)
inline void XL95::OLEObject::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2583)
inline _variant_t XL95::OLEObject::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2584)
inline void XL95::OLEObject::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(2585)
inline _variant_t XL95::OLEObject::GetObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x419, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2586)
inline void XL95::OLEObject::PutObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x419, VT_VARIANT, &_val);
}

#pragma implementation_key(2587)
inline _variant_t XL95::OLEObject::GetOLEType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x41e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2588)
inline void XL95::OLEObject::PutOLEType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x41e, VT_VARIANT, &_val);
}

#pragma implementation_key(2589)
inline _variant_t XL95::OLEObject::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2590)
inline void XL95::OLEObject::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2591)
inline _variant_t XL95::OLEObject::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2592)
inline void XL95::OLEObject::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2593)
inline _variant_t XL95::OLEObject::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2594)
inline void XL95::OLEObject::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2595)
inline _variant_t XL95::OLEObject::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2596)
inline void XL95::OLEObject::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2597)
inline _variant_t XL95::OLEObject::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2598)
inline void XL95::OLEObject::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2599)
inline _variant_t XL95::OLEObject::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2600)
inline void XL95::OLEObject::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2601)
inline _variant_t XL95::OLEObject::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2602)
inline void XL95::OLEObject::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(2603)
inline _variant_t XL95::OLEObject::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2604)
inline void XL95::OLEObject::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2605)
inline _variant_t XL95::OLEObject::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2606)
inline void XL95::OLEObject::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2607)
inline _variant_t XL95::OLEObject::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2608)
inline void XL95::OLEObject::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface OLEObjects wrapper method implementations
//

#pragma implementation_key(2609)
inline _variant_t XL95::OLEObjects::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2610)
inline _variant_t XL95::OLEObjects::Add ( const _variant_t & ClassType, const _variant_t & Filename, const _variant_t & Link, const _variant_t & DisplayAsIcon, const _variant_t & IconFileName, const _variant_t & IconIndex, const _variant_t & IconLabel ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &ClassType, &Filename, &Link, &DisplayAsIcon, &IconFileName, &IconIndex, &IconLabel);
    return _variant_t(_result, false);
}

#pragma implementation_key(2611)
inline _variant_t XL95::OLEObjects::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2612)
inline _variant_t XL95::OLEObjects::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2613)
inline _variant_t XL95::OLEObjects::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2614)
inline _variant_t XL95::OLEObjects::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2615)
inline _variant_t XL95::OLEObjects::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2616)
inline _variant_t XL95::OLEObjects::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2617)
inline _variant_t XL95::OLEObjects::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2618)
inline _variant_t XL95::OLEObjects::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2619)
inline _variant_t XL95::OLEObjects::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(2620)
inline _variant_t XL95::OLEObjects::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2621)
inline _variant_t XL95::OLEObjects::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2622)
inline _variant_t XL95::OLEObjects::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2623)
inline void XL95::OLEObjects::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2624)
inline _variant_t XL95::OLEObjects::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2625)
inline void XL95::OLEObjects::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(2626)
inline _variant_t XL95::OLEObjects::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2627)
inline void XL95::OLEObjects::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2628)
inline _variant_t XL95::OLEObjects::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2629)
inline void XL95::OLEObjects::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2630)
inline _variant_t XL95::OLEObjects::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2631)
inline void XL95::OLEObjects::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2632)
inline _variant_t XL95::OLEObjects::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2633)
inline void XL95::OLEObjects::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2634)
inline _variant_t XL95::OLEObjects::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2635)
inline void XL95::OLEObjects::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2636)
inline _variant_t XL95::OLEObjects::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2637)
inline void XL95::OLEObjects::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2638)
inline _variant_t XL95::OLEObjects::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2639)
inline void XL95::OLEObjects::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2640)
inline _variant_t XL95::OLEObjects::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2641)
inline void XL95::OLEObjects::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2642)
inline _variant_t XL95::OLEObjects::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2643)
inline void XL95::OLEObjects::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2644)
inline _variant_t XL95::OLEObjects::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2645)
inline void XL95::OLEObjects::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2646)
inline _variant_t XL95::OLEObjects::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2647)
inline void XL95::OLEObjects::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2648)
inline _variant_t XL95::OLEObjects::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2649)
inline void XL95::OLEObjects::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2650)
inline _variant_t XL95::OLEObjects::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2651)
inline void XL95::OLEObjects::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2652)
inline _variant_t XL95::OLEObjects::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2653)
inline void XL95::OLEObjects::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2654)
inline _variant_t XL95::OLEObjects::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2655)
inline void XL95::OLEObjects::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface ChartObject wrapper method implementations
//

#pragma implementation_key(2656)
inline _variant_t XL95::ChartObject::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2657)
inline _variant_t XL95::ChartObject::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2658)
inline _variant_t XL95::ChartObject::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2659)
inline _variant_t XL95::ChartObject::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2660)
inline _variant_t XL95::ChartObject::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2661)
inline _variant_t XL95::ChartObject::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2662)
inline _variant_t XL95::ChartObject::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2663)
inline _variant_t XL95::ChartObject::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2664)
inline _variant_t XL95::ChartObject::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2665)
inline _variant_t XL95::ChartObject::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2666)
inline _variant_t XL95::ChartObject::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2667)
inline void XL95::ChartObject::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2668)
inline _variant_t XL95::ChartObject::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2669)
inline void XL95::ChartObject::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(2670)
inline _variant_t XL95::ChartObject::GetChart ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2671)
inline void XL95::ChartObject::PutChart ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7, VT_VARIANT, &_val);
}

#pragma implementation_key(2672)
inline _variant_t XL95::ChartObject::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2673)
inline void XL95::ChartObject::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2674)
inline _variant_t XL95::ChartObject::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2675)
inline void XL95::ChartObject::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2676)
inline _variant_t XL95::ChartObject::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2677)
inline void XL95::ChartObject::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2678)
inline _variant_t XL95::ChartObject::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2679)
inline void XL95::ChartObject::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(2680)
inline _variant_t XL95::ChartObject::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2681)
inline void XL95::ChartObject::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2682)
inline _variant_t XL95::ChartObject::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2683)
inline void XL95::ChartObject::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2684)
inline _variant_t XL95::ChartObject::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2685)
inline void XL95::ChartObject::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2686)
inline _variant_t XL95::ChartObject::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2687)
inline void XL95::ChartObject::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(2688)
inline _variant_t XL95::ChartObject::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2689)
inline void XL95::ChartObject::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2690)
inline _variant_t XL95::ChartObject::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2691)
inline void XL95::ChartObject::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2692)
inline _variant_t XL95::ChartObject::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2693)
inline void XL95::ChartObject::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2694)
inline _variant_t XL95::ChartObject::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2695)
inline void XL95::ChartObject::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2696)
inline _variant_t XL95::ChartObject::GetRoundedCorners ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2697)
inline void XL95::ChartObject::PutRoundedCorners ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26b, VT_VARIANT, &_val);
}

#pragma implementation_key(2698)
inline _variant_t XL95::ChartObject::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2699)
inline void XL95::ChartObject::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2700)
inline _variant_t XL95::ChartObject::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2701)
inline void XL95::ChartObject::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2702)
inline _variant_t XL95::ChartObject::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2703)
inline void XL95::ChartObject::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(2704)
inline _variant_t XL95::ChartObject::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2705)
inline void XL95::ChartObject::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2706)
inline _variant_t XL95::ChartObject::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2707)
inline void XL95::ChartObject::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2708)
inline _variant_t XL95::ChartObject::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2709)
inline void XL95::ChartObject::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface ChartObjects wrapper method implementations
//

#pragma implementation_key(2710)
inline _variant_t XL95::ChartObjects::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2711)
inline _variant_t XL95::ChartObjects::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(2712)
inline _variant_t XL95::ChartObjects::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2713)
inline _variant_t XL95::ChartObjects::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2714)
inline _variant_t XL95::ChartObjects::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2715)
inline _variant_t XL95::ChartObjects::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2716)
inline _variant_t XL95::ChartObjects::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2717)
inline _variant_t XL95::ChartObjects::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2718)
inline _variant_t XL95::ChartObjects::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2719)
inline _variant_t XL95::ChartObjects::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2720)
inline _variant_t XL95::ChartObjects::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(2721)
inline _variant_t XL95::ChartObjects::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2722)
inline _variant_t XL95::ChartObjects::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2723)
inline _variant_t XL95::ChartObjects::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2724)
inline void XL95::ChartObjects::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2725)
inline _variant_t XL95::ChartObjects::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2726)
inline void XL95::ChartObjects::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(2727)
inline _variant_t XL95::ChartObjects::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2728)
inline void XL95::ChartObjects::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2729)
inline _variant_t XL95::ChartObjects::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2730)
inline void XL95::ChartObjects::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2731)
inline _variant_t XL95::ChartObjects::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2732)
inline void XL95::ChartObjects::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2733)
inline _variant_t XL95::ChartObjects::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2734)
inline void XL95::ChartObjects::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2735)
inline _variant_t XL95::ChartObjects::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2736)
inline void XL95::ChartObjects::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2737)
inline _variant_t XL95::ChartObjects::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2738)
inline void XL95::ChartObjects::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2739)
inline _variant_t XL95::ChartObjects::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2740)
inline void XL95::ChartObjects::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2741)
inline _variant_t XL95::ChartObjects::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2742)
inline void XL95::ChartObjects::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2743)
inline _variant_t XL95::ChartObjects::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2744)
inline void XL95::ChartObjects::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2745)
inline _variant_t XL95::ChartObjects::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2746)
inline void XL95::ChartObjects::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2747)
inline _variant_t XL95::ChartObjects::GetRoundedCorners ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2748)
inline void XL95::ChartObjects::PutRoundedCorners ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26b, VT_VARIANT, &_val);
}

#pragma implementation_key(2749)
inline _variant_t XL95::ChartObjects::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2750)
inline void XL95::ChartObjects::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2751)
inline _variant_t XL95::ChartObjects::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2752)
inline void XL95::ChartObjects::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2753)
inline _variant_t XL95::ChartObjects::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2754)
inline void XL95::ChartObjects::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2755)
inline _variant_t XL95::ChartObjects::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2756)
inline void XL95::ChartObjects::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2757)
inline _variant_t XL95::ChartObjects::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2758)
inline void XL95::ChartObjects::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Drawing wrapper method implementations
//

#pragma implementation_key(2759)
inline _variant_t XL95::Drawing::AddVertex ( const _variant_t & Left, const _variant_t & Top ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x259, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &Left, &Top);
    return _variant_t(_result, false);
}

#pragma implementation_key(2760)
inline _variant_t XL95::Drawing::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2761)
inline _variant_t XL95::Drawing::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2762)
inline _variant_t XL95::Drawing::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2763)
inline _variant_t XL95::Drawing::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2764)
inline _variant_t XL95::Drawing::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2765)
inline _variant_t XL95::Drawing::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2766)
inline _variant_t XL95::Drawing::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2767)
inline _variant_t XL95::Drawing::Reshape ( const _variant_t & Vertex, const _variant_t & Insert, const _variant_t & Left, const _variant_t & Top ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c", &Vertex, &Insert, &Left, &Top);
    return _variant_t(_result, false);
}

#pragma implementation_key(2768)
inline _variant_t XL95::Drawing::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2769)
inline _variant_t XL95::Drawing::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2770)
inline _variant_t XL95::Drawing::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2771)
inline void XL95::Drawing::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2772)
inline _variant_t XL95::Drawing::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2773)
inline void XL95::Drawing::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(2774)
inline _variant_t XL95::Drawing::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2775)
inline void XL95::Drawing::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2776)
inline _variant_t XL95::Drawing::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2777)
inline void XL95::Drawing::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2778)
inline _variant_t XL95::Drawing::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2779)
inline void XL95::Drawing::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2780)
inline _variant_t XL95::Drawing::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2781)
inline void XL95::Drawing::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(2782)
inline _variant_t XL95::Drawing::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2783)
inline void XL95::Drawing::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2784)
inline _variant_t XL95::Drawing::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2785)
inline void XL95::Drawing::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2786)
inline _variant_t XL95::Drawing::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2787)
inline void XL95::Drawing::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2788)
inline _variant_t XL95::Drawing::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2789)
inline void XL95::Drawing::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(2790)
inline _variant_t XL95::Drawing::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2791)
inline void XL95::Drawing::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2792)
inline _variant_t XL95::Drawing::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2793)
inline void XL95::Drawing::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2794)
inline _variant_t XL95::Drawing::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2795)
inline void XL95::Drawing::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2796)
inline _variant_t XL95::Drawing::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2797)
inline void XL95::Drawing::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2798)
inline _variant_t XL95::Drawing::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2799)
inline void XL95::Drawing::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2800)
inline _variant_t XL95::Drawing::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2801)
inline void XL95::Drawing::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2802)
inline _variant_t XL95::Drawing::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2803)
inline void XL95::Drawing::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(2804)
inline _variant_t XL95::Drawing::GetVertices ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2805)
inline void XL95::Drawing::PutVertices ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26d, VT_VARIANT, &_val);
}

#pragma implementation_key(2806)
inline _variant_t XL95::Drawing::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2807)
inline void XL95::Drawing::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2808)
inline _variant_t XL95::Drawing::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2809)
inline void XL95::Drawing::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2810)
inline _variant_t XL95::Drawing::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2811)
inline void XL95::Drawing::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Drawings wrapper method implementations
//

#pragma implementation_key(2812)
inline _variant_t XL95::Drawings::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2813)
inline _variant_t XL95::Drawings::Add ( const _variant_t & X1, const _variant_t & Y1, const _variant_t & X2, const _variant_t & Y2, const _variant_t & Closed ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c\x000c", &X1, &Y1, &X2, &Y2, &Closed);
    return _variant_t(_result, false);
}

#pragma implementation_key(2814)
inline _variant_t XL95::Drawings::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2815)
inline _variant_t XL95::Drawings::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2816)
inline _variant_t XL95::Drawings::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2817)
inline _variant_t XL95::Drawings::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2818)
inline _variant_t XL95::Drawings::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2819)
inline _variant_t XL95::Drawings::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2820)
inline _variant_t XL95::Drawings::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2821)
inline _variant_t XL95::Drawings::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2822)
inline _variant_t XL95::Drawings::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(2823)
inline _variant_t XL95::Drawings::Reshape ( const _variant_t & Vertex, const _variant_t & Insert, const _variant_t & Left, const _variant_t & Top ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x080c\x080c", &Vertex, &Insert, &Left, &Top);
    return _variant_t(_result, false);
}

#pragma implementation_key(2824)
inline _variant_t XL95::Drawings::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2825)
inline _variant_t XL95::Drawings::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2826)
inline _variant_t XL95::Drawings::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2827)
inline void XL95::Drawings::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(2828)
inline _variant_t XL95::Drawings::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2829)
inline void XL95::Drawings::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(2830)
inline _variant_t XL95::Drawings::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2831)
inline void XL95::Drawings::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2832)
inline _variant_t XL95::Drawings::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2833)
inline void XL95::Drawings::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2834)
inline _variant_t XL95::Drawings::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2835)
inline void XL95::Drawings::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2836)
inline _variant_t XL95::Drawings::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2837)
inline void XL95::Drawings::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(2838)
inline _variant_t XL95::Drawings::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2839)
inline void XL95::Drawings::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2840)
inline _variant_t XL95::Drawings::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2841)
inline void XL95::Drawings::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2842)
inline _variant_t XL95::Drawings::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2843)
inline void XL95::Drawings::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2844)
inline _variant_t XL95::Drawings::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2845)
inline void XL95::Drawings::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2846)
inline _variant_t XL95::Drawings::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2847)
inline void XL95::Drawings::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2848)
inline _variant_t XL95::Drawings::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2849)
inline void XL95::Drawings::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2850)
inline _variant_t XL95::Drawings::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2851)
inline void XL95::Drawings::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(2852)
inline _variant_t XL95::Drawings::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2853)
inline void XL95::Drawings::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2854)
inline _variant_t XL95::Drawings::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2855)
inline void XL95::Drawings::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2856)
inline _variant_t XL95::Drawings::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2857)
inline void XL95::Drawings::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2858)
inline _variant_t XL95::Drawings::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2859)
inline void XL95::Drawings::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Button wrapper method implementations
//

#pragma implementation_key(2860)
inline _variant_t XL95::Button::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2861)
inline _variant_t XL95::Button::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2862)
inline _variant_t XL95::Button::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(2863)
inline _variant_t XL95::Button::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(2864)
inline _variant_t XL95::Button::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2865)
inline _variant_t XL95::Button::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2866)
inline _variant_t XL95::Button::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2867)
inline _variant_t XL95::Button::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2868)
inline _variant_t XL95::Button::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2869)
inline _variant_t XL95::Button::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2870)
inline _variant_t XL95::Button::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2871)
inline _variant_t XL95::Button::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2872)
inline void XL95::Button::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(2873)
inline _variant_t XL95::Button::GetAddIndent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x427, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2874)
inline void XL95::Button::PutAddIndent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x427, VT_VARIANT, &_val);
}

#pragma implementation_key(2875)
inline _variant_t XL95::Button::GetAutoSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x266, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2876)
inline void XL95::Button::PutAutoSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x266, VT_VARIANT, &_val);
}

#pragma implementation_key(2877)
inline _variant_t XL95::Button::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2878)
inline void XL95::Button::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(2879)
inline _variant_t XL95::Button::GetCancelButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2880)
inline void XL95::Button::PutCancelButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35a, VT_VARIANT, &_val);
}

#pragma implementation_key(2881)
inline _variant_t XL95::Button::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2882)
inline void XL95::Button::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(2883)
inline _variant_t XL95::Button::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2884)
inline void XL95::Button::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2885)
inline _variant_t XL95::Button::GetDefaultButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x359, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2886)
inline void XL95::Button::PutDefaultButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x359, VT_VARIANT, &_val);
}

#pragma implementation_key(2887)
inline _variant_t XL95::Button::GetDismissButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2888)
inline void XL95::Button::PutDismissButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35b, VT_VARIANT, &_val);
}

#pragma implementation_key(2889)
inline _variant_t XL95::Button::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2890)
inline void XL95::Button::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2891)
inline _variant_t XL95::Button::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2892)
inline void XL95::Button::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(2893)
inline _variant_t XL95::Button::GetFormula ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x105, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2894)
inline void XL95::Button::PutFormula ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x105, VT_VARIANT, &_val);
}

#pragma implementation_key(2895)
inline _variant_t XL95::Button::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2896)
inline void XL95::Button::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2897)
inline _variant_t XL95::Button::GetHelpButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2898)
inline void XL95::Button::PutHelpButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35c, VT_VARIANT, &_val);
}

#pragma implementation_key(2899)
inline _variant_t XL95::Button::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2900)
inline void XL95::Button::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(2901)
inline _variant_t XL95::Button::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2902)
inline void XL95::Button::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(2903)
inline _variant_t XL95::Button::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2904)
inline void XL95::Button::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2905)
inline _variant_t XL95::Button::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2906)
inline void XL95::Button::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2907)
inline _variant_t XL95::Button::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2908)
inline void XL95::Button::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(2909)
inline _variant_t XL95::Button::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2910)
inline void XL95::Button::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(2911)
inline _variant_t XL95::Button::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2912)
inline void XL95::Button::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2913)
inline _variant_t XL95::Button::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2914)
inline void XL95::Button::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(2915)
inline _variant_t XL95::Button::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2916)
inline void XL95::Button::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2917)
inline _variant_t XL95::Button::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2918)
inline void XL95::Button::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(2919)
inline _variant_t XL95::Button::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2920)
inline void XL95::Button::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2921)
inline _variant_t XL95::Button::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2922)
inline void XL95::Button::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(2923)
inline _variant_t XL95::Button::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2924)
inline void XL95::Button::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(2925)
inline _variant_t XL95::Button::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2926)
inline void XL95::Button::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(2927)
inline _variant_t XL95::Button::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2928)
inline void XL95::Button::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(2929)
inline _variant_t XL95::Button::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2930)
inline void XL95::Button::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

#pragma implementation_key(2931)
inline _variant_t XL95::Button::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2932)
inline void XL95::Button::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(2933)
inline _variant_t XL95::Button::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2934)
inline void XL95::Button::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(2935)
inline _variant_t XL95::Button::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2936)
inline void XL95::Button::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Buttons wrapper method implementations
//

#pragma implementation_key(2937)
inline _variant_t XL95::Buttons::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2938)
inline _variant_t XL95::Buttons::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(2939)
inline _variant_t XL95::Buttons::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2940)
inline _variant_t XL95::Buttons::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2941)
inline _variant_t XL95::Buttons::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(2942)
inline _variant_t XL95::Buttons::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(2943)
inline _variant_t XL95::Buttons::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2944)
inline _variant_t XL95::Buttons::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(2945)
inline _variant_t XL95::Buttons::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2946)
inline _variant_t XL95::Buttons::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2947)
inline _variant_t XL95::Buttons::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2948)
inline _variant_t XL95::Buttons::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2949)
inline _variant_t XL95::Buttons::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(2950)
inline _variant_t XL95::Buttons::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(2951)
inline _variant_t XL95::Buttons::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2952)
inline _variant_t XL95::Buttons::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2953)
inline void XL95::Buttons::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(2954)
inline _variant_t XL95::Buttons::GetAddIndent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x427, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2955)
inline void XL95::Buttons::PutAddIndent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x427, VT_VARIANT, &_val);
}

#pragma implementation_key(2956)
inline _variant_t XL95::Buttons::GetAutoSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x266, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2957)
inline void XL95::Buttons::PutAutoSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x266, VT_VARIANT, &_val);
}

#pragma implementation_key(2958)
inline _variant_t XL95::Buttons::GetCancelButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2959)
inline void XL95::Buttons::PutCancelButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35a, VT_VARIANT, &_val);
}

#pragma implementation_key(2960)
inline _variant_t XL95::Buttons::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2961)
inline void XL95::Buttons::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(2962)
inline _variant_t XL95::Buttons::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2963)
inline void XL95::Buttons::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(2964)
inline _variant_t XL95::Buttons::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2965)
inline void XL95::Buttons::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(2966)
inline _variant_t XL95::Buttons::GetDefaultButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x359, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2967)
inline void XL95::Buttons::PutDefaultButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x359, VT_VARIANT, &_val);
}

#pragma implementation_key(2968)
inline _variant_t XL95::Buttons::GetDismissButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2969)
inline void XL95::Buttons::PutDismissButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35b, VT_VARIANT, &_val);
}

#pragma implementation_key(2970)
inline _variant_t XL95::Buttons::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2971)
inline void XL95::Buttons::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(2972)
inline _variant_t XL95::Buttons::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2973)
inline void XL95::Buttons::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(2974)
inline _variant_t XL95::Buttons::GetFormula ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x105, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2975)
inline void XL95::Buttons::PutFormula ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x105, VT_VARIANT, &_val);
}

#pragma implementation_key(2976)
inline _variant_t XL95::Buttons::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2977)
inline void XL95::Buttons::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(2978)
inline _variant_t XL95::Buttons::GetHelpButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2979)
inline void XL95::Buttons::PutHelpButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35c, VT_VARIANT, &_val);
}

#pragma implementation_key(2980)
inline _variant_t XL95::Buttons::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2981)
inline void XL95::Buttons::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(2982)
inline _variant_t XL95::Buttons::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2983)
inline void XL95::Buttons::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(2984)
inline _variant_t XL95::Buttons::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2985)
inline void XL95::Buttons::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(2986)
inline _variant_t XL95::Buttons::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2987)
inline void XL95::Buttons::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(2988)
inline _variant_t XL95::Buttons::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2989)
inline void XL95::Buttons::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(2990)
inline _variant_t XL95::Buttons::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2991)
inline void XL95::Buttons::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(2992)
inline _variant_t XL95::Buttons::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2993)
inline void XL95::Buttons::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(2994)
inline _variant_t XL95::Buttons::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2995)
inline void XL95::Buttons::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(2996)
inline _variant_t XL95::Buttons::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2997)
inline void XL95::Buttons::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(2998)
inline _variant_t XL95::Buttons::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2999)
inline void XL95::Buttons::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3000)
inline _variant_t XL95::Buttons::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3001)
inline void XL95::Buttons::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3002)
inline _variant_t XL95::Buttons::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3003)
inline void XL95::Buttons::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3004)
inline _variant_t XL95::Buttons::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3005)
inline void XL95::Buttons::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

#pragma implementation_key(3006)
inline _variant_t XL95::Buttons::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3007)
inline void XL95::Buttons::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3008)
inline _variant_t XL95::Buttons::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3009)
inline void XL95::Buttons::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3010)
inline _variant_t XL95::Buttons::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3011)
inline void XL95::Buttons::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface EditBox wrapper method implementations
//

#pragma implementation_key(3012)
inline _variant_t XL95::EditBox::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3013)
inline _variant_t XL95::EditBox::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3014)
inline _variant_t XL95::EditBox::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3015)
inline _variant_t XL95::EditBox::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3016)
inline _variant_t XL95::EditBox::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3017)
inline _variant_t XL95::EditBox::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3018)
inline _variant_t XL95::EditBox::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3019)
inline _variant_t XL95::EditBox::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3020)
inline _variant_t XL95::EditBox::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3021)
inline _variant_t XL95::EditBox::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3022)
inline _variant_t XL95::EditBox::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3023)
inline void XL95::EditBox::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(3024)
inline _variant_t XL95::EditBox::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3025)
inline void XL95::EditBox::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3026)
inline _variant_t XL95::EditBox::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3027)
inline void XL95::EditBox::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3028)
inline _variant_t XL95::EditBox::GetDisplayVerticalScrollBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x39a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3029)
inline void XL95::EditBox::PutDisplayVerticalScrollBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x39a, VT_VARIANT, &_val);
}

#pragma implementation_key(3030)
inline _variant_t XL95::EditBox::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3031)
inline void XL95::EditBox::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3032)
inline _variant_t XL95::EditBox::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3033)
inline void XL95::EditBox::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3034)
inline _variant_t XL95::EditBox::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3035)
inline void XL95::EditBox::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(3036)
inline _variant_t XL95::EditBox::GetInputType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x356, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3037)
inline void XL95::EditBox::PutInputType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x356, VT_VARIANT, &_val);
}

#pragma implementation_key(3038)
inline _variant_t XL95::EditBox::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3039)
inline void XL95::EditBox::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3040)
inline _variant_t XL95::EditBox::GetLinkedObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3041)
inline void XL95::EditBox::PutLinkedObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35e, VT_VARIANT, &_val);
}

#pragma implementation_key(3042)
inline _variant_t XL95::EditBox::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3043)
inline void XL95::EditBox::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3044)
inline _variant_t XL95::EditBox::GetMultiLine ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x357, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3045)
inline void XL95::EditBox::PutMultiLine ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x357, VT_VARIANT, &_val);
}

#pragma implementation_key(3046)
inline _variant_t XL95::EditBox::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3047)
inline void XL95::EditBox::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(3048)
inline _variant_t XL95::EditBox::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3049)
inline void XL95::EditBox::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3050)
inline _variant_t XL95::EditBox::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3051)
inline void XL95::EditBox::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3052)
inline _variant_t XL95::EditBox::GetPasswordEdit ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x48a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3053)
inline void XL95::EditBox::PutPasswordEdit ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x48a, VT_VARIANT, &_val);
}

#pragma implementation_key(3054)
inline _variant_t XL95::EditBox::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3055)
inline void XL95::EditBox::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3056)
inline _variant_t XL95::EditBox::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3057)
inline void XL95::EditBox::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3058)
inline _variant_t XL95::EditBox::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3059)
inline void XL95::EditBox::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3060)
inline _variant_t XL95::EditBox::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3061)
inline void XL95::EditBox::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3062)
inline _variant_t XL95::EditBox::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3063)
inline void XL95::EditBox::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(3064)
inline _variant_t XL95::EditBox::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3065)
inline void XL95::EditBox::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3066)
inline _variant_t XL95::EditBox::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3067)
inline void XL95::EditBox::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3068)
inline _variant_t XL95::EditBox::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3069)
inline void XL95::EditBox::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface EditBoxes wrapper method implementations
//

#pragma implementation_key(3070)
inline _variant_t XL95::EditBoxes::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3071)
inline _variant_t XL95::EditBoxes::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(3072)
inline _variant_t XL95::EditBoxes::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3073)
inline _variant_t XL95::EditBoxes::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3074)
inline _variant_t XL95::EditBoxes::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3075)
inline _variant_t XL95::EditBoxes::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3076)
inline _variant_t XL95::EditBoxes::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3077)
inline _variant_t XL95::EditBoxes::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3078)
inline _variant_t XL95::EditBoxes::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3079)
inline _variant_t XL95::EditBoxes::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3080)
inline _variant_t XL95::EditBoxes::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3081)
inline _variant_t XL95::EditBoxes::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3082)
inline _variant_t XL95::EditBoxes::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3083)
inline _variant_t XL95::EditBoxes::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3084)
inline _variant_t XL95::EditBoxes::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3085)
inline void XL95::EditBoxes::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3086)
inline _variant_t XL95::EditBoxes::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3087)
inline void XL95::EditBoxes::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(3088)
inline _variant_t XL95::EditBoxes::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3089)
inline void XL95::EditBoxes::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3090)
inline _variant_t XL95::EditBoxes::GetDisplayVerticalScrollBar ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x39a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3091)
inline void XL95::EditBoxes::PutDisplayVerticalScrollBar ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x39a, VT_VARIANT, &_val);
}

#pragma implementation_key(3092)
inline _variant_t XL95::EditBoxes::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3093)
inline void XL95::EditBoxes::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3094)
inline _variant_t XL95::EditBoxes::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3095)
inline void XL95::EditBoxes::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3096)
inline _variant_t XL95::EditBoxes::GetInputType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x356, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3097)
inline void XL95::EditBoxes::PutInputType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x356, VT_VARIANT, &_val);
}

#pragma implementation_key(3098)
inline _variant_t XL95::EditBoxes::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3099)
inline void XL95::EditBoxes::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3100)
inline _variant_t XL95::EditBoxes::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3101)
inline void XL95::EditBoxes::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3102)
inline _variant_t XL95::EditBoxes::GetMultiLine ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x357, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3103)
inline void XL95::EditBoxes::PutMultiLine ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x357, VT_VARIANT, &_val);
}

#pragma implementation_key(3104)
inline _variant_t XL95::EditBoxes::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3105)
inline void XL95::EditBoxes::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3106)
inline _variant_t XL95::EditBoxes::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3107)
inline void XL95::EditBoxes::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3108)
inline _variant_t XL95::EditBoxes::GetPasswordEdit ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x48a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3109)
inline void XL95::EditBoxes::PutPasswordEdit ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x48a, VT_VARIANT, &_val);
}

#pragma implementation_key(3110)
inline _variant_t XL95::EditBoxes::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3111)
inline void XL95::EditBoxes::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3112)
inline _variant_t XL95::EditBoxes::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3113)
inline void XL95::EditBoxes::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3114)
inline _variant_t XL95::EditBoxes::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3115)
inline void XL95::EditBoxes::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3116)
inline _variant_t XL95::EditBoxes::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3117)
inline void XL95::EditBoxes::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3118)
inline _variant_t XL95::EditBoxes::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3119)
inline void XL95::EditBoxes::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3120)
inline _variant_t XL95::EditBoxes::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3121)
inline void XL95::EditBoxes::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3122)
inline _variant_t XL95::EditBoxes::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3123)
inline void XL95::EditBoxes::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface CheckBox wrapper method implementations
//

#pragma implementation_key(3124)
inline _variant_t XL95::CheckBox::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3125)
inline _variant_t XL95::CheckBox::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3126)
inline _variant_t XL95::CheckBox::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3127)
inline _variant_t XL95::CheckBox::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(3128)
inline _variant_t XL95::CheckBox::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3129)
inline _variant_t XL95::CheckBox::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3130)
inline _variant_t XL95::CheckBox::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3131)
inline _variant_t XL95::CheckBox::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3132)
inline _variant_t XL95::CheckBox::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3133)
inline _variant_t XL95::CheckBox::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3134)
inline _variant_t XL95::CheckBox::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3135)
inline _variant_t XL95::CheckBox::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3136)
inline void XL95::CheckBox::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(3137)
inline _variant_t XL95::CheckBox::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3138)
inline void XL95::CheckBox::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(3139)
inline _variant_t XL95::CheckBox::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3140)
inline void XL95::CheckBox::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(3141)
inline _variant_t XL95::CheckBox::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3142)
inline void XL95::CheckBox::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3143)
inline _variant_t XL95::CheckBox::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3144)
inline void XL95::CheckBox::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3145)
inline _variant_t XL95::CheckBox::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3146)
inline void XL95::CheckBox::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3147)
inline _variant_t XL95::CheckBox::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3148)
inline void XL95::CheckBox::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3149)
inline _variant_t XL95::CheckBox::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3150)
inline void XL95::CheckBox::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3151)
inline _variant_t XL95::CheckBox::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3152)
inline void XL95::CheckBox::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(3153)
inline _variant_t XL95::CheckBox::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3154)
inline void XL95::CheckBox::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(3155)
inline _variant_t XL95::CheckBox::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3156)
inline void XL95::CheckBox::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3157)
inline _variant_t XL95::CheckBox::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3158)
inline void XL95::CheckBox::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3159)
inline _variant_t XL95::CheckBox::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3160)
inline void XL95::CheckBox::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3161)
inline _variant_t XL95::CheckBox::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3162)
inline void XL95::CheckBox::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(3163)
inline _variant_t XL95::CheckBox::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3164)
inline void XL95::CheckBox::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(3165)
inline _variant_t XL95::CheckBox::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3166)
inline void XL95::CheckBox::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3167)
inline _variant_t XL95::CheckBox::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3168)
inline void XL95::CheckBox::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3169)
inline _variant_t XL95::CheckBox::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3170)
inline void XL95::CheckBox::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(3171)
inline _variant_t XL95::CheckBox::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3172)
inline void XL95::CheckBox::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3173)
inline _variant_t XL95::CheckBox::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3174)
inline void XL95::CheckBox::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3175)
inline _variant_t XL95::CheckBox::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3176)
inline void XL95::CheckBox::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3177)
inline _variant_t XL95::CheckBox::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3178)
inline void XL95::CheckBox::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3179)
inline _variant_t XL95::CheckBox::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3180)
inline void XL95::CheckBox::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(3181)
inline _variant_t XL95::CheckBox::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3182)
inline void XL95::CheckBox::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3183)
inline _variant_t XL95::CheckBox::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3184)
inline void XL95::CheckBox::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3185)
inline _variant_t XL95::CheckBox::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3186)
inline void XL95::CheckBox::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3187)
inline _variant_t XL95::CheckBox::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3188)
inline void XL95::CheckBox::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface CheckBoxes wrapper method implementations
//

#pragma implementation_key(3189)
inline _variant_t XL95::CheckBoxes::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3190)
inline _variant_t XL95::CheckBoxes::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(3191)
inline _variant_t XL95::CheckBoxes::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3192)
inline _variant_t XL95::CheckBoxes::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3193)
inline _variant_t XL95::CheckBoxes::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3194)
inline _variant_t XL95::CheckBoxes::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(3195)
inline _variant_t XL95::CheckBoxes::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3196)
inline _variant_t XL95::CheckBoxes::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3197)
inline _variant_t XL95::CheckBoxes::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3198)
inline _variant_t XL95::CheckBoxes::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3199)
inline _variant_t XL95::CheckBoxes::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3200)
inline _variant_t XL95::CheckBoxes::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3201)
inline _variant_t XL95::CheckBoxes::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3202)
inline _variant_t XL95::CheckBoxes::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3203)
inline _variant_t XL95::CheckBoxes::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3204)
inline _variant_t XL95::CheckBoxes::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3205)
inline void XL95::CheckBoxes::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(3206)
inline _variant_t XL95::CheckBoxes::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3207)
inline void XL95::CheckBoxes::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(3208)
inline _variant_t XL95::CheckBoxes::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3209)
inline void XL95::CheckBoxes::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3210)
inline _variant_t XL95::CheckBoxes::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3211)
inline void XL95::CheckBoxes::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(3212)
inline _variant_t XL95::CheckBoxes::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3213)
inline void XL95::CheckBoxes::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3214)
inline _variant_t XL95::CheckBoxes::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3215)
inline void XL95::CheckBoxes::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3216)
inline _variant_t XL95::CheckBoxes::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3217)
inline void XL95::CheckBoxes::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3218)
inline _variant_t XL95::CheckBoxes::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3219)
inline void XL95::CheckBoxes::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3220)
inline _variant_t XL95::CheckBoxes::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3221)
inline void XL95::CheckBoxes::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(3222)
inline _variant_t XL95::CheckBoxes::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3223)
inline void XL95::CheckBoxes::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3224)
inline _variant_t XL95::CheckBoxes::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3225)
inline void XL95::CheckBoxes::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3226)
inline _variant_t XL95::CheckBoxes::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3227)
inline void XL95::CheckBoxes::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3228)
inline _variant_t XL95::CheckBoxes::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3229)
inline void XL95::CheckBoxes::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(3230)
inline _variant_t XL95::CheckBoxes::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3231)
inline void XL95::CheckBoxes::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3232)
inline _variant_t XL95::CheckBoxes::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3233)
inline void XL95::CheckBoxes::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3234)
inline _variant_t XL95::CheckBoxes::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3235)
inline void XL95::CheckBoxes::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(3236)
inline _variant_t XL95::CheckBoxes::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3237)
inline void XL95::CheckBoxes::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3238)
inline _variant_t XL95::CheckBoxes::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3239)
inline void XL95::CheckBoxes::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3240)
inline _variant_t XL95::CheckBoxes::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3241)
inline void XL95::CheckBoxes::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3242)
inline _variant_t XL95::CheckBoxes::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3243)
inline void XL95::CheckBoxes::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3244)
inline _variant_t XL95::CheckBoxes::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3245)
inline void XL95::CheckBoxes::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3246)
inline _variant_t XL95::CheckBoxes::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3247)
inline void XL95::CheckBoxes::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3248)
inline _variant_t XL95::CheckBoxes::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3249)
inline void XL95::CheckBoxes::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3250)
inline _variant_t XL95::CheckBoxes::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3251)
inline void XL95::CheckBoxes::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface OptionButton wrapper method implementations
//

#pragma implementation_key(3252)
inline _variant_t XL95::OptionButton::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3253)
inline _variant_t XL95::OptionButton::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3254)
inline _variant_t XL95::OptionButton::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3255)
inline _variant_t XL95::OptionButton::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(3256)
inline _variant_t XL95::OptionButton::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3257)
inline _variant_t XL95::OptionButton::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3258)
inline _variant_t XL95::OptionButton::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3259)
inline _variant_t XL95::OptionButton::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3260)
inline _variant_t XL95::OptionButton::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3261)
inline _variant_t XL95::OptionButton::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3262)
inline _variant_t XL95::OptionButton::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3263)
inline _variant_t XL95::OptionButton::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3264)
inline void XL95::OptionButton::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(3265)
inline _variant_t XL95::OptionButton::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3266)
inline void XL95::OptionButton::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(3267)
inline _variant_t XL95::OptionButton::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3268)
inline void XL95::OptionButton::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(3269)
inline _variant_t XL95::OptionButton::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3270)
inline void XL95::OptionButton::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3271)
inline _variant_t XL95::OptionButton::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3272)
inline void XL95::OptionButton::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3273)
inline _variant_t XL95::OptionButton::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3274)
inline void XL95::OptionButton::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3275)
inline _variant_t XL95::OptionButton::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3276)
inline void XL95::OptionButton::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3277)
inline _variant_t XL95::OptionButton::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3278)
inline void XL95::OptionButton::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3279)
inline _variant_t XL95::OptionButton::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3280)
inline void XL95::OptionButton::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(3281)
inline _variant_t XL95::OptionButton::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3282)
inline void XL95::OptionButton::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(3283)
inline _variant_t XL95::OptionButton::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3284)
inline void XL95::OptionButton::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3285)
inline _variant_t XL95::OptionButton::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3286)
inline void XL95::OptionButton::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3287)
inline _variant_t XL95::OptionButton::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3288)
inline void XL95::OptionButton::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3289)
inline _variant_t XL95::OptionButton::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3290)
inline void XL95::OptionButton::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(3291)
inline _variant_t XL95::OptionButton::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3292)
inline void XL95::OptionButton::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(3293)
inline _variant_t XL95::OptionButton::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3294)
inline void XL95::OptionButton::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3295)
inline _variant_t XL95::OptionButton::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3296)
inline void XL95::OptionButton::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3297)
inline _variant_t XL95::OptionButton::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3298)
inline void XL95::OptionButton::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(3299)
inline _variant_t XL95::OptionButton::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3300)
inline void XL95::OptionButton::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3301)
inline _variant_t XL95::OptionButton::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3302)
inline void XL95::OptionButton::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3303)
inline _variant_t XL95::OptionButton::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3304)
inline void XL95::OptionButton::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3305)
inline _variant_t XL95::OptionButton::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3306)
inline void XL95::OptionButton::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3307)
inline _variant_t XL95::OptionButton::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3308)
inline void XL95::OptionButton::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(3309)
inline _variant_t XL95::OptionButton::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3310)
inline void XL95::OptionButton::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3311)
inline _variant_t XL95::OptionButton::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3312)
inline void XL95::OptionButton::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3313)
inline _variant_t XL95::OptionButton::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3314)
inline void XL95::OptionButton::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3315)
inline _variant_t XL95::OptionButton::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3316)
inline void XL95::OptionButton::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface OptionButtons wrapper method implementations
//

#pragma implementation_key(3317)
inline _variant_t XL95::OptionButtons::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3318)
inline _variant_t XL95::OptionButtons::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(3319)
inline _variant_t XL95::OptionButtons::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3320)
inline _variant_t XL95::OptionButtons::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3321)
inline _variant_t XL95::OptionButtons::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3322)
inline _variant_t XL95::OptionButtons::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(3323)
inline _variant_t XL95::OptionButtons::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3324)
inline _variant_t XL95::OptionButtons::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3325)
inline _variant_t XL95::OptionButtons::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3326)
inline _variant_t XL95::OptionButtons::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3327)
inline _variant_t XL95::OptionButtons::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3328)
inline _variant_t XL95::OptionButtons::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3329)
inline _variant_t XL95::OptionButtons::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3330)
inline _variant_t XL95::OptionButtons::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3331)
inline _variant_t XL95::OptionButtons::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3332)
inline _variant_t XL95::OptionButtons::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3333)
inline void XL95::OptionButtons::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(3334)
inline _variant_t XL95::OptionButtons::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3335)
inline void XL95::OptionButtons::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(3336)
inline _variant_t XL95::OptionButtons::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3337)
inline void XL95::OptionButtons::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3338)
inline _variant_t XL95::OptionButtons::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3339)
inline void XL95::OptionButtons::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(3340)
inline _variant_t XL95::OptionButtons::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3341)
inline void XL95::OptionButtons::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3342)
inline _variant_t XL95::OptionButtons::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3343)
inline void XL95::OptionButtons::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3344)
inline _variant_t XL95::OptionButtons::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3345)
inline void XL95::OptionButtons::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3346)
inline _variant_t XL95::OptionButtons::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3347)
inline void XL95::OptionButtons::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3348)
inline _variant_t XL95::OptionButtons::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3349)
inline void XL95::OptionButtons::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(3350)
inline _variant_t XL95::OptionButtons::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3351)
inline void XL95::OptionButtons::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3352)
inline _variant_t XL95::OptionButtons::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3353)
inline void XL95::OptionButtons::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3354)
inline _variant_t XL95::OptionButtons::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3355)
inline void XL95::OptionButtons::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3356)
inline _variant_t XL95::OptionButtons::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3357)
inline void XL95::OptionButtons::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(3358)
inline _variant_t XL95::OptionButtons::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3359)
inline void XL95::OptionButtons::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3360)
inline _variant_t XL95::OptionButtons::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3361)
inline void XL95::OptionButtons::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3362)
inline _variant_t XL95::OptionButtons::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3363)
inline void XL95::OptionButtons::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(3364)
inline _variant_t XL95::OptionButtons::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3365)
inline void XL95::OptionButtons::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3366)
inline _variant_t XL95::OptionButtons::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3367)
inline void XL95::OptionButtons::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3368)
inline _variant_t XL95::OptionButtons::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3369)
inline void XL95::OptionButtons::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3370)
inline _variant_t XL95::OptionButtons::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3371)
inline void XL95::OptionButtons::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3372)
inline _variant_t XL95::OptionButtons::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3373)
inline void XL95::OptionButtons::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3374)
inline _variant_t XL95::OptionButtons::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3375)
inline void XL95::OptionButtons::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3376)
inline _variant_t XL95::OptionButtons::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3377)
inline void XL95::OptionButtons::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3378)
inline _variant_t XL95::OptionButtons::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3379)
inline void XL95::OptionButtons::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Spinner wrapper method implementations
//

#pragma implementation_key(3380)
inline _variant_t XL95::Spinner::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3381)
inline _variant_t XL95::Spinner::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3382)
inline _variant_t XL95::Spinner::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3383)
inline _variant_t XL95::Spinner::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3384)
inline _variant_t XL95::Spinner::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3385)
inline _variant_t XL95::Spinner::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3386)
inline _variant_t XL95::Spinner::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3387)
inline _variant_t XL95::Spinner::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3388)
inline _variant_t XL95::Spinner::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3389)
inline _variant_t XL95::Spinner::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3390)
inline void XL95::Spinner::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(3391)
inline _variant_t XL95::Spinner::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3392)
inline void XL95::Spinner::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3393)
inline _variant_t XL95::Spinner::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3394)
inline void XL95::Spinner::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3395)
inline _variant_t XL95::Spinner::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3396)
inline void XL95::Spinner::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3397)
inline _variant_t XL95::Spinner::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3398)
inline void XL95::Spinner::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3399)
inline _variant_t XL95::Spinner::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3400)
inline void XL95::Spinner::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(3401)
inline _variant_t XL95::Spinner::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3402)
inline void XL95::Spinner::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3403)
inline _variant_t XL95::Spinner::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3404)
inline void XL95::Spinner::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3405)
inline _variant_t XL95::Spinner::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3406)
inline void XL95::Spinner::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3407)
inline _variant_t XL95::Spinner::GetMax ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3408)
inline void XL95::Spinner::PutMax ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34a, VT_VARIANT, &_val);
}

#pragma implementation_key(3409)
inline _variant_t XL95::Spinner::GetMin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3410)
inline void XL95::Spinner::PutMin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34b, VT_VARIANT, &_val);
}

#pragma implementation_key(3411)
inline _variant_t XL95::Spinner::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3412)
inline void XL95::Spinner::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(3413)
inline _variant_t XL95::Spinner::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3414)
inline void XL95::Spinner::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3415)
inline _variant_t XL95::Spinner::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3416)
inline void XL95::Spinner::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3417)
inline _variant_t XL95::Spinner::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3418)
inline void XL95::Spinner::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3419)
inline _variant_t XL95::Spinner::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3420)
inline void XL95::Spinner::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3421)
inline _variant_t XL95::Spinner::GetSmallChange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3422)
inline void XL95::Spinner::PutSmallChange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34c, VT_VARIANT, &_val);
}

#pragma implementation_key(3423)
inline _variant_t XL95::Spinner::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3424)
inline void XL95::Spinner::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3425)
inline _variant_t XL95::Spinner::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3426)
inline void XL95::Spinner::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(3427)
inline _variant_t XL95::Spinner::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3428)
inline void XL95::Spinner::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3429)
inline _variant_t XL95::Spinner::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3430)
inline void XL95::Spinner::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3431)
inline _variant_t XL95::Spinner::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3432)
inline void XL95::Spinner::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3433)
inline _variant_t XL95::Spinner::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3434)
inline void XL95::Spinner::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Spinners wrapper method implementations
//

#pragma implementation_key(3435)
inline _variant_t XL95::Spinners::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3436)
inline _variant_t XL95::Spinners::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(3437)
inline _variant_t XL95::Spinners::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3438)
inline _variant_t XL95::Spinners::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3439)
inline _variant_t XL95::Spinners::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3440)
inline _variant_t XL95::Spinners::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3441)
inline _variant_t XL95::Spinners::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3442)
inline _variant_t XL95::Spinners::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3443)
inline _variant_t XL95::Spinners::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3444)
inline _variant_t XL95::Spinners::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3445)
inline _variant_t XL95::Spinners::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3446)
inline _variant_t XL95::Spinners::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3447)
inline _variant_t XL95::Spinners::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3448)
inline _variant_t XL95::Spinners::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3449)
inline void XL95::Spinners::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(3450)
inline _variant_t XL95::Spinners::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3451)
inline void XL95::Spinners::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3452)
inline _variant_t XL95::Spinners::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3453)
inline void XL95::Spinners::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3454)
inline _variant_t XL95::Spinners::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3455)
inline void XL95::Spinners::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3456)
inline _variant_t XL95::Spinners::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3457)
inline void XL95::Spinners::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3458)
inline _variant_t XL95::Spinners::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3459)
inline void XL95::Spinners::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3460)
inline _variant_t XL95::Spinners::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3461)
inline void XL95::Spinners::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3462)
inline _variant_t XL95::Spinners::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3463)
inline void XL95::Spinners::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3464)
inline _variant_t XL95::Spinners::GetMax ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3465)
inline void XL95::Spinners::PutMax ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34a, VT_VARIANT, &_val);
}

#pragma implementation_key(3466)
inline _variant_t XL95::Spinners::GetMin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3467)
inline void XL95::Spinners::PutMin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34b, VT_VARIANT, &_val);
}

#pragma implementation_key(3468)
inline _variant_t XL95::Spinners::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3469)
inline void XL95::Spinners::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3470)
inline _variant_t XL95::Spinners::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3471)
inline void XL95::Spinners::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3472)
inline _variant_t XL95::Spinners::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3473)
inline void XL95::Spinners::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3474)
inline _variant_t XL95::Spinners::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3475)
inline void XL95::Spinners::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3476)
inline _variant_t XL95::Spinners::GetSmallChange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3477)
inline void XL95::Spinners::PutSmallChange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34c, VT_VARIANT, &_val);
}

#pragma implementation_key(3478)
inline _variant_t XL95::Spinners::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3479)
inline void XL95::Spinners::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3480)
inline _variant_t XL95::Spinners::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3481)
inline void XL95::Spinners::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3482)
inline _variant_t XL95::Spinners::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3483)
inline void XL95::Spinners::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3484)
inline _variant_t XL95::Spinners::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3485)
inline void XL95::Spinners::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3486)
inline _variant_t XL95::Spinners::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3487)
inline void XL95::Spinners::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface ScrollBar wrapper method implementations
//

#pragma implementation_key(3488)
inline _variant_t XL95::ScrollBar::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3489)
inline _variant_t XL95::ScrollBar::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3490)
inline _variant_t XL95::ScrollBar::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3491)
inline _variant_t XL95::ScrollBar::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3492)
inline _variant_t XL95::ScrollBar::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3493)
inline _variant_t XL95::ScrollBar::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3494)
inline _variant_t XL95::ScrollBar::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3495)
inline _variant_t XL95::ScrollBar::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3496)
inline _variant_t XL95::ScrollBar::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3497)
inline _variant_t XL95::ScrollBar::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3498)
inline void XL95::ScrollBar::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(3499)
inline _variant_t XL95::ScrollBar::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3500)
inline void XL95::ScrollBar::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3501)
inline _variant_t XL95::ScrollBar::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3502)
inline void XL95::ScrollBar::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3503)
inline _variant_t XL95::ScrollBar::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3504)
inline void XL95::ScrollBar::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3505)
inline _variant_t XL95::ScrollBar::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3506)
inline void XL95::ScrollBar::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3507)
inline _variant_t XL95::ScrollBar::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3508)
inline void XL95::ScrollBar::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(3509)
inline _variant_t XL95::ScrollBar::GetLargeChange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3510)
inline void XL95::ScrollBar::PutLargeChange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34d, VT_VARIANT, &_val);
}

#pragma implementation_key(3511)
inline _variant_t XL95::ScrollBar::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3512)
inline void XL95::ScrollBar::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3513)
inline _variant_t XL95::ScrollBar::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3514)
inline void XL95::ScrollBar::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3515)
inline _variant_t XL95::ScrollBar::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3516)
inline void XL95::ScrollBar::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3517)
inline _variant_t XL95::ScrollBar::GetMax ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3518)
inline void XL95::ScrollBar::PutMax ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34a, VT_VARIANT, &_val);
}

#pragma implementation_key(3519)
inline _variant_t XL95::ScrollBar::GetMin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3520)
inline void XL95::ScrollBar::PutMin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34b, VT_VARIANT, &_val);
}

#pragma implementation_key(3521)
inline _variant_t XL95::ScrollBar::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3522)
inline void XL95::ScrollBar::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(3523)
inline _variant_t XL95::ScrollBar::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3524)
inline void XL95::ScrollBar::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3525)
inline _variant_t XL95::ScrollBar::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3526)
inline void XL95::ScrollBar::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3527)
inline _variant_t XL95::ScrollBar::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3528)
inline void XL95::ScrollBar::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3529)
inline _variant_t XL95::ScrollBar::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3530)
inline void XL95::ScrollBar::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3531)
inline _variant_t XL95::ScrollBar::GetSmallChange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3532)
inline void XL95::ScrollBar::PutSmallChange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34c, VT_VARIANT, &_val);
}

#pragma implementation_key(3533)
inline _variant_t XL95::ScrollBar::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3534)
inline void XL95::ScrollBar::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3535)
inline _variant_t XL95::ScrollBar::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3536)
inline void XL95::ScrollBar::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(3537)
inline _variant_t XL95::ScrollBar::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3538)
inline void XL95::ScrollBar::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3539)
inline _variant_t XL95::ScrollBar::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3540)
inline void XL95::ScrollBar::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3541)
inline _variant_t XL95::ScrollBar::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3542)
inline void XL95::ScrollBar::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3543)
inline _variant_t XL95::ScrollBar::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3544)
inline void XL95::ScrollBar::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface ScrollBars wrapper method implementations
//

#pragma implementation_key(3545)
inline _variant_t XL95::ScrollBars::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3546)
inline _variant_t XL95::ScrollBars::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(3547)
inline _variant_t XL95::ScrollBars::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3548)
inline _variant_t XL95::ScrollBars::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3549)
inline _variant_t XL95::ScrollBars::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3550)
inline _variant_t XL95::ScrollBars::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3551)
inline _variant_t XL95::ScrollBars::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3552)
inline _variant_t XL95::ScrollBars::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3553)
inline _variant_t XL95::ScrollBars::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3554)
inline _variant_t XL95::ScrollBars::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3555)
inline _variant_t XL95::ScrollBars::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3556)
inline _variant_t XL95::ScrollBars::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3557)
inline _variant_t XL95::ScrollBars::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3558)
inline _variant_t XL95::ScrollBars::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3559)
inline void XL95::ScrollBars::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(3560)
inline _variant_t XL95::ScrollBars::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3561)
inline void XL95::ScrollBars::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3562)
inline _variant_t XL95::ScrollBars::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3563)
inline void XL95::ScrollBars::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3564)
inline _variant_t XL95::ScrollBars::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3565)
inline void XL95::ScrollBars::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3566)
inline _variant_t XL95::ScrollBars::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3567)
inline void XL95::ScrollBars::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3568)
inline _variant_t XL95::ScrollBars::GetLargeChange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3569)
inline void XL95::ScrollBars::PutLargeChange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34d, VT_VARIANT, &_val);
}

#pragma implementation_key(3570)
inline _variant_t XL95::ScrollBars::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3571)
inline void XL95::ScrollBars::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3572)
inline _variant_t XL95::ScrollBars::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3573)
inline void XL95::ScrollBars::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3574)
inline _variant_t XL95::ScrollBars::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3575)
inline void XL95::ScrollBars::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3576)
inline _variant_t XL95::ScrollBars::GetMax ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3577)
inline void XL95::ScrollBars::PutMax ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34a, VT_VARIANT, &_val);
}

#pragma implementation_key(3578)
inline _variant_t XL95::ScrollBars::GetMin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3579)
inline void XL95::ScrollBars::PutMin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34b, VT_VARIANT, &_val);
}

#pragma implementation_key(3580)
inline _variant_t XL95::ScrollBars::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3581)
inline void XL95::ScrollBars::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3582)
inline _variant_t XL95::ScrollBars::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3583)
inline void XL95::ScrollBars::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3584)
inline _variant_t XL95::ScrollBars::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3585)
inline void XL95::ScrollBars::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3586)
inline _variant_t XL95::ScrollBars::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3587)
inline void XL95::ScrollBars::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3588)
inline _variant_t XL95::ScrollBars::GetSmallChange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3589)
inline void XL95::ScrollBars::PutSmallChange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34c, VT_VARIANT, &_val);
}

#pragma implementation_key(3590)
inline _variant_t XL95::ScrollBars::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3591)
inline void XL95::ScrollBars::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3592)
inline _variant_t XL95::ScrollBars::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3593)
inline void XL95::ScrollBars::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3594)
inline _variant_t XL95::ScrollBars::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3595)
inline void XL95::ScrollBars::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3596)
inline _variant_t XL95::ScrollBars::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3597)
inline void XL95::ScrollBars::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3598)
inline _variant_t XL95::ScrollBars::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3599)
inline void XL95::ScrollBars::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface ListBox wrapper method implementations
//

#pragma implementation_key(3600)
inline _variant_t XL95::ListBox::AddItem ( const _variant_t & Text, const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x353, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Text, &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3601)
inline _variant_t XL95::ListBox::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3602)
inline _variant_t XL95::ListBox::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3603)
inline _variant_t XL95::ListBox::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3604)
inline _variant_t XL95::ListBox::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3605)
inline _variant_t XL95::ListBox::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3606)
inline _variant_t XL95::ListBox::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3607)
inline _variant_t XL95::ListBox::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3608)
inline _variant_t XL95::ListBox::RemoveAllItems ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x355, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3609)
inline _variant_t XL95::ListBox::RemoveItem ( const _variant_t & Index, const _variant_t & Count ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x354, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Index, &Count);
    return _variant_t(_result, false);
}

#pragma implementation_key(3610)
inline _variant_t XL95::ListBox::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3611)
inline _variant_t XL95::ListBox::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3612)
inline _variant_t XL95::ListBox::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3613)
inline void XL95::ListBox::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(3614)
inline _variant_t XL95::ListBox::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3615)
inline void XL95::ListBox::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3616)
inline _variant_t XL95::ListBox::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3617)
inline void XL95::ListBox::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3618)
inline _variant_t XL95::ListBox::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3619)
inline void XL95::ListBox::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3620)
inline _variant_t XL95::ListBox::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3621)
inline void XL95::ListBox::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3622)
inline _variant_t XL95::ListBox::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3623)
inline void XL95::ListBox::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(3624)
inline _variant_t XL95::ListBox::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3625)
inline void XL95::ListBox::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3626)
inline _variant_t XL95::ListBox::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3627)
inline void XL95::ListBox::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3628)
inline _variant_t XL95::ListBox::GetLinkedObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3629)
inline void XL95::ListBox::PutLinkedObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35e, VT_VARIANT, &_val);
}

#pragma implementation_key(3630)
inline _variant_t XL95::ListBox::GetList ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3631)
inline void XL95::ListBox::PutList ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35d, VT_VARIANT, &_val);
}

#pragma implementation_key(3632)
inline _variant_t XL95::ListBox::GetListCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x351, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3633)
inline void XL95::ListBox::PutListCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x351, VT_VARIANT, &_val);
}

#pragma implementation_key(3634)
inline _variant_t XL95::ListBox::GetListFillRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3635)
inline void XL95::ListBox::PutListFillRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34f, VT_VARIANT, &_val);
}

#pragma implementation_key(3636)
inline _variant_t XL95::ListBox::GetListIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x352, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3637)
inline void XL95::ListBox::PutListIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x352, VT_VARIANT, &_val);
}

#pragma implementation_key(3638)
inline _variant_t XL95::ListBox::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3639)
inline void XL95::ListBox::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3640)
inline _variant_t XL95::ListBox::GetMultiSelect ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x20, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3641)
inline void XL95::ListBox::PutMultiSelect ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x20, VT_VARIANT, &_val);
}

#pragma implementation_key(3642)
inline _variant_t XL95::ListBox::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3643)
inline void XL95::ListBox::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(3644)
inline _variant_t XL95::ListBox::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3645)
inline void XL95::ListBox::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3646)
inline _variant_t XL95::ListBox::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3647)
inline void XL95::ListBox::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3648)
inline _variant_t XL95::ListBox::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3649)
inline void XL95::ListBox::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3650)
inline _variant_t XL95::ListBox::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3651)
inline void XL95::ListBox::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3652)
inline _variant_t XL95::ListBox::GetSelected ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x463, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3653)
inline void XL95::ListBox::PutSelected ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x463, VT_VARIANT, &_val);
}

#pragma implementation_key(3654)
inline _variant_t XL95::ListBox::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3655)
inline void XL95::ListBox::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3656)
inline _variant_t XL95::ListBox::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3657)
inline void XL95::ListBox::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(3658)
inline _variant_t XL95::ListBox::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3659)
inline void XL95::ListBox::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3660)
inline _variant_t XL95::ListBox::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3661)
inline void XL95::ListBox::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3662)
inline _variant_t XL95::ListBox::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3663)
inline void XL95::ListBox::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3664)
inline _variant_t XL95::ListBox::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3665)
inline void XL95::ListBox::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface ListBoxes wrapper method implementations
//

#pragma implementation_key(3666)
inline _variant_t XL95::ListBoxes::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3667)
inline _variant_t XL95::ListBoxes::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(3668)
inline _variant_t XL95::ListBoxes::AddItem ( const _variant_t & Text, const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x353, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Text, &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3669)
inline _variant_t XL95::ListBoxes::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3670)
inline _variant_t XL95::ListBoxes::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3671)
inline _variant_t XL95::ListBoxes::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3672)
inline _variant_t XL95::ListBoxes::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3673)
inline _variant_t XL95::ListBoxes::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3674)
inline _variant_t XL95::ListBoxes::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3675)
inline _variant_t XL95::ListBoxes::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3676)
inline _variant_t XL95::ListBoxes::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3677)
inline _variant_t XL95::ListBoxes::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3678)
inline _variant_t XL95::ListBoxes::RemoveAllItems ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x355, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3679)
inline _variant_t XL95::ListBoxes::RemoveItem ( const _variant_t & Index, const _variant_t & Count ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x354, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Index, &Count);
    return _variant_t(_result, false);
}

#pragma implementation_key(3680)
inline _variant_t XL95::ListBoxes::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3681)
inline _variant_t XL95::ListBoxes::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3682)
inline _variant_t XL95::ListBoxes::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3683)
inline void XL95::ListBoxes::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(3684)
inline _variant_t XL95::ListBoxes::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3685)
inline void XL95::ListBoxes::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3686)
inline _variant_t XL95::ListBoxes::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3687)
inline void XL95::ListBoxes::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3688)
inline _variant_t XL95::ListBoxes::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3689)
inline void XL95::ListBoxes::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3690)
inline _variant_t XL95::ListBoxes::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3691)
inline void XL95::ListBoxes::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3692)
inline _variant_t XL95::ListBoxes::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3693)
inline void XL95::ListBoxes::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3694)
inline _variant_t XL95::ListBoxes::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3695)
inline void XL95::ListBoxes::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3696)
inline _variant_t XL95::ListBoxes::GetList ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3697)
inline void XL95::ListBoxes::PutList ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35d, VT_VARIANT, &_val);
}

#pragma implementation_key(3698)
inline _variant_t XL95::ListBoxes::GetListFillRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3699)
inline void XL95::ListBoxes::PutListFillRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34f, VT_VARIANT, &_val);
}

#pragma implementation_key(3700)
inline _variant_t XL95::ListBoxes::GetListIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x352, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3701)
inline void XL95::ListBoxes::PutListIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x352, VT_VARIANT, &_val);
}

#pragma implementation_key(3702)
inline _variant_t XL95::ListBoxes::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3703)
inline void XL95::ListBoxes::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3704)
inline _variant_t XL95::ListBoxes::GetMultiSelect ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x20, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3705)
inline void XL95::ListBoxes::PutMultiSelect ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x20, VT_VARIANT, &_val);
}

#pragma implementation_key(3706)
inline _variant_t XL95::ListBoxes::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3707)
inline void XL95::ListBoxes::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3708)
inline _variant_t XL95::ListBoxes::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3709)
inline void XL95::ListBoxes::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3710)
inline _variant_t XL95::ListBoxes::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3711)
inline void XL95::ListBoxes::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3712)
inline _variant_t XL95::ListBoxes::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3713)
inline void XL95::ListBoxes::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3714)
inline _variant_t XL95::ListBoxes::GetSelected ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x463, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3715)
inline void XL95::ListBoxes::PutSelected ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x463, VT_VARIANT, &_val);
}

#pragma implementation_key(3716)
inline _variant_t XL95::ListBoxes::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3717)
inline void XL95::ListBoxes::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3718)
inline _variant_t XL95::ListBoxes::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3719)
inline void XL95::ListBoxes::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3720)
inline _variant_t XL95::ListBoxes::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3721)
inline void XL95::ListBoxes::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3722)
inline _variant_t XL95::ListBoxes::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3723)
inline void XL95::ListBoxes::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3724)
inline _variant_t XL95::ListBoxes::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3725)
inline void XL95::ListBoxes::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface GroupBox wrapper method implementations
//

#pragma implementation_key(3726)
inline _variant_t XL95::GroupBox::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3727)
inline _variant_t XL95::GroupBox::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3728)
inline _variant_t XL95::GroupBox::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3729)
inline _variant_t XL95::GroupBox::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(3730)
inline _variant_t XL95::GroupBox::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3731)
inline _variant_t XL95::GroupBox::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3732)
inline _variant_t XL95::GroupBox::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3733)
inline _variant_t XL95::GroupBox::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3734)
inline _variant_t XL95::GroupBox::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3735)
inline _variant_t XL95::GroupBox::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3736)
inline _variant_t XL95::GroupBox::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3737)
inline _variant_t XL95::GroupBox::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3738)
inline void XL95::GroupBox::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(3739)
inline _variant_t XL95::GroupBox::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3740)
inline void XL95::GroupBox::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(3741)
inline _variant_t XL95::GroupBox::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3742)
inline void XL95::GroupBox::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3743)
inline _variant_t XL95::GroupBox::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3744)
inline void XL95::GroupBox::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3745)
inline _variant_t XL95::GroupBox::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3746)
inline void XL95::GroupBox::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3747)
inline _variant_t XL95::GroupBox::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3748)
inline void XL95::GroupBox::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3749)
inline _variant_t XL95::GroupBox::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3750)
inline void XL95::GroupBox::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3751)
inline _variant_t XL95::GroupBox::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3752)
inline void XL95::GroupBox::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(3753)
inline _variant_t XL95::GroupBox::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3754)
inline void XL95::GroupBox::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3755)
inline _variant_t XL95::GroupBox::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3756)
inline void XL95::GroupBox::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3757)
inline _variant_t XL95::GroupBox::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3758)
inline void XL95::GroupBox::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(3759)
inline _variant_t XL95::GroupBox::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3760)
inline void XL95::GroupBox::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(3761)
inline _variant_t XL95::GroupBox::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3762)
inline void XL95::GroupBox::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3763)
inline _variant_t XL95::GroupBox::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3764)
inline void XL95::GroupBox::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3765)
inline _variant_t XL95::GroupBox::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3766)
inline void XL95::GroupBox::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(3767)
inline _variant_t XL95::GroupBox::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3768)
inline void XL95::GroupBox::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3769)
inline _variant_t XL95::GroupBox::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3770)
inline void XL95::GroupBox::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3771)
inline _variant_t XL95::GroupBox::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3772)
inline void XL95::GroupBox::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3773)
inline _variant_t XL95::GroupBox::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3774)
inline void XL95::GroupBox::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3775)
inline _variant_t XL95::GroupBox::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3776)
inline void XL95::GroupBox::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(3777)
inline _variant_t XL95::GroupBox::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3778)
inline void XL95::GroupBox::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3779)
inline _variant_t XL95::GroupBox::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3780)
inline void XL95::GroupBox::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3781)
inline _variant_t XL95::GroupBox::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3782)
inline void XL95::GroupBox::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface GroupBoxes wrapper method implementations
//

#pragma implementation_key(3783)
inline _variant_t XL95::GroupBoxes::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3784)
inline _variant_t XL95::GroupBoxes::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(3785)
inline _variant_t XL95::GroupBoxes::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3786)
inline _variant_t XL95::GroupBoxes::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3787)
inline _variant_t XL95::GroupBoxes::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3788)
inline _variant_t XL95::GroupBoxes::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(3789)
inline _variant_t XL95::GroupBoxes::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3790)
inline _variant_t XL95::GroupBoxes::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3791)
inline _variant_t XL95::GroupBoxes::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3792)
inline _variant_t XL95::GroupBoxes::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3793)
inline _variant_t XL95::GroupBoxes::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3794)
inline _variant_t XL95::GroupBoxes::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3795)
inline _variant_t XL95::GroupBoxes::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3796)
inline _variant_t XL95::GroupBoxes::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3797)
inline _variant_t XL95::GroupBoxes::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3798)
inline _variant_t XL95::GroupBoxes::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3799)
inline void XL95::GroupBoxes::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(3800)
inline _variant_t XL95::GroupBoxes::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3801)
inline void XL95::GroupBoxes::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3802)
inline _variant_t XL95::GroupBoxes::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3803)
inline void XL95::GroupBoxes::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(3804)
inline _variant_t XL95::GroupBoxes::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3805)
inline void XL95::GroupBoxes::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3806)
inline _variant_t XL95::GroupBoxes::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3807)
inline void XL95::GroupBoxes::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3808)
inline _variant_t XL95::GroupBoxes::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3809)
inline void XL95::GroupBoxes::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3810)
inline _variant_t XL95::GroupBoxes::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3811)
inline void XL95::GroupBoxes::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3812)
inline _variant_t XL95::GroupBoxes::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3813)
inline void XL95::GroupBoxes::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3814)
inline _variant_t XL95::GroupBoxes::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3815)
inline void XL95::GroupBoxes::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3816)
inline _variant_t XL95::GroupBoxes::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3817)
inline void XL95::GroupBoxes::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(3818)
inline _variant_t XL95::GroupBoxes::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3819)
inline void XL95::GroupBoxes::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3820)
inline _variant_t XL95::GroupBoxes::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3821)
inline void XL95::GroupBoxes::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3822)
inline _variant_t XL95::GroupBoxes::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3823)
inline void XL95::GroupBoxes::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(3824)
inline _variant_t XL95::GroupBoxes::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3825)
inline void XL95::GroupBoxes::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3826)
inline _variant_t XL95::GroupBoxes::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3827)
inline void XL95::GroupBoxes::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3828)
inline _variant_t XL95::GroupBoxes::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3829)
inline void XL95::GroupBoxes::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3830)
inline _variant_t XL95::GroupBoxes::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3831)
inline void XL95::GroupBoxes::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3832)
inline _variant_t XL95::GroupBoxes::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3833)
inline void XL95::GroupBoxes::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3834)
inline _variant_t XL95::GroupBoxes::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3835)
inline void XL95::GroupBoxes::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3836)
inline _variant_t XL95::GroupBoxes::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3837)
inline void XL95::GroupBoxes::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface DropDown wrapper method implementations
//

#pragma implementation_key(3838)
inline _variant_t XL95::DropDown::AddItem ( const _variant_t & Text, const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x353, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Text, &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3839)
inline _variant_t XL95::DropDown::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3840)
inline _variant_t XL95::DropDown::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3841)
inline _variant_t XL95::DropDown::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3842)
inline _variant_t XL95::DropDown::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3843)
inline _variant_t XL95::DropDown::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3844)
inline _variant_t XL95::DropDown::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3845)
inline _variant_t XL95::DropDown::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3846)
inline _variant_t XL95::DropDown::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3847)
inline _variant_t XL95::DropDown::RemoveAllItems ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x355, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3848)
inline _variant_t XL95::DropDown::RemoveItem ( const _variant_t & Index, const _variant_t & Count ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x354, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Index, &Count);
    return _variant_t(_result, false);
}

#pragma implementation_key(3849)
inline _variant_t XL95::DropDown::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3850)
inline _variant_t XL95::DropDown::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3851)
inline _variant_t XL95::DropDown::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3852)
inline void XL95::DropDown::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(3853)
inline _variant_t XL95::DropDown::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3854)
inline void XL95::DropDown::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3855)
inline _variant_t XL95::DropDown::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3856)
inline void XL95::DropDown::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3857)
inline _variant_t XL95::DropDown::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3858)
inline void XL95::DropDown::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3859)
inline _variant_t XL95::DropDown::GetDropDownLines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x350, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3860)
inline void XL95::DropDown::PutDropDownLines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x350, VT_VARIANT, &_val);
}

#pragma implementation_key(3861)
inline _variant_t XL95::DropDown::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3862)
inline void XL95::DropDown::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3863)
inline _variant_t XL95::DropDown::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3864)
inline void XL95::DropDown::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3865)
inline _variant_t XL95::DropDown::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3866)
inline void XL95::DropDown::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(3867)
inline _variant_t XL95::DropDown::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3868)
inline void XL95::DropDown::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3869)
inline _variant_t XL95::DropDown::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3870)
inline void XL95::DropDown::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3871)
inline _variant_t XL95::DropDown::GetLinkedObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3872)
inline void XL95::DropDown::PutLinkedObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35e, VT_VARIANT, &_val);
}

#pragma implementation_key(3873)
inline _variant_t XL95::DropDown::GetList ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3874)
inline void XL95::DropDown::PutList ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35d, VT_VARIANT, &_val);
}

#pragma implementation_key(3875)
inline _variant_t XL95::DropDown::GetListCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x351, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3876)
inline void XL95::DropDown::PutListCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x351, VT_VARIANT, &_val);
}

#pragma implementation_key(3877)
inline _variant_t XL95::DropDown::GetListFillRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3878)
inline void XL95::DropDown::PutListFillRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34f, VT_VARIANT, &_val);
}

#pragma implementation_key(3879)
inline _variant_t XL95::DropDown::GetListIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x352, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3880)
inline void XL95::DropDown::PutListIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x352, VT_VARIANT, &_val);
}

#pragma implementation_key(3881)
inline _variant_t XL95::DropDown::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3882)
inline void XL95::DropDown::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3883)
inline _variant_t XL95::DropDown::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3884)
inline void XL95::DropDown::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(3885)
inline _variant_t XL95::DropDown::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3886)
inline void XL95::DropDown::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3887)
inline _variant_t XL95::DropDown::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3888)
inline void XL95::DropDown::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3889)
inline _variant_t XL95::DropDown::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3890)
inline void XL95::DropDown::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3891)
inline _variant_t XL95::DropDown::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3892)
inline void XL95::DropDown::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3893)
inline _variant_t XL95::DropDown::GetSelected ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x463, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3894)
inline void XL95::DropDown::PutSelected ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x463, VT_VARIANT, &_val);
}

#pragma implementation_key(3895)
inline _variant_t XL95::DropDown::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3896)
inline void XL95::DropDown::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3897)
inline _variant_t XL95::DropDown::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3898)
inline void XL95::DropDown::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3899)
inline _variant_t XL95::DropDown::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3900)
inline void XL95::DropDown::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(3901)
inline _variant_t XL95::DropDown::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3902)
inline void XL95::DropDown::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3903)
inline _variant_t XL95::DropDown::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3904)
inline void XL95::DropDown::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3905)
inline _variant_t XL95::DropDown::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3906)
inline void XL95::DropDown::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3907)
inline _variant_t XL95::DropDown::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3908)
inline void XL95::DropDown::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface DropDowns wrapper method implementations
//

#pragma implementation_key(3909)
inline _variant_t XL95::DropDowns::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3910)
inline _variant_t XL95::DropDowns::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height, const _variant_t & Editable ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c\x080c", &Left, &Top, &Width, &Height, &Editable);
    return _variant_t(_result, false);
}

#pragma implementation_key(3911)
inline _variant_t XL95::DropDowns::AddItem ( const _variant_t & Text, const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x353, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Text, &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3912)
inline _variant_t XL95::DropDowns::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3913)
inline _variant_t XL95::DropDowns::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3914)
inline _variant_t XL95::DropDowns::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3915)
inline _variant_t XL95::DropDowns::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3916)
inline _variant_t XL95::DropDowns::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3917)
inline _variant_t XL95::DropDowns::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3918)
inline _variant_t XL95::DropDowns::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3919)
inline _variant_t XL95::DropDowns::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3920)
inline _variant_t XL95::DropDowns::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3921)
inline _variant_t XL95::DropDowns::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(3922)
inline _variant_t XL95::DropDowns::RemoveAllItems ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x355, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3923)
inline _variant_t XL95::DropDowns::RemoveItem ( const _variant_t & Index, const _variant_t & Count ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x354, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Index, &Count);
    return _variant_t(_result, false);
}

#pragma implementation_key(3924)
inline _variant_t XL95::DropDowns::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3925)
inline _variant_t XL95::DropDowns::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3926)
inline _variant_t XL95::DropDowns::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3927)
inline void XL95::DropDowns::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3928)
inline _variant_t XL95::DropDowns::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3929)
inline void XL95::DropDowns::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(3930)
inline _variant_t XL95::DropDowns::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3931)
inline void XL95::DropDowns::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3932)
inline _variant_t XL95::DropDowns::GetDisplay3DShading ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x462, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3933)
inline void XL95::DropDowns::PutDisplay3DShading ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x462, VT_VARIANT, &_val);
}

#pragma implementation_key(3934)
inline _variant_t XL95::DropDowns::GetDropDownLines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x350, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3935)
inline void XL95::DropDowns::PutDropDownLines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x350, VT_VARIANT, &_val);
}

#pragma implementation_key(3936)
inline _variant_t XL95::DropDowns::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3937)
inline void XL95::DropDowns::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(3938)
inline _variant_t XL95::DropDowns::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3939)
inline void XL95::DropDowns::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3940)
inline _variant_t XL95::DropDowns::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3941)
inline void XL95::DropDowns::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3942)
inline _variant_t XL95::DropDowns::GetLinkedCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x422, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3943)
inline void XL95::DropDowns::PutLinkedCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x422, VT_VARIANT, &_val);
}

#pragma implementation_key(3944)
inline _variant_t XL95::DropDowns::GetList ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3945)
inline void XL95::DropDowns::PutList ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35d, VT_VARIANT, &_val);
}

#pragma implementation_key(3946)
inline _variant_t XL95::DropDowns::GetListFillRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3947)
inline void XL95::DropDowns::PutListFillRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34f, VT_VARIANT, &_val);
}

#pragma implementation_key(3948)
inline _variant_t XL95::DropDowns::GetListIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x352, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3949)
inline void XL95::DropDowns::PutListIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x352, VT_VARIANT, &_val);
}

#pragma implementation_key(3950)
inline _variant_t XL95::DropDowns::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3951)
inline void XL95::DropDowns::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3952)
inline _variant_t XL95::DropDowns::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3953)
inline void XL95::DropDowns::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3954)
inline _variant_t XL95::DropDowns::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3955)
inline void XL95::DropDowns::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3956)
inline _variant_t XL95::DropDowns::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3957)
inline void XL95::DropDowns::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(3958)
inline _variant_t XL95::DropDowns::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3959)
inline void XL95::DropDowns::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(3960)
inline _variant_t XL95::DropDowns::GetSelected ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x463, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3961)
inline void XL95::DropDowns::PutSelected ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x463, VT_VARIANT, &_val);
}

#pragma implementation_key(3962)
inline _variant_t XL95::DropDowns::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3963)
inline void XL95::DropDowns::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3964)
inline _variant_t XL95::DropDowns::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3965)
inline void XL95::DropDowns::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(3966)
inline _variant_t XL95::DropDowns::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3967)
inline void XL95::DropDowns::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(3968)
inline _variant_t XL95::DropDowns::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3969)
inline void XL95::DropDowns::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(3970)
inline _variant_t XL95::DropDowns::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3971)
inline void XL95::DropDowns::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(3972)
inline _variant_t XL95::DropDowns::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3973)
inline void XL95::DropDowns::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface DialogFrame wrapper method implementations
//

#pragma implementation_key(3974)
inline _variant_t XL95::DialogFrame::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3975)
inline _variant_t XL95::DialogFrame::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(3976)
inline _variant_t XL95::DialogFrame::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(3977)
inline _variant_t XL95::DialogFrame::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(3978)
inline _variant_t XL95::DialogFrame::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(3979)
inline _variant_t XL95::DialogFrame::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3980)
inline void XL95::DialogFrame::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(3981)
inline _variant_t XL95::DialogFrame::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3982)
inline void XL95::DialogFrame::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(3983)
inline _variant_t XL95::DialogFrame::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3984)
inline void XL95::DialogFrame::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(3985)
inline _variant_t XL95::DialogFrame::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3986)
inline void XL95::DialogFrame::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(3987)
inline _variant_t XL95::DialogFrame::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3988)
inline void XL95::DialogFrame::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(3989)
inline _variant_t XL95::DialogFrame::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3990)
inline void XL95::DialogFrame::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(3991)
inline _variant_t XL95::DialogFrame::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3992)
inline void XL95::DialogFrame::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(3993)
inline _variant_t XL95::DialogFrame::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3994)
inline void XL95::DialogFrame::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(3995)
inline _variant_t XL95::DialogFrame::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3996)
inline void XL95::DialogFrame::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(3997)
inline _variant_t XL95::DialogFrame::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3998)
inline void XL95::DialogFrame::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(3999)
inline _variant_t XL95::DialogFrame::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4000)
inline void XL95::DialogFrame::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(4001)
inline _variant_t XL95::DialogFrame::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4002)
inline void XL95::DialogFrame::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

//
// dispinterface Label wrapper method implementations
//

#pragma implementation_key(4003)
inline _variant_t XL95::Label::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4004)
inline _variant_t XL95::Label::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4005)
inline _variant_t XL95::Label::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(4006)
inline _variant_t XL95::Label::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(4007)
inline _variant_t XL95::Label::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4008)
inline _variant_t XL95::Label::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(4009)
inline _variant_t XL95::Label::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4010)
inline _variant_t XL95::Label::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4011)
inline _variant_t XL95::Label::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4012)
inline _variant_t XL95::Label::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(4013)
inline _variant_t XL95::Label::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4014)
inline _variant_t XL95::Label::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4015)
inline void XL95::Label::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(4016)
inline _variant_t XL95::Label::GetBottomRightCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x267, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4017)
inline void XL95::Label::PutBottomRightCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x267, VT_VARIANT, &_val);
}

#pragma implementation_key(4018)
inline _variant_t XL95::Label::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4019)
inline void XL95::Label::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(4020)
inline _variant_t XL95::Label::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4021)
inline void XL95::Label::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4022)
inline _variant_t XL95::Label::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4023)
inline void XL95::Label::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(4024)
inline _variant_t XL95::Label::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4025)
inline void XL95::Label::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(4026)
inline _variant_t XL95::Label::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4027)
inline void XL95::Label::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(4028)
inline _variant_t XL95::Label::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4029)
inline void XL95::Label::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(4030)
inline _variant_t XL95::Label::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4031)
inline void XL95::Label::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(4032)
inline _variant_t XL95::Label::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4033)
inline void XL95::Label::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(4034)
inline _variant_t XL95::Label::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4035)
inline void XL95::Label::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4036)
inline _variant_t XL95::Label::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4037)
inline void XL95::Label::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(4038)
inline _variant_t XL95::Label::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4039)
inline void XL95::Label::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4040)
inline _variant_t XL95::Label::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4041)
inline void XL95::Label::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(4042)
inline _variant_t XL95::Label::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4043)
inline void XL95::Label::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(4044)
inline _variant_t XL95::Label::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4045)
inline void XL95::Label::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(4046)
inline _variant_t XL95::Label::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4047)
inline void XL95::Label::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(4048)
inline _variant_t XL95::Label::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4049)
inline void XL95::Label::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(4050)
inline _variant_t XL95::Label::GetTopLeftCell ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4051)
inline void XL95::Label::PutTopLeftCell ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26c, VT_VARIANT, &_val);
}

#pragma implementation_key(4052)
inline _variant_t XL95::Label::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4053)
inline void XL95::Label::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(4054)
inline _variant_t XL95::Label::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4055)
inline void XL95::Label::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(4056)
inline _variant_t XL95::Label::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4057)
inline void XL95::Label::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Labels wrapper method implementations
//

#pragma implementation_key(4058)
inline _variant_t XL95::Labels::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4059)
inline _variant_t XL95::Labels::Add ( const _variant_t & Left, const _variant_t & Top, const _variant_t & Width, const _variant_t & Height ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &Left, &Top, &Width, &Height);
    return _variant_t(_result, false);
}

#pragma implementation_key(4060)
inline _variant_t XL95::Labels::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4061)
inline _variant_t XL95::Labels::BringToFront ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4062)
inline _variant_t XL95::Labels::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(4063)
inline _variant_t XL95::Labels::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(4064)
inline _variant_t XL95::Labels::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4065)
inline _variant_t XL95::Labels::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Appearance, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(4066)
inline _variant_t XL95::Labels::Cut ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x235, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4067)
inline _variant_t XL95::Labels::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4068)
inline _variant_t XL95::Labels::Duplicate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x40f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4069)
inline _variant_t XL95::Labels::Group ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4070)
inline _variant_t XL95::Labels::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4071)
inline _variant_t XL95::Labels::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(4072)
inline _variant_t XL95::Labels::SendToBack ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4073)
inline _variant_t XL95::Labels::GetAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4074)
inline void XL95::Labels::PutAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34e, VT_VARIANT, &_val);
}

#pragma implementation_key(4075)
inline _variant_t XL95::Labels::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4076)
inline void XL95::Labels::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(4077)
inline _variant_t XL95::Labels::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4078)
inline void XL95::Labels::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(4079)
inline _variant_t XL95::Labels::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4080)
inline void XL95::Labels::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4081)
inline _variant_t XL95::Labels::GetEnabled ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x258, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4082)
inline void XL95::Labels::PutEnabled ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x258, VT_VARIANT, &_val);
}

#pragma implementation_key(4083)
inline _variant_t XL95::Labels::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4084)
inline void XL95::Labels::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(4085)
inline _variant_t XL95::Labels::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4086)
inline void XL95::Labels::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(4087)
inline _variant_t XL95::Labels::GetLocked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x10d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4088)
inline void XL95::Labels::PutLocked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x10d, VT_VARIANT, &_val);
}

#pragma implementation_key(4089)
inline _variant_t XL95::Labels::GetLockedText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x268, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4090)
inline void XL95::Labels::PutLockedText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x268, VT_VARIANT, &_val);
}

#pragma implementation_key(4091)
inline _variant_t XL95::Labels::GetOnAction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x254, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4092)
inline void XL95::Labels::PutOnAction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x254, VT_VARIANT, &_val);
}

#pragma implementation_key(4093)
inline _variant_t XL95::Labels::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4094)
inline void XL95::Labels::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4095)
inline _variant_t XL95::Labels::GetPhoneticAccelerator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x461, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4096)
inline void XL95::Labels::PutPhoneticAccelerator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x461, VT_VARIANT, &_val);
}

#pragma implementation_key(4097)
inline _variant_t XL95::Labels::GetPlacement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x269, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4098)
inline void XL95::Labels::PutPlacement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x269, VT_VARIANT, &_val);
}

#pragma implementation_key(4099)
inline _variant_t XL95::Labels::GetPrintObject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4100)
inline void XL95::Labels::PutPrintObject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26a, VT_VARIANT, &_val);
}

#pragma implementation_key(4101)
inline _variant_t XL95::Labels::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4102)
inline void XL95::Labels::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(4103)
inline _variant_t XL95::Labels::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4104)
inline void XL95::Labels::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(4105)
inline _variant_t XL95::Labels::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4106)
inline void XL95::Labels::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(4107)
inline _variant_t XL95::Labels::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4108)
inline void XL95::Labels::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

#pragma implementation_key(4109)
inline _variant_t XL95::Labels::GetZOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4110)
inline void XL95::Labels::PutZOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26e, VT_VARIANT, &_val);
}

//
// dispinterface Interior wrapper method implementations
//

#pragma implementation_key(4111)
inline _variant_t XL95::Interior::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4112)
inline _variant_t XL95::Interior::GetColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x63, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4113)
inline void XL95::Interior::PutColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x63, VT_VARIANT, &_val);
}

#pragma implementation_key(4114)
inline _variant_t XL95::Interior::GetColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x61, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4115)
inline void XL95::Interior::PutColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x61, VT_VARIANT, &_val);
}

#pragma implementation_key(4116)
inline _variant_t XL95::Interior::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4117)
inline void XL95::Interior::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4118)
inline _variant_t XL95::Interior::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4119)
inline void XL95::Interior::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4120)
inline _variant_t XL95::Interior::GetPattern ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x5f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4121)
inline void XL95::Interior::PutPattern ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x5f, VT_VARIANT, &_val);
}

#pragma implementation_key(4122)
inline _variant_t XL95::Interior::GetPatternColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x64, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4123)
inline void XL95::Interior::PutPatternColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x64, VT_VARIANT, &_val);
}

#pragma implementation_key(4124)
inline _variant_t XL95::Interior::GetPatternColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x62, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4125)
inline void XL95::Interior::PutPatternColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x62, VT_VARIANT, &_val);
}

//
// dispinterface SoundNote wrapper method implementations
//

#pragma implementation_key(4126)
inline _variant_t XL95::SoundNote::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4127)
inline _variant_t XL95::SoundNote::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4128)
inline _variant_t XL95::SoundNote::Import ( const _variant_t & Filename ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x395, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Filename);
    return _variant_t(_result, false);
}

#pragma implementation_key(4129)
inline _variant_t XL95::SoundNote::Play ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x396, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4130)
inline _variant_t XL95::SoundNote::Record ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x397, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4131)
inline _variant_t XL95::SoundNote::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4132)
inline void XL95::SoundNote::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4133)
inline _variant_t XL95::SoundNote::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4134)
inline void XL95::SoundNote::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Characters wrapper method implementations
//

#pragma implementation_key(4135)
inline _variant_t XL95::Characters::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4136)
inline _variant_t XL95::Characters::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4137)
inline _variant_t XL95::Characters::Insert ( const _variant_t & String ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &String);
    return _variant_t(_result, false);
}

#pragma implementation_key(4138)
inline _variant_t XL95::Characters::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4139)
inline void XL95::Characters::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(4140)
inline _variant_t XL95::Characters::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4141)
inline void XL95::Characters::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(4142)
inline _variant_t XL95::Characters::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4143)
inline void XL95::Characters::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4144)
inline _variant_t XL95::Characters::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4145)
inline void XL95::Characters::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(4146)
inline _variant_t XL95::Characters::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4147)
inline void XL95::Characters::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4148)
inline _variant_t XL95::Characters::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4149)
inline void XL95::Characters::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

//
// dispinterface Dialog wrapper method implementations
//

#pragma implementation_key(4150)
inline _variant_t XL95::Dialog::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4151)
inline _variant_t XL95::Dialog::Show ( const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f0, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Arg1, &Arg2, &Arg3, &Arg4, &Arg5, &Arg6, &Arg7, &Arg8, &Arg9, &Arg10, &Arg11, &Arg12, &Arg13, &Arg14, &Arg15, &Arg16, &Arg17, &Arg18, &Arg19, &Arg20, &Arg21, &Arg22, &Arg23, &Arg24, &Arg25, &Arg26, &Arg27, &Arg28, &Arg29, &Arg30);
    return _variant_t(_result, false);
}

#pragma implementation_key(4152)
inline _variant_t XL95::Dialog::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4153)
inline void XL95::Dialog::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4154)
inline _variant_t XL95::Dialog::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4155)
inline void XL95::Dialog::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Dialogs wrapper method implementations
//

#pragma implementation_key(4156)
inline _variant_t XL95::Dialogs::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4157)
inline _variant_t XL95::Dialogs::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4158)
inline _variant_t XL95::Dialogs::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4159)
inline void XL95::Dialogs::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(4160)
inline _variant_t XL95::Dialogs::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4161)
inline void XL95::Dialogs::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4162)
inline _variant_t XL95::Dialogs::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4163)
inline void XL95::Dialogs::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Outline wrapper method implementations
//

#pragma implementation_key(4164)
inline _variant_t XL95::Outline::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4165)
inline _variant_t XL95::Outline::ShowLevels ( const _variant_t & RowLevels, const _variant_t & ColumnLevels ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x3c0, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &RowLevels, &ColumnLevels);
    return _variant_t(_result, false);
}

#pragma implementation_key(4166)
inline _variant_t XL95::Outline::GetAutomaticStyles ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3bf, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4167)
inline void XL95::Outline::PutAutomaticStyles ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3bf, VT_VARIANT, &_val);
}

#pragma implementation_key(4168)
inline _variant_t XL95::Outline::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4169)
inline void XL95::Outline::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4170)
inline _variant_t XL95::Outline::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4171)
inline void XL95::Outline::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4172)
inline _variant_t XL95::Outline::GetSummaryColumn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3c1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4173)
inline void XL95::Outline::PutSummaryColumn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3c1, VT_VARIANT, &_val);
}

#pragma implementation_key(4174)
inline _variant_t XL95::Outline::GetSummaryRow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x386, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4175)
inline void XL95::Outline::PutSummaryRow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x386, VT_VARIANT, &_val);
}

//
// dispinterface RoutingSlip wrapper method implementations
//

#pragma implementation_key(4176)
inline _variant_t XL95::RoutingSlip::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4177)
inline _variant_t XL95::RoutingSlip::Reset ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x22b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4178)
inline _variant_t XL95::RoutingSlip::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4179)
inline void XL95::RoutingSlip::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4180)
inline _variant_t XL95::RoutingSlip::GetDelivery ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3bb, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4181)
inline void XL95::RoutingSlip::PutDelivery ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3bb, VT_VARIANT, &_val);
}

#pragma implementation_key(4182)
inline _variant_t XL95::RoutingSlip::GetMessage ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ba, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4183)
inline void XL95::RoutingSlip::PutMessage ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ba, VT_VARIANT, &_val);
}

#pragma implementation_key(4184)
inline _variant_t XL95::RoutingSlip::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4185)
inline void XL95::RoutingSlip::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4186)
inline _variant_t XL95::RoutingSlip::GetRecipients ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4187)
inline void XL95::RoutingSlip::PutRecipients ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b8, VT_VARIANT, &_val);
}

#pragma implementation_key(4188)
inline _variant_t XL95::RoutingSlip::GetReturnWhenDone ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3bc, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4189)
inline void XL95::RoutingSlip::PutReturnWhenDone ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3bc, VT_VARIANT, &_val);
}

#pragma implementation_key(4190)
inline _variant_t XL95::RoutingSlip::GetStatus ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3be, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4191)
inline void XL95::RoutingSlip::PutStatus ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3be, VT_VARIANT, &_val);
}

#pragma implementation_key(4192)
inline _variant_t XL95::RoutingSlip::GetSubject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4193)
inline void XL95::RoutingSlip::PutSubject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b9, VT_VARIANT, &_val);
}

#pragma implementation_key(4194)
inline _variant_t XL95::RoutingSlip::GetTrackStatus ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3bd, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4195)
inline void XL95::RoutingSlip::PutTrackStatus ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3bd, VT_VARIANT, &_val);
}

//
// dispinterface Module wrapper method implementations
//

#pragma implementation_key(4196)
inline _variant_t XL95::Module::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4197)
inline _variant_t XL95::Module::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4198)
inline _variant_t XL95::Module::Copy ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4199)
inline _variant_t XL95::Module::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4200)
inline _variant_t XL95::Module::InsertFile ( const _variant_t & Filename, const _variant_t & Merge ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x248, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Filename, &Merge);
    return _variant_t(_result, false);
}

#pragma implementation_key(4201)
inline _variant_t XL95::Module::Move ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4202)
inline _variant_t XL95::Module::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(4203)
inline _variant_t XL95::Module::Protect ( const _variant_t & Password, const _variant_t & DrawingObjects, const _variant_t & Contents, const _variant_t & Scenarios, const _variant_t & UserInterfaceOnly ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &Password, &DrawingObjects, &Contents, &Scenarios, &UserInterfaceOnly);
    return _variant_t(_result, false);
}

#pragma implementation_key(4204)
inline _variant_t XL95::Module::SaveAs ( const _variant_t & Filename, const _variant_t & FileFormat, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ReadOnlyRecommended, const _variant_t & CreateBackup ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c\x080c\x080c", &Filename, &FileFormat, &Password, &WriteResPassword, &ReadOnlyRecommended, &CreateBackup);
    return _variant_t(_result, false);
}

#pragma implementation_key(4205)
inline _variant_t XL95::Module::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(4206)
inline _variant_t XL95::Module::Unprotect ( const _variant_t & Password ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Password);
    return _variant_t(_result, false);
}

#pragma implementation_key(4207)
inline _variant_t XL95::Module::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4208)
inline void XL95::Module::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4209)
inline _variant_t XL95::Module::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4210)
inline void XL95::Module::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(4211)
inline _variant_t XL95::Module::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4212)
inline void XL95::Module::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4213)
inline _variant_t XL95::Module::GetNext ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4214)
inline void XL95::Module::PutNext ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f6, VT_VARIANT, &_val);
}

#pragma implementation_key(4215)
inline _variant_t XL95::Module::GetOnDoubleClick ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x274, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4216)
inline void XL95::Module::PutOnDoubleClick ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x274, VT_VARIANT, &_val);
}

#pragma implementation_key(4217)
inline _variant_t XL95::Module::GetOnSheetActivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x407, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4218)
inline void XL95::Module::PutOnSheetActivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x407, VT_VARIANT, &_val);
}

#pragma implementation_key(4219)
inline _variant_t XL95::Module::GetOnSheetDeactivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x439, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4220)
inline void XL95::Module::PutOnSheetDeactivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x439, VT_VARIANT, &_val);
}

#pragma implementation_key(4221)
inline _variant_t XL95::Module::GetPageSetup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4222)
inline void XL95::Module::PutPageSetup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e6, VT_VARIANT, &_val);
}

#pragma implementation_key(4223)
inline _variant_t XL95::Module::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4224)
inline void XL95::Module::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4225)
inline _variant_t XL95::Module::GetPrevious ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4226)
inline void XL95::Module::PutPrevious ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f7, VT_VARIANT, &_val);
}

#pragma implementation_key(4227)
inline _variant_t XL95::Module::GetProtectContents ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x124, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4228)
inline void XL95::Module::PutProtectContents ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x124, VT_VARIANT, &_val);
}

#pragma implementation_key(4229)
inline _variant_t XL95::Module::GetProtectionMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x487, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4230)
inline void XL95::Module::PutProtectionMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x487, VT_VARIANT, &_val);
}

#pragma implementation_key(4231)
inline _variant_t XL95::Module::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4232)
inline void XL95::Module::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

//
// dispinterface Modules wrapper method implementations
//

#pragma implementation_key(4233)
inline _variant_t XL95::Modules::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4234)
inline _variant_t XL95::Modules::Add ( const _variant_t & Before, const _variant_t & After, const _variant_t & Count ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Before, &After, &Count);
    return _variant_t(_result, false);
}

#pragma implementation_key(4235)
inline _variant_t XL95::Modules::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4236)
inline _variant_t XL95::Modules::Copy ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4237)
inline _variant_t XL95::Modules::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4238)
inline _variant_t XL95::Modules::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4239)
inline _variant_t XL95::Modules::Move ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4240)
inline _variant_t XL95::Modules::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(4241)
inline _variant_t XL95::Modules::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(4242)
inline _variant_t XL95::Modules::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4243)
inline void XL95::Modules::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(4244)
inline _variant_t XL95::Modules::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4245)
inline void XL95::Modules::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4246)
inline _variant_t XL95::Modules::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4247)
inline void XL95::Modules::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4248)
inline _variant_t XL95::Modules::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4249)
inline void XL95::Modules::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

//
// dispinterface DialogSheet wrapper method implementations
//

#pragma implementation_key(4250)
inline _variant_t XL95::DialogSheet::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4251)
inline _variant_t XL95::DialogSheet::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4252)
inline _variant_t XL95::DialogSheet::Arcs ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2f8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4253)
inline _variant_t XL95::DialogSheet::Buttons ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x22d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4254)
inline _variant_t XL95::DialogSheet::ChartObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x424, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4255)
inline _variant_t XL95::DialogSheet::CheckBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x338, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4256)
inline _variant_t XL95::DialogSheet::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(4257)
inline _variant_t XL95::DialogSheet::Copy ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4258)
inline _variant_t XL95::DialogSheet::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4259)
inline _variant_t XL95::DialogSheet::DrawingObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4260)
inline _variant_t XL95::DialogSheet::Drawings ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x304, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4261)
inline _variant_t XL95::DialogSheet::DropDowns ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x344, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4262)
inline _variant_t XL95::DialogSheet::EditBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x33c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4263)
inline _variant_t XL95::DialogSheet::_Evaluate ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(4264)
inline _variant_t XL95::DialogSheet::Evaluate ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfffffffb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(4265)
inline _variant_t XL95::DialogSheet::GroupBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x342, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4266)
inline _variant_t XL95::DialogSheet::GroupObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x459, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4267)
inline _variant_t XL95::DialogSheet::Hide ( const _variant_t & Cancel ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x32d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Cancel);
    return _variant_t(_result, false);
}

#pragma implementation_key(4268)
inline _variant_t XL95::DialogSheet::Labels ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x349, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4269)
inline _variant_t XL95::DialogSheet::Lines ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2ff, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4270)
inline _variant_t XL95::DialogSheet::ListBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x340, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4271)
inline _variant_t XL95::DialogSheet::Move ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4272)
inline _variant_t XL95::DialogSheet::Names ( const _variant_t & Index, const _variant_t & IndexLocal, const _variant_t & RefersTo ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ba, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Index, &IndexLocal, &RefersTo);
    return _variant_t(_result, false);
}

#pragma implementation_key(4273)
inline _variant_t XL95::DialogSheet::OLEObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x31f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4274)
inline _variant_t XL95::DialogSheet::OptionButtons ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x33a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4275)
inline _variant_t XL95::DialogSheet::Ovals ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x321, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4276)
inline _variant_t XL95::DialogSheet::Paste ( const _variant_t & Destination, const _variant_t & Link ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Destination, &Link);
    return _variant_t(_result, false);
}

#pragma implementation_key(4277)
inline _variant_t XL95::DialogSheet::PasteSpecial ( const _variant_t & Format, const _variant_t & Link, const _variant_t & DisplayAsIcon, const _variant_t & IconFileName, const _variant_t & IconIndex, const _variant_t & IconLabel ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x403, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c", &Format, &Link, &DisplayAsIcon, &IconFileName, &IconIndex, &IconLabel);
    return _variant_t(_result, false);
}

#pragma implementation_key(4278)
inline _variant_t XL95::DialogSheet::Pictures ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x303, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4279)
inline _variant_t XL95::DialogSheet::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(4280)
inline _variant_t XL95::DialogSheet::PrintPreview ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4281)
inline _variant_t XL95::DialogSheet::Protect ( const _variant_t & Password, const _variant_t & DrawingObjects, const _variant_t & Contents, const _variant_t & Scenarios, const _variant_t & UserInterfaceOnly ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &Password, &DrawingObjects, &Contents, &Scenarios, &UserInterfaceOnly);
    return _variant_t(_result, false);
}

#pragma implementation_key(4282)
inline _variant_t XL95::DialogSheet::Rectangles ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x306, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4283)
inline _variant_t XL95::DialogSheet::SaveAs ( const _variant_t & Filename, const _variant_t & FileFormat, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ReadOnlyRecommended, const _variant_t & CreateBackup ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c\x080c\x080c", &Filename, &FileFormat, &Password, &WriteResPassword, &ReadOnlyRecommended, &CreateBackup);
    return _variant_t(_result, false);
}

#pragma implementation_key(4284)
inline _variant_t XL95::DialogSheet::ScrollBars ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x33e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4285)
inline _variant_t XL95::DialogSheet::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(4286)
inline _variant_t XL95::DialogSheet::Show ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f0, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4287)
inline _variant_t XL95::DialogSheet::Spinners ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x346, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4288)
inline _variant_t XL95::DialogSheet::TextBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x309, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4289)
inline _variant_t XL95::DialogSheet::Unprotect ( const _variant_t & Password ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Password);
    return _variant_t(_result, false);
}

#pragma implementation_key(4290)
inline _variant_t XL95::DialogSheet::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4291)
inline void XL95::DialogSheet::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4292)
inline _variant_t XL95::DialogSheet::GetDefaultButton ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x359, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4293)
inline void XL95::DialogSheet::PutDefaultButton ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x359, VT_VARIANT, &_val);
}

#pragma implementation_key(4294)
inline _variant_t XL95::DialogSheet::GetDialogFrame ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x347, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4295)
inline void XL95::DialogSheet::PutDialogFrame ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x347, VT_VARIANT, &_val);
}

#pragma implementation_key(4296)
inline _variant_t XL95::DialogSheet::GetDisplayAutomaticPageBreaks ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x283, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4297)
inline void XL95::DialogSheet::PutDisplayAutomaticPageBreaks ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x283, VT_VARIANT, &_val);
}

#pragma implementation_key(4298)
inline _variant_t XL95::DialogSheet::GetEnableAutoFilter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x484, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4299)
inline void XL95::DialogSheet::PutEnableAutoFilter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x484, VT_VARIANT, &_val);
}

#pragma implementation_key(4300)
inline _variant_t XL95::DialogSheet::GetEnableOutlining ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x485, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4301)
inline void XL95::DialogSheet::PutEnableOutlining ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x485, VT_VARIANT, &_val);
}

#pragma implementation_key(4302)
inline _variant_t XL95::DialogSheet::GetEnablePivotTable ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x486, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4303)
inline void XL95::DialogSheet::PutEnablePivotTable ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x486, VT_VARIANT, &_val);
}

#pragma implementation_key(4304)
inline _variant_t XL95::DialogSheet::GetFocus ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x32e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4305)
inline void XL95::DialogSheet::PutFocus ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x32e, VT_VARIANT, &_val);
}

#pragma implementation_key(4306)
inline _variant_t XL95::DialogSheet::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4307)
inline void XL95::DialogSheet::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(4308)
inline _variant_t XL95::DialogSheet::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4309)
inline void XL95::DialogSheet::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4310)
inline _variant_t XL95::DialogSheet::GetNext ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4311)
inline void XL95::DialogSheet::PutNext ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f6, VT_VARIANT, &_val);
}

#pragma implementation_key(4312)
inline _variant_t XL95::DialogSheet::GetOnDoubleClick ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x274, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4313)
inline void XL95::DialogSheet::PutOnDoubleClick ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x274, VT_VARIANT, &_val);
}

#pragma implementation_key(4314)
inline _variant_t XL95::DialogSheet::GetOnSheetActivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x407, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4315)
inline void XL95::DialogSheet::PutOnSheetActivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x407, VT_VARIANT, &_val);
}

#pragma implementation_key(4316)
inline _variant_t XL95::DialogSheet::GetOnSheetDeactivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x439, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4317)
inline void XL95::DialogSheet::PutOnSheetDeactivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x439, VT_VARIANT, &_val);
}

#pragma implementation_key(4318)
inline _variant_t XL95::DialogSheet::GetPageSetup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4319)
inline void XL95::DialogSheet::PutPageSetup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e6, VT_VARIANT, &_val);
}

#pragma implementation_key(4320)
inline _variant_t XL95::DialogSheet::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4321)
inline void XL95::DialogSheet::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4322)
inline _variant_t XL95::DialogSheet::GetPrevious ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4323)
inline void XL95::DialogSheet::PutPrevious ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f7, VT_VARIANT, &_val);
}

#pragma implementation_key(4324)
inline _variant_t XL95::DialogSheet::GetProtectContents ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x124, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4325)
inline void XL95::DialogSheet::PutProtectContents ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x124, VT_VARIANT, &_val);
}

#pragma implementation_key(4326)
inline _variant_t XL95::DialogSheet::GetProtectDrawingObjects ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x125, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4327)
inline void XL95::DialogSheet::PutProtectDrawingObjects ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x125, VT_VARIANT, &_val);
}

#pragma implementation_key(4328)
inline _variant_t XL95::DialogSheet::GetProtectionMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x487, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4329)
inline void XL95::DialogSheet::PutProtectionMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x487, VT_VARIANT, &_val);
}

#pragma implementation_key(4330)
inline _variant_t XL95::DialogSheet::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4331)
inline void XL95::DialogSheet::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

//
// dispinterface DialogSheets wrapper method implementations
//

#pragma implementation_key(4332)
inline _variant_t XL95::DialogSheets::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4333)
inline _variant_t XL95::DialogSheets::Add ( const _variant_t & Before, const _variant_t & After, const _variant_t & Count ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Before, &After, &Count);
    return _variant_t(_result, false);
}

#pragma implementation_key(4334)
inline _variant_t XL95::DialogSheets::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4335)
inline _variant_t XL95::DialogSheets::Copy ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4336)
inline _variant_t XL95::DialogSheets::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4337)
inline _variant_t XL95::DialogSheets::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4338)
inline _variant_t XL95::DialogSheets::Move ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4339)
inline _variant_t XL95::DialogSheets::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(4340)
inline _variant_t XL95::DialogSheets::PrintPreview ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4341)
inline _variant_t XL95::DialogSheets::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(4342)
inline _variant_t XL95::DialogSheets::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4343)
inline void XL95::DialogSheets::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(4344)
inline _variant_t XL95::DialogSheets::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4345)
inline void XL95::DialogSheets::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4346)
inline _variant_t XL95::DialogSheets::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4347)
inline void XL95::DialogSheets::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4348)
inline _variant_t XL95::DialogSheets::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4349)
inline void XL95::DialogSheets::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

//
// dispinterface PageSetup wrapper method implementations
//

#pragma implementation_key(4350)
inline _variant_t XL95::PageSetup::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4351)
inline _variant_t XL95::PageSetup::GetBlackAndWhite ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4352)
inline void XL95::PageSetup::PutBlackAndWhite ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f1, VT_VARIANT, &_val);
}

#pragma implementation_key(4353)
inline _variant_t XL95::PageSetup::GetBottomMargin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ea, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4354)
inline void XL95::PageSetup::PutBottomMargin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ea, VT_VARIANT, &_val);
}

#pragma implementation_key(4355)
inline _variant_t XL95::PageSetup::GetCenterFooter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4356)
inline void XL95::PageSetup::PutCenterFooter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f2, VT_VARIANT, &_val);
}

#pragma implementation_key(4357)
inline _variant_t XL95::PageSetup::GetCenterHeader ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4358)
inline void XL95::PageSetup::PutCenterHeader ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f3, VT_VARIANT, &_val);
}

#pragma implementation_key(4359)
inline _variant_t XL95::PageSetup::GetCenterHorizontally ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ed, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4360)
inline void XL95::PageSetup::PutCenterHorizontally ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ed, VT_VARIANT, &_val);
}

#pragma implementation_key(4361)
inline _variant_t XL95::PageSetup::GetCenterVertically ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ee, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4362)
inline void XL95::PageSetup::PutCenterVertically ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ee, VT_VARIANT, &_val);
}

#pragma implementation_key(4363)
inline _variant_t XL95::PageSetup::GetChartSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f4, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4364)
inline void XL95::PageSetup::PutChartSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f4, VT_VARIANT, &_val);
}

#pragma implementation_key(4365)
inline _variant_t XL95::PageSetup::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4366)
inline void XL95::PageSetup::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4367)
inline _variant_t XL95::PageSetup::GetDraft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3fc, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4368)
inline void XL95::PageSetup::PutDraft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3fc, VT_VARIANT, &_val);
}

#pragma implementation_key(4369)
inline _variant_t XL95::PageSetup::GetFirstPageNumber ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4370)
inline void XL95::PageSetup::PutFirstPageNumber ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f0, VT_VARIANT, &_val);
}

#pragma implementation_key(4371)
inline _variant_t XL95::PageSetup::GetFitToPagesTall ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4372)
inline void XL95::PageSetup::PutFitToPagesTall ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f5, VT_VARIANT, &_val);
}

#pragma implementation_key(4373)
inline _variant_t XL95::PageSetup::GetFitToPagesWide ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4374)
inline void XL95::PageSetup::PutFitToPagesWide ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f6, VT_VARIANT, &_val);
}

#pragma implementation_key(4375)
inline _variant_t XL95::PageSetup::GetFooterMargin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4376)
inline void XL95::PageSetup::PutFooterMargin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f7, VT_VARIANT, &_val);
}

#pragma implementation_key(4377)
inline _variant_t XL95::PageSetup::GetHeaderMargin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4378)
inline void XL95::PageSetup::PutHeaderMargin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f8, VT_VARIANT, &_val);
}

#pragma implementation_key(4379)
inline _variant_t XL95::PageSetup::GetLeftFooter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4380)
inline void XL95::PageSetup::PutLeftFooter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f9, VT_VARIANT, &_val);
}

#pragma implementation_key(4381)
inline _variant_t XL95::PageSetup::GetLeftHeader ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3fa, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4382)
inline void XL95::PageSetup::PutLeftHeader ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3fa, VT_VARIANT, &_val);
}

#pragma implementation_key(4383)
inline _variant_t XL95::PageSetup::GetLeftMargin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4384)
inline void XL95::PageSetup::PutLeftMargin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e7, VT_VARIANT, &_val);
}

#pragma implementation_key(4385)
inline _variant_t XL95::PageSetup::GetOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4386)
inline void XL95::PageSetup::PutOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc0, VT_VARIANT, &_val);
}

#pragma implementation_key(4387)
inline _variant_t XL95::PageSetup::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4388)
inline void XL95::PageSetup::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(4389)
inline _variant_t XL95::PageSetup::GetPaperSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ef, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4390)
inline void XL95::PageSetup::PutPaperSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ef, VT_VARIANT, &_val);
}

#pragma implementation_key(4391)
inline _variant_t XL95::PageSetup::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4392)
inline void XL95::PageSetup::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4393)
inline _variant_t XL95::PageSetup::GetPrintArea ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3fb, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4394)
inline void XL95::PageSetup::PutPrintArea ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3fb, VT_VARIANT, &_val);
}

#pragma implementation_key(4395)
inline _variant_t XL95::PageSetup::GetPrintGridlines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ec, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4396)
inline void XL95::PageSetup::PutPrintGridlines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ec, VT_VARIANT, &_val);
}

#pragma implementation_key(4397)
inline _variant_t XL95::PageSetup::GetPrintHeadings ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3eb, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4398)
inline void XL95::PageSetup::PutPrintHeadings ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3eb, VT_VARIANT, &_val);
}

#pragma implementation_key(4399)
inline _variant_t XL95::PageSetup::GetPrintNotes ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3fd, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4400)
inline void XL95::PageSetup::PutPrintNotes ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3fd, VT_VARIANT, &_val);
}

#pragma implementation_key(4401)
inline _variant_t XL95::PageSetup::GetPrintQuality ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3fe, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4402)
inline void XL95::PageSetup::PutPrintQuality ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3fe, VT_VARIANT, &_val);
}

#pragma implementation_key(4403)
inline _variant_t XL95::PageSetup::GetPrintTitleColumns ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ff, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4404)
inline void XL95::PageSetup::PutPrintTitleColumns ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ff, VT_VARIANT, &_val);
}

#pragma implementation_key(4405)
inline _variant_t XL95::PageSetup::GetPrintTitleRows ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x400, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4406)
inline void XL95::PageSetup::PutPrintTitleRows ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x400, VT_VARIANT, &_val);
}

#pragma implementation_key(4407)
inline _variant_t XL95::PageSetup::GetRightFooter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x401, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4408)
inline void XL95::PageSetup::PutRightFooter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x401, VT_VARIANT, &_val);
}

#pragma implementation_key(4409)
inline _variant_t XL95::PageSetup::GetRightHeader ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x402, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4410)
inline void XL95::PageSetup::PutRightHeader ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x402, VT_VARIANT, &_val);
}

#pragma implementation_key(4411)
inline _variant_t XL95::PageSetup::GetRightMargin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4412)
inline void XL95::PageSetup::PutRightMargin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e8, VT_VARIANT, &_val);
}

#pragma implementation_key(4413)
inline _variant_t XL95::PageSetup::GetTopMargin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4414)
inline void XL95::PageSetup::PutTopMargin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e9, VT_VARIANT, &_val);
}

#pragma implementation_key(4415)
inline _variant_t XL95::PageSetup::GetZoom ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x297, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4416)
inline void XL95::PageSetup::PutZoom ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x297, VT_VARIANT, &_val);
}

//
// dispinterface Mailer wrapper method implementations
//

#pragma implementation_key(4417)
inline _variant_t XL95::Mailer::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4418)
inline _variant_t XL95::Mailer::GetBCCRecipients ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3d7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4419)
inline void XL95::Mailer::PutBCCRecipients ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3d7, VT_VARIANT, &_val);
}

#pragma implementation_key(4420)
inline _variant_t XL95::Mailer::GetCCRecipients ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3d6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4421)
inline void XL95::Mailer::PutCCRecipients ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3d6, VT_VARIANT, &_val);
}

#pragma implementation_key(4422)
inline _variant_t XL95::Mailer::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4423)
inline void XL95::Mailer::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4424)
inline _variant_t XL95::Mailer::GetEnclosures ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3d8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4425)
inline void XL95::Mailer::PutEnclosures ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3d8, VT_VARIANT, &_val);
}

#pragma implementation_key(4426)
inline _variant_t XL95::Mailer::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4427)
inline void XL95::Mailer::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4428)
inline _variant_t XL95::Mailer::GetReceived ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3da, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4429)
inline void XL95::Mailer::PutReceived ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3da, VT_VARIANT, &_val);
}

#pragma implementation_key(4430)
inline _variant_t XL95::Mailer::GetSendDateTime ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3db, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4431)
inline void XL95::Mailer::PutSendDateTime ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3db, VT_VARIANT, &_val);
}

#pragma implementation_key(4432)
inline _variant_t XL95::Mailer::GetSender ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3dc, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4433)
inline void XL95::Mailer::PutSender ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3dc, VT_VARIANT, &_val);
}

#pragma implementation_key(4434)
inline _variant_t XL95::Mailer::GetSubject ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4435)
inline void XL95::Mailer::PutSubject ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b9, VT_VARIANT, &_val);
}

#pragma implementation_key(4436)
inline _variant_t XL95::Mailer::GetToRecipients ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3d5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4437)
inline void XL95::Mailer::PutToRecipients ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3d5, VT_VARIANT, &_val);
}

#pragma implementation_key(4438)
inline _variant_t XL95::Mailer::GetWhichAddress ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3ce, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4439)
inline void XL95::Mailer::PutWhichAddress ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3ce, VT_VARIANT, &_val);
}

//
// dispinterface Font wrapper method implementations
//

#pragma implementation_key(4440)
inline _variant_t XL95::Font::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4441)
inline _variant_t XL95::Font::GetBackground ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb4, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4442)
inline void XL95::Font::PutBackground ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb4, VT_VARIANT, &_val);
}

#pragma implementation_key(4443)
inline _variant_t XL95::Font::GetBold ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x60, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4444)
inline void XL95::Font::PutBold ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x60, VT_VARIANT, &_val);
}

#pragma implementation_key(4445)
inline _variant_t XL95::Font::GetColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x63, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4446)
inline void XL95::Font::PutColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x63, VT_VARIANT, &_val);
}

#pragma implementation_key(4447)
inline _variant_t XL95::Font::GetColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x61, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4448)
inline void XL95::Font::PutColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x61, VT_VARIANT, &_val);
}

#pragma implementation_key(4449)
inline _variant_t XL95::Font::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4450)
inline void XL95::Font::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4451)
inline _variant_t XL95::Font::GetFontStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4452)
inline void XL95::Font::PutFontStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb1, VT_VARIANT, &_val);
}

#pragma implementation_key(4453)
inline _variant_t XL95::Font::GetItalic ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x65, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4454)
inline void XL95::Font::PutItalic ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x65, VT_VARIANT, &_val);
}

#pragma implementation_key(4455)
inline _variant_t XL95::Font::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4456)
inline void XL95::Font::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4457)
inline _variant_t XL95::Font::GetOutlineFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xdd, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4458)
inline void XL95::Font::PutOutlineFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xdd, VT_VARIANT, &_val);
}

#pragma implementation_key(4459)
inline _variant_t XL95::Font::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4460)
inline void XL95::Font::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4461)
inline _variant_t XL95::Font::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4462)
inline void XL95::Font::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(4463)
inline _variant_t XL95::Font::GetSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x68, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4464)
inline void XL95::Font::PutSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x68, VT_VARIANT, &_val);
}

#pragma implementation_key(4465)
inline _variant_t XL95::Font::GetStrikethrough ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x69, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4466)
inline void XL95::Font::PutStrikethrough ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x69, VT_VARIANT, &_val);
}

#pragma implementation_key(4467)
inline _variant_t XL95::Font::GetSubscript ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4468)
inline void XL95::Font::PutSubscript ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb3, VT_VARIANT, &_val);
}

#pragma implementation_key(4469)
inline _variant_t XL95::Font::GetSuperscript ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4470)
inline void XL95::Font::PutSuperscript ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb2, VT_VARIANT, &_val);
}

#pragma implementation_key(4471)
inline _variant_t XL95::Font::GetUnderline ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4472)
inline void XL95::Font::PutUnderline ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6a, VT_VARIANT, &_val);
}

//
// dispinterface Border wrapper method implementations
//

#pragma implementation_key(4473)
inline _variant_t XL95::Border::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4474)
inline _variant_t XL95::Border::GetColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x63, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4475)
inline void XL95::Border::PutColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x63, VT_VARIANT, &_val);
}

#pragma implementation_key(4476)
inline _variant_t XL95::Border::GetColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x61, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4477)
inline void XL95::Border::PutColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x61, VT_VARIANT, &_val);
}

#pragma implementation_key(4478)
inline _variant_t XL95::Border::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4479)
inline void XL95::Border::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4480)
inline _variant_t XL95::Border::GetLineStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x77, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4481)
inline void XL95::Border::PutLineStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x77, VT_VARIANT, &_val);
}

#pragma implementation_key(4482)
inline _variant_t XL95::Border::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4483)
inline void XL95::Border::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4484)
inline _variant_t XL95::Border::GetWeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x78, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4485)
inline void XL95::Border::PutWeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x78, VT_VARIANT, &_val);
}

//
// dispinterface Borders wrapper method implementations
//

#pragma implementation_key(4486)
inline _variant_t XL95::Borders::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4487)
inline _variant_t XL95::Borders::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4488)
inline _variant_t XL95::Borders::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4489)
inline _variant_t XL95::Borders::GetColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x63, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4490)
inline void XL95::Borders::PutColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x63, VT_VARIANT, &_val);
}

#pragma implementation_key(4491)
inline _variant_t XL95::Borders::GetColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x61, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4492)
inline void XL95::Borders::PutColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x61, VT_VARIANT, &_val);
}

#pragma implementation_key(4493)
inline _variant_t XL95::Borders::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4494)
inline void XL95::Borders::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(4495)
inline _variant_t XL95::Borders::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4496)
inline void XL95::Borders::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4497)
inline _variant_t XL95::Borders::GetLineStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x77, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4498)
inline void XL95::Borders::PutLineStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x77, VT_VARIANT, &_val);
}

#pragma implementation_key(4499)
inline _variant_t XL95::Borders::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4500)
inline void XL95::Borders::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4501)
inline _variant_t XL95::Borders::GetValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4502)
inline void XL95::Borders::PutValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6, VT_VARIANT, &_val);
}

#pragma implementation_key(4503)
inline _variant_t XL95::Borders::GetWeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x78, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4504)
inline void XL95::Borders::PutWeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x78, VT_VARIANT, &_val);
}

//
// dispinterface Corners wrapper method implementations
//

#pragma implementation_key(4505)
inline _variant_t XL95::Corners::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4506)
inline _variant_t XL95::Corners::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4507)
inline _variant_t XL95::Corners::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4508)
inline void XL95::Corners::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4509)
inline _variant_t XL95::Corners::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4510)
inline void XL95::Corners::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4511)
inline _variant_t XL95::Corners::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4512)
inline void XL95::Corners::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface SeriesLines wrapper method implementations
//

#pragma implementation_key(4513)
inline _variant_t XL95::SeriesLines::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4514)
inline _variant_t XL95::SeriesLines::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4515)
inline _variant_t XL95::SeriesLines::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4516)
inline _variant_t XL95::SeriesLines::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4517)
inline void XL95::SeriesLines::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4518)
inline _variant_t XL95::SeriesLines::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4519)
inline void XL95::SeriesLines::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4520)
inline _variant_t XL95::SeriesLines::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4521)
inline void XL95::SeriesLines::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4522)
inline _variant_t XL95::SeriesLines::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4523)
inline void XL95::SeriesLines::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface HiLoLines wrapper method implementations
//

#pragma implementation_key(4524)
inline _variant_t XL95::HiLoLines::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4525)
inline _variant_t XL95::HiLoLines::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4526)
inline _variant_t XL95::HiLoLines::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4527)
inline _variant_t XL95::HiLoLines::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4528)
inline void XL95::HiLoLines::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4529)
inline _variant_t XL95::HiLoLines::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4530)
inline void XL95::HiLoLines::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4531)
inline _variant_t XL95::HiLoLines::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4532)
inline void XL95::HiLoLines::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4533)
inline _variant_t XL95::HiLoLines::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4534)
inline void XL95::HiLoLines::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Gridlines wrapper method implementations
//

#pragma implementation_key(4535)
inline _variant_t XL95::Gridlines::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4536)
inline _variant_t XL95::Gridlines::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4537)
inline _variant_t XL95::Gridlines::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4538)
inline _variant_t XL95::Gridlines::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4539)
inline void XL95::Gridlines::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4540)
inline _variant_t XL95::Gridlines::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4541)
inline void XL95::Gridlines::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4542)
inline _variant_t XL95::Gridlines::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4543)
inline void XL95::Gridlines::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4544)
inline _variant_t XL95::Gridlines::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4545)
inline void XL95::Gridlines::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface DropLines wrapper method implementations
//

#pragma implementation_key(4546)
inline _variant_t XL95::DropLines::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4547)
inline _variant_t XL95::DropLines::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4548)
inline _variant_t XL95::DropLines::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4549)
inline _variant_t XL95::DropLines::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4550)
inline void XL95::DropLines::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4551)
inline _variant_t XL95::DropLines::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4552)
inline void XL95::DropLines::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4553)
inline _variant_t XL95::DropLines::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4554)
inline void XL95::DropLines::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4555)
inline _variant_t XL95::DropLines::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4556)
inline void XL95::DropLines::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface ErrorBars wrapper method implementations
//

#pragma implementation_key(4557)
inline _variant_t XL95::ErrorBars::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4558)
inline _variant_t XL95::ErrorBars::ClearFormats ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4559)
inline _variant_t XL95::ErrorBars::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4560)
inline _variant_t XL95::ErrorBars::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4561)
inline _variant_t XL95::ErrorBars::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4562)
inline void XL95::ErrorBars::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4563)
inline _variant_t XL95::ErrorBars::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4564)
inline void XL95::ErrorBars::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4565)
inline _variant_t XL95::ErrorBars::GetEndStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x464, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4566)
inline void XL95::ErrorBars::PutEndStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x464, VT_VARIANT, &_val);
}

#pragma implementation_key(4567)
inline _variant_t XL95::ErrorBars::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4568)
inline void XL95::ErrorBars::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4569)
inline _variant_t XL95::ErrorBars::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4570)
inline void XL95::ErrorBars::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface UpBars wrapper method implementations
//

#pragma implementation_key(4571)
inline _variant_t XL95::UpBars::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4572)
inline _variant_t XL95::UpBars::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4573)
inline _variant_t XL95::UpBars::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4574)
inline _variant_t XL95::UpBars::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4575)
inline void XL95::UpBars::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4576)
inline _variant_t XL95::UpBars::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4577)
inline void XL95::UpBars::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4578)
inline _variant_t XL95::UpBars::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4579)
inline void XL95::UpBars::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(4580)
inline _variant_t XL95::UpBars::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4581)
inline void XL95::UpBars::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4582)
inline _variant_t XL95::UpBars::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4583)
inline void XL95::UpBars::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface DownBars wrapper method implementations
//

#pragma implementation_key(4584)
inline _variant_t XL95::DownBars::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4585)
inline _variant_t XL95::DownBars::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4586)
inline _variant_t XL95::DownBars::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4587)
inline _variant_t XL95::DownBars::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4588)
inline void XL95::DownBars::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4589)
inline _variant_t XL95::DownBars::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4590)
inline void XL95::DownBars::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4591)
inline _variant_t XL95::DownBars::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4592)
inline void XL95::DownBars::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(4593)
inline _variant_t XL95::DownBars::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4594)
inline void XL95::DownBars::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4595)
inline _variant_t XL95::DownBars::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4596)
inline void XL95::DownBars::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface ChartTitle wrapper method implementations
//

#pragma implementation_key(4597)
inline _variant_t XL95::ChartTitle::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4598)
inline _variant_t XL95::ChartTitle::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(4599)
inline _variant_t XL95::ChartTitle::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4600)
inline _variant_t XL95::ChartTitle::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4601)
inline _variant_t XL95::ChartTitle::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4602)
inline void XL95::ChartTitle::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4603)
inline _variant_t XL95::ChartTitle::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4604)
inline void XL95::ChartTitle::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(4605)
inline _variant_t XL95::ChartTitle::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4606)
inline void XL95::ChartTitle::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4607)
inline _variant_t XL95::ChartTitle::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4608)
inline void XL95::ChartTitle::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(4609)
inline _variant_t XL95::ChartTitle::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4610)
inline void XL95::ChartTitle::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(4611)
inline _variant_t XL95::ChartTitle::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4612)
inline void XL95::ChartTitle::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(4613)
inline _variant_t XL95::ChartTitle::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4614)
inline void XL95::ChartTitle::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(4615)
inline _variant_t XL95::ChartTitle::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4616)
inline void XL95::ChartTitle::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4617)
inline _variant_t XL95::ChartTitle::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4618)
inline void XL95::ChartTitle::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(4619)
inline _variant_t XL95::ChartTitle::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4620)
inline void XL95::ChartTitle::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4621)
inline _variant_t XL95::ChartTitle::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4622)
inline void XL95::ChartTitle::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(4623)
inline _variant_t XL95::ChartTitle::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4624)
inline void XL95::ChartTitle::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(4625)
inline _variant_t XL95::ChartTitle::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4626)
inline void XL95::ChartTitle::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(4627)
inline _variant_t XL95::ChartTitle::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4628)
inline void XL95::ChartTitle::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

//
// dispinterface AxisTitle wrapper method implementations
//

#pragma implementation_key(4629)
inline _variant_t XL95::AxisTitle::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4630)
inline _variant_t XL95::AxisTitle::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(4631)
inline _variant_t XL95::AxisTitle::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4632)
inline _variant_t XL95::AxisTitle::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4633)
inline _variant_t XL95::AxisTitle::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4634)
inline void XL95::AxisTitle::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4635)
inline _variant_t XL95::AxisTitle::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4636)
inline void XL95::AxisTitle::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(4637)
inline _variant_t XL95::AxisTitle::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4638)
inline void XL95::AxisTitle::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4639)
inline _variant_t XL95::AxisTitle::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4640)
inline void XL95::AxisTitle::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(4641)
inline _variant_t XL95::AxisTitle::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4642)
inline void XL95::AxisTitle::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(4643)
inline _variant_t XL95::AxisTitle::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4644)
inline void XL95::AxisTitle::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(4645)
inline _variant_t XL95::AxisTitle::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4646)
inline void XL95::AxisTitle::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(4647)
inline _variant_t XL95::AxisTitle::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4648)
inline void XL95::AxisTitle::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4649)
inline _variant_t XL95::AxisTitle::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4650)
inline void XL95::AxisTitle::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(4651)
inline _variant_t XL95::AxisTitle::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4652)
inline void XL95::AxisTitle::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4653)
inline _variant_t XL95::AxisTitle::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4654)
inline void XL95::AxisTitle::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(4655)
inline _variant_t XL95::AxisTitle::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4656)
inline void XL95::AxisTitle::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(4657)
inline _variant_t XL95::AxisTitle::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4658)
inline void XL95::AxisTitle::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(4659)
inline _variant_t XL95::AxisTitle::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4660)
inline void XL95::AxisTitle::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

//
// dispinterface Floor wrapper method implementations
//

#pragma implementation_key(4661)
inline _variant_t XL95::Floor::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4662)
inline _variant_t XL95::Floor::ClearFormats ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4663)
inline _variant_t XL95::Floor::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4664)
inline _variant_t XL95::Floor::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4665)
inline void XL95::Floor::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4666)
inline _variant_t XL95::Floor::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4667)
inline void XL95::Floor::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4668)
inline _variant_t XL95::Floor::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4669)
inline void XL95::Floor::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(4670)
inline _variant_t XL95::Floor::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4671)
inline void XL95::Floor::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4672)
inline _variant_t XL95::Floor::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4673)
inline void XL95::Floor::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Walls wrapper method implementations
//

#pragma implementation_key(4674)
inline _variant_t XL95::Walls::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4675)
inline _variant_t XL95::Walls::ClearFormats ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4676)
inline _variant_t XL95::Walls::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4677)
inline _variant_t XL95::Walls::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4678)
inline void XL95::Walls::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4679)
inline _variant_t XL95::Walls::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4680)
inline void XL95::Walls::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4681)
inline _variant_t XL95::Walls::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4682)
inline void XL95::Walls::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(4683)
inline _variant_t XL95::Walls::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4684)
inline void XL95::Walls::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4685)
inline _variant_t XL95::Walls::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4686)
inline void XL95::Walls::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface PlotArea wrapper method implementations
//

#pragma implementation_key(4687)
inline _variant_t XL95::PlotArea::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4688)
inline _variant_t XL95::PlotArea::ClearFormats ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4689)
inline _variant_t XL95::PlotArea::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4690)
inline _variant_t XL95::PlotArea::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4691)
inline void XL95::PlotArea::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4692)
inline _variant_t XL95::PlotArea::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4693)
inline void XL95::PlotArea::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4694)
inline _variant_t XL95::PlotArea::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4695)
inline void XL95::PlotArea::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(4696)
inline _variant_t XL95::PlotArea::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4697)
inline void XL95::PlotArea::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(4698)
inline _variant_t XL95::PlotArea::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4699)
inline void XL95::PlotArea::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(4700)
inline _variant_t XL95::PlotArea::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4701)
inline void XL95::PlotArea::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4702)
inline _variant_t XL95::PlotArea::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4703)
inline void XL95::PlotArea::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4704)
inline _variant_t XL95::PlotArea::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4705)
inline void XL95::PlotArea::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(4706)
inline _variant_t XL95::PlotArea::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4707)
inline void XL95::PlotArea::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

//
// dispinterface ChartArea wrapper method implementations
//

#pragma implementation_key(4708)
inline _variant_t XL95::ChartArea::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4709)
inline _variant_t XL95::ChartArea::Clear ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4710)
inline _variant_t XL95::ChartArea::ClearContents ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4711)
inline _variant_t XL95::ChartArea::ClearFormats ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4712)
inline _variant_t XL95::ChartArea::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4713)
inline _variant_t XL95::ChartArea::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4714)
inline _variant_t XL95::ChartArea::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4715)
inline void XL95::ChartArea::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4716)
inline _variant_t XL95::ChartArea::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4717)
inline void XL95::ChartArea::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4718)
inline _variant_t XL95::ChartArea::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4719)
inline void XL95::ChartArea::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(4720)
inline _variant_t XL95::ChartArea::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4721)
inline void XL95::ChartArea::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(4722)
inline _variant_t XL95::ChartArea::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4723)
inline void XL95::ChartArea::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(4724)
inline _variant_t XL95::ChartArea::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4725)
inline void XL95::ChartArea::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(4726)
inline _variant_t XL95::ChartArea::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4727)
inline void XL95::ChartArea::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4728)
inline _variant_t XL95::ChartArea::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4729)
inline void XL95::ChartArea::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4730)
inline _variant_t XL95::ChartArea::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4731)
inline void XL95::ChartArea::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(4732)
inline _variant_t XL95::ChartArea::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4733)
inline void XL95::ChartArea::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(4734)
inline _variant_t XL95::ChartArea::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4735)
inline void XL95::ChartArea::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

//
// dispinterface Legend wrapper method implementations
//

#pragma implementation_key(4736)
inline _variant_t XL95::Legend::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4737)
inline _variant_t XL95::Legend::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4738)
inline _variant_t XL95::Legend::LegendEntries ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xad, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4739)
inline _variant_t XL95::Legend::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4740)
inline _variant_t XL95::Legend::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4741)
inline void XL95::Legend::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(4742)
inline _variant_t XL95::Legend::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4743)
inline void XL95::Legend::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4744)
inline _variant_t XL95::Legend::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4745)
inline void XL95::Legend::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(4746)
inline _variant_t XL95::Legend::GetHeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4747)
inline void XL95::Legend::PutHeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7b, VT_VARIANT, &_val);
}

#pragma implementation_key(4748)
inline _variant_t XL95::Legend::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4749)
inline void XL95::Legend::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(4750)
inline _variant_t XL95::Legend::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4751)
inline void XL95::Legend::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(4752)
inline _variant_t XL95::Legend::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4753)
inline void XL95::Legend::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4754)
inline _variant_t XL95::Legend::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4755)
inline void XL95::Legend::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4756)
inline _variant_t XL95::Legend::GetPosition ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x85, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4757)
inline void XL95::Legend::PutPosition ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x85, VT_VARIANT, &_val);
}

#pragma implementation_key(4758)
inline _variant_t XL95::Legend::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4759)
inline void XL95::Legend::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(4760)
inline _variant_t XL95::Legend::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4761)
inline void XL95::Legend::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(4762)
inline _variant_t XL95::Legend::GetWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4763)
inline void XL95::Legend::PutWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7a, VT_VARIANT, &_val);
}

//
// dispinterface TickLabels wrapper method implementations
//

#pragma implementation_key(4764)
inline _variant_t XL95::TickLabels::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4765)
inline _variant_t XL95::TickLabels::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4766)
inline _variant_t XL95::TickLabels::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4767)
inline _variant_t XL95::TickLabels::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4768)
inline void XL95::TickLabels::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4769)
inline _variant_t XL95::TickLabels::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4770)
inline void XL95::TickLabels::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(4771)
inline _variant_t XL95::TickLabels::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4772)
inline void XL95::TickLabels::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4773)
inline _variant_t XL95::TickLabels::GetNumberFormat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4774)
inline void XL95::TickLabels::PutNumberFormat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc1, VT_VARIANT, &_val);
}

#pragma implementation_key(4775)
inline _variant_t XL95::TickLabels::GetNumberFormatLinked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4776)
inline void XL95::TickLabels::PutNumberFormatLinked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc2, VT_VARIANT, &_val);
}

#pragma implementation_key(4777)
inline _variant_t XL95::TickLabels::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4778)
inline void XL95::TickLabels::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(4779)
inline _variant_t XL95::TickLabels::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4780)
inline void XL95::TickLabels::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Chart wrapper method implementations
//

#pragma implementation_key(4781)
inline _variant_t XL95::Chart::Activate ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4782)
inline _variant_t XL95::Chart::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4783)
inline _variant_t XL95::Chart::ApplyDataLabels ( const _variant_t & Type, const _variant_t & LegendKey ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x97, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Type, &LegendKey);
    return _variant_t(_result, false);
}

#pragma implementation_key(4784)
inline _variant_t XL95::Chart::Arcs ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2f8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4785)
inline _variant_t XL95::Chart::AreaGroups ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4786)
inline _variant_t XL95::Chart::AutoFormat ( const _variant_t & Gallery, const _variant_t & Format ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Gallery, &Format);
    return _variant_t(_result, false);
}

#pragma implementation_key(4787)
inline _variant_t XL95::Chart::Axes ( const _variant_t & Type, const _variant_t & AxisGroup ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Type, &AxisGroup);
    return _variant_t(_result, false);
}

#pragma implementation_key(4788)
inline _variant_t XL95::Chart::BarGroups ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4789)
inline _variant_t XL95::Chart::Buttons ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x22d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4790)
inline _variant_t XL95::Chart::ChartGroups ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4791)
inline _variant_t XL95::Chart::ChartObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x424, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4792)
inline _variant_t XL95::Chart::ChartWizard ( const _variant_t & Source, const _variant_t & Gallery, const _variant_t & Format, const _variant_t & PlotBy, const _variant_t & CategoryLabels, const _variant_t & SeriesLabels, const _variant_t & HasLegend, const _variant_t & Title, const _variant_t & CategoryTitle, const _variant_t & ValueTitle, const _variant_t & ExtraTitle ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xc4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Source, &Gallery, &Format, &PlotBy, &CategoryLabels, &SeriesLabels, &HasLegend, &Title, &CategoryTitle, &ValueTitle, &ExtraTitle);
    return _variant_t(_result, false);
}

#pragma implementation_key(4793)
inline _variant_t XL95::Chart::CheckBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x338, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4794)
inline _variant_t XL95::Chart::CheckSpelling ( const _variant_t & CustomDictionary, const _variant_t & IgnoreUppercase, const _variant_t & AlwaysSuggest ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1f9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &CustomDictionary, &IgnoreUppercase, &AlwaysSuggest);
    return _variant_t(_result, false);
}

#pragma implementation_key(4795)
inline _variant_t XL95::Chart::ColumnGroups ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4796)
inline _variant_t XL95::Chart::Copy ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4797)
inline _variant_t XL95::Chart::CopyPicture ( const _variant_t & Appearance, const _variant_t & Format, const _variant_t & Size ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Appearance, &Format, &Size);
    return _variant_t(_result, false);
}

#pragma implementation_key(4798)
inline _variant_t XL95::Chart::CreatePublisher ( const _variant_t & Edition, const _variant_t & Appearance, const _variant_t & Size, const _variant_t & ContainsPICT, const _variant_t & ContainsBIFF, const _variant_t & ContainsRTF, const _variant_t & ContainsVALU ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1ca, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Edition, &Appearance, &Size, &ContainsPICT, &ContainsBIFF, &ContainsRTF, &ContainsVALU);
    return _variant_t(_result, false);
}

#pragma implementation_key(4799)
inline _variant_t XL95::Chart::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4800)
inline _variant_t XL95::Chart::Deselect ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x460, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4801)
inline _variant_t XL95::Chart::DoughnutGroups ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4802)
inline _variant_t XL95::Chart::DrawingObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4803)
inline _variant_t XL95::Chart::Drawings ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x304, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4804)
inline _variant_t XL95::Chart::DropDowns ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x344, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4805)
inline _variant_t XL95::Chart::_Evaluate ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(4806)
inline _variant_t XL95::Chart::Evaluate ( const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xfffffffb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(4807)
inline _variant_t XL95::Chart::GroupBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x342, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4808)
inline _variant_t XL95::Chart::GroupObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x459, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4809)
inline _variant_t XL95::Chart::Labels ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x349, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4810)
inline _variant_t XL95::Chart::LineGroups ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4811)
inline _variant_t XL95::Chart::Lines ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2ff, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4812)
inline _variant_t XL95::Chart::ListBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x340, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4813)
inline _variant_t XL95::Chart::Move ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4814)
inline _variant_t XL95::Chart::OLEObjects ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x31f, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4815)
inline _variant_t XL95::Chart::OptionButtons ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x33a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4816)
inline _variant_t XL95::Chart::Ovals ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x321, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4817)
inline _variant_t XL95::Chart::Paste ( const _variant_t & Type ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Type);
    return _variant_t(_result, false);
}

#pragma implementation_key(4818)
inline _variant_t XL95::Chart::Pictures ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x303, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4819)
inline _variant_t XL95::Chart::PieGroups ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4820)
inline _variant_t XL95::Chart::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(4821)
inline _variant_t XL95::Chart::PrintPreview ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4822)
inline _variant_t XL95::Chart::Protect ( const _variant_t & Password, const _variant_t & DrawingObjects, const _variant_t & Contents, const _variant_t & Scenarios, const _variant_t & UserInterfaceOnly ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &Password, &DrawingObjects, &Contents, &Scenarios, &UserInterfaceOnly);
    return _variant_t(_result, false);
}

#pragma implementation_key(4823)
inline _variant_t XL95::Chart::RadarGroups ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4824)
inline _variant_t XL95::Chart::Rectangles ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x306, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4825)
inline _variant_t XL95::Chart::SaveAs ( const _variant_t & Filename, const _variant_t & FileFormat, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ReadOnlyRecommended, const _variant_t & CreateBackup ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11c, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c\x080c\x080c", &Filename, &FileFormat, &Password, &WriteResPassword, &ReadOnlyRecommended, &CreateBackup);
    return _variant_t(_result, false);
}

#pragma implementation_key(4826)
inline _variant_t XL95::Chart::ScrollBars ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x33e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4827)
inline _variant_t XL95::Chart::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(4828)
inline _variant_t XL95::Chart::SeriesCollection ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x44, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4829)
inline _variant_t XL95::Chart::SetBackgroundPicture ( const _variant_t & Filename ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x4a4, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Filename);
    return _variant_t(_result, false);
}

#pragma implementation_key(4830)
inline _variant_t XL95::Chart::Spinners ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x346, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4831)
inline _variant_t XL95::Chart::TextBoxes ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x309, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4832)
inline _variant_t XL95::Chart::Unprotect ( const _variant_t & Password ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x11d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Password);
    return _variant_t(_result, false);
}

#pragma implementation_key(4833)
inline _variant_t XL95::Chart::XYGroups ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4834)
inline _variant_t XL95::Chart::GetArea3DGroup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x11, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4835)
inline void XL95::Chart::PutArea3DGroup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x11, VT_VARIANT, &_val);
}

#pragma implementation_key(4836)
inline _variant_t XL95::Chart::GetAutoScaling ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4837)
inline void XL95::Chart::PutAutoScaling ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6b, VT_VARIANT, &_val);
}

#pragma implementation_key(4838)
inline _variant_t XL95::Chart::GetBar3DGroup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x12, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4839)
inline void XL95::Chart::PutBar3DGroup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x12, VT_VARIANT, &_val);
}

#pragma implementation_key(4840)
inline _variant_t XL95::Chart::GetChartArea ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x50, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4841)
inline void XL95::Chart::PutChartArea ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x50, VT_VARIANT, &_val);
}

#pragma implementation_key(4842)
inline _variant_t XL95::Chart::GetChartTitle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x51, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4843)
inline void XL95::Chart::PutChartTitle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x51, VT_VARIANT, &_val);
}

#pragma implementation_key(4844)
inline _variant_t XL95::Chart::GetColumn3DGroup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x13, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4845)
inline void XL95::Chart::PutColumn3DGroup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x13, VT_VARIANT, &_val);
}

#pragma implementation_key(4846)
inline _variant_t XL95::Chart::GetCorners ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4847)
inline void XL95::Chart::PutCorners ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4f, VT_VARIANT, &_val);
}

#pragma implementation_key(4848)
inline _variant_t XL95::Chart::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4849)
inline void XL95::Chart::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4850)
inline _variant_t XL95::Chart::GetDepthPercent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x30, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4851)
inline void XL95::Chart::PutDepthPercent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x30, VT_VARIANT, &_val);
}

#pragma implementation_key(4852)
inline _variant_t XL95::Chart::GetDisplayBlanksAs ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x5d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4853)
inline void XL95::Chart::PutDisplayBlanksAs ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x5d, VT_VARIANT, &_val);
}

#pragma implementation_key(4854)
inline _variant_t XL95::Chart::GetElevation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x31, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4855)
inline void XL95::Chart::PutElevation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x31, VT_VARIANT, &_val);
}

#pragma implementation_key(4856)
inline _variant_t XL95::Chart::GetFloor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x53, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4857)
inline void XL95::Chart::PutFloor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x53, VT_VARIANT, &_val);
}

#pragma implementation_key(4858)
inline _variant_t XL95::Chart::GetGapDepth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x32, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4859)
inline void XL95::Chart::PutGapDepth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x32, VT_VARIANT, &_val);
}

#pragma implementation_key(4860)
inline _variant_t XL95::Chart::GetHasAxis ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x34, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4861)
inline void XL95::Chart::PutHasAxis ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x34, VT_VARIANT, &_val);
}

#pragma implementation_key(4862)
inline _variant_t XL95::Chart::GetHasLegend ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x35, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4863)
inline void XL95::Chart::PutHasLegend ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x35, VT_VARIANT, &_val);
}

#pragma implementation_key(4864)
inline _variant_t XL95::Chart::GetHasTitle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x36, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4865)
inline void XL95::Chart::PutHasTitle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x36, VT_VARIANT, &_val);
}

#pragma implementation_key(4866)
inline _variant_t XL95::Chart::GetHeightPercent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x37, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4867)
inline void XL95::Chart::PutHeightPercent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x37, VT_VARIANT, &_val);
}

#pragma implementation_key(4868)
inline _variant_t XL95::Chart::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4869)
inline void XL95::Chart::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(4870)
inline _variant_t XL95::Chart::GetLegend ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x54, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4871)
inline void XL95::Chart::PutLegend ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x54, VT_VARIANT, &_val);
}

#pragma implementation_key(4872)
inline _variant_t XL95::Chart::GetLine3DGroup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x14, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4873)
inline void XL95::Chart::PutLine3DGroup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x14, VT_VARIANT, &_val);
}

#pragma implementation_key(4874)
inline _variant_t XL95::Chart::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4875)
inline void XL95::Chart::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(4876)
inline _variant_t XL95::Chart::GetNext ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4877)
inline void XL95::Chart::PutNext ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f6, VT_VARIANT, &_val);
}

#pragma implementation_key(4878)
inline _variant_t XL95::Chart::GetOnDoubleClick ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x274, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4879)
inline void XL95::Chart::PutOnDoubleClick ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x274, VT_VARIANT, &_val);
}

#pragma implementation_key(4880)
inline _variant_t XL95::Chart::GetOnSheetActivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x407, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4881)
inline void XL95::Chart::PutOnSheetActivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x407, VT_VARIANT, &_val);
}

#pragma implementation_key(4882)
inline _variant_t XL95::Chart::GetOnSheetDeactivate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x439, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4883)
inline void XL95::Chart::PutOnSheetDeactivate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x439, VT_VARIANT, &_val);
}

#pragma implementation_key(4884)
inline _variant_t XL95::Chart::GetPageSetup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4885)
inline void XL95::Chart::PutPageSetup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e6, VT_VARIANT, &_val);
}

#pragma implementation_key(4886)
inline _variant_t XL95::Chart::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4887)
inline void XL95::Chart::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4888)
inline _variant_t XL95::Chart::GetPerspective ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x39, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4889)
inline void XL95::Chart::PutPerspective ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x39, VT_VARIANT, &_val);
}

#pragma implementation_key(4890)
inline _variant_t XL95::Chart::GetPie3DGroup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x15, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4891)
inline void XL95::Chart::PutPie3DGroup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x15, VT_VARIANT, &_val);
}

#pragma implementation_key(4892)
inline _variant_t XL95::Chart::GetPlotArea ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x55, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4893)
inline void XL95::Chart::PutPlotArea ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x55, VT_VARIANT, &_val);
}

#pragma implementation_key(4894)
inline _variant_t XL95::Chart::GetPlotVisibleOnly ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x5c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4895)
inline void XL95::Chart::PutPlotVisibleOnly ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x5c, VT_VARIANT, &_val);
}

#pragma implementation_key(4896)
inline _variant_t XL95::Chart::GetPrevious ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4897)
inline void XL95::Chart::PutPrevious ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f7, VT_VARIANT, &_val);
}

#pragma implementation_key(4898)
inline _variant_t XL95::Chart::GetProtectContents ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x124, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4899)
inline void XL95::Chart::PutProtectContents ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x124, VT_VARIANT, &_val);
}

#pragma implementation_key(4900)
inline _variant_t XL95::Chart::GetProtectDrawingObjects ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x125, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4901)
inline void XL95::Chart::PutProtectDrawingObjects ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x125, VT_VARIANT, &_val);
}

#pragma implementation_key(4902)
inline _variant_t XL95::Chart::GetProtectionMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x487, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4903)
inline void XL95::Chart::PutProtectionMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x487, VT_VARIANT, &_val);
}

#pragma implementation_key(4904)
inline _variant_t XL95::Chart::GetRightAngleAxes ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4905)
inline void XL95::Chart::PutRightAngleAxes ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3a, VT_VARIANT, &_val);
}

#pragma implementation_key(4906)
inline _variant_t XL95::Chart::GetRotation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4907)
inline void XL95::Chart::PutRotation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b, VT_VARIANT, &_val);
}

#pragma implementation_key(4908)
inline _variant_t XL95::Chart::GetSizeWithWindow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x5e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4909)
inline void XL95::Chart::PutSizeWithWindow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x5e, VT_VARIANT, &_val);
}

#pragma implementation_key(4910)
inline _variant_t XL95::Chart::GetSubType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4911)
inline void XL95::Chart::PutSubType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6d, VT_VARIANT, &_val);
}

#pragma implementation_key(4912)
inline _variant_t XL95::Chart::GetSurfaceGroup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x16, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4913)
inline void XL95::Chart::PutSurfaceGroup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x16, VT_VARIANT, &_val);
}

#pragma implementation_key(4914)
inline _variant_t XL95::Chart::GetType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4915)
inline void XL95::Chart::PutType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6c, VT_VARIANT, &_val);
}

#pragma implementation_key(4916)
inline _variant_t XL95::Chart::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4917)
inline void XL95::Chart::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

#pragma implementation_key(4918)
inline _variant_t XL95::Chart::GetWalls ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x56, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4919)
inline void XL95::Chart::PutWalls ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x56, VT_VARIANT, &_val);
}

#pragma implementation_key(4920)
inline _variant_t XL95::Chart::GetWallsAndGridlines2D ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xd2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4921)
inline void XL95::Chart::PutWallsAndGridlines2D ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xd2, VT_VARIANT, &_val);
}

//
// dispinterface Charts wrapper method implementations
//

#pragma implementation_key(4922)
inline _variant_t XL95::Charts::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4923)
inline _variant_t XL95::Charts::Add ( const _variant_t & Before, const _variant_t & After, const _variant_t & Count ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c", &Before, &After, &Count);
    return _variant_t(_result, false);
}

#pragma implementation_key(4924)
inline _variant_t XL95::Charts::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4925)
inline _variant_t XL95::Charts::Copy ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4926)
inline _variant_t XL95::Charts::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4927)
inline _variant_t XL95::Charts::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4928)
inline _variant_t XL95::Charts::Move ( const _variant_t & Before, const _variant_t & After ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x27d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Before, &After);
    return _variant_t(_result, false);
}

#pragma implementation_key(4929)
inline _variant_t XL95::Charts::PrintOut ( const _variant_t & From, const _variant_t & To, const _variant_t & Copies, const _variant_t & Preview, const _variant_t & ActivePrinter, const _variant_t & PrintToFile, const _variant_t & Collate ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x389, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &From, &To, &Copies, &Preview, &ActivePrinter, &PrintToFile, &Collate);
    return _variant_t(_result, false);
}

#pragma implementation_key(4930)
inline _variant_t XL95::Charts::PrintPreview ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x119, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4931)
inline _variant_t XL95::Charts::Select ( const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(4932)
inline _variant_t XL95::Charts::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4933)
inline void XL95::Charts::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(4934)
inline _variant_t XL95::Charts::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4935)
inline void XL95::Charts::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4936)
inline _variant_t XL95::Charts::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4937)
inline void XL95::Charts::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4938)
inline _variant_t XL95::Charts::GetVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4939)
inline void XL95::Charts::PutVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22e, VT_VARIANT, &_val);
}

//
// dispinterface ChartGroup wrapper method implementations
//

#pragma implementation_key(4940)
inline _variant_t XL95::ChartGroup::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4941)
inline _variant_t XL95::ChartGroup::SeriesCollection ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x44, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4942)
inline _variant_t XL95::ChartGroup::GetAxisGroup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4943)
inline void XL95::ChartGroup::PutAxisGroup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2f, VT_VARIANT, &_val);
}

#pragma implementation_key(4944)
inline _variant_t XL95::ChartGroup::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4945)
inline void XL95::ChartGroup::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4946)
inline _variant_t XL95::ChartGroup::GetDoughnutHoleSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x466, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4947)
inline void XL95::ChartGroup::PutDoughnutHoleSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x466, VT_VARIANT, &_val);
}

#pragma implementation_key(4948)
inline _variant_t XL95::ChartGroup::GetDownBars ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4949)
inline void XL95::ChartGroup::PutDownBars ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8d, VT_VARIANT, &_val);
}

#pragma implementation_key(4950)
inline _variant_t XL95::ChartGroup::GetDropLines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4951)
inline void XL95::ChartGroup::PutDropLines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8e, VT_VARIANT, &_val);
}

#pragma implementation_key(4952)
inline _variant_t XL95::ChartGroup::GetFirstSliceAngle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4953)
inline void XL95::ChartGroup::PutFirstSliceAngle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3f, VT_VARIANT, &_val);
}

#pragma implementation_key(4954)
inline _variant_t XL95::ChartGroup::GetGapWidth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x33, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4955)
inline void XL95::ChartGroup::PutGapWidth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x33, VT_VARIANT, &_val);
}

#pragma implementation_key(4956)
inline _variant_t XL95::ChartGroup::GetHasDropLines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4957)
inline void XL95::ChartGroup::PutHasDropLines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3d, VT_VARIANT, &_val);
}

#pragma implementation_key(4958)
inline _variant_t XL95::ChartGroup::GetHasHiLoLines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4959)
inline void XL95::ChartGroup::PutHasHiLoLines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3e, VT_VARIANT, &_val);
}

#pragma implementation_key(4960)
inline _variant_t XL95::ChartGroup::GetHasRadarAxisLabels ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x40, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4961)
inline void XL95::ChartGroup::PutHasRadarAxisLabels ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x40, VT_VARIANT, &_val);
}

#pragma implementation_key(4962)
inline _variant_t XL95::ChartGroup::GetHasSeriesLines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x41, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4963)
inline void XL95::ChartGroup::PutHasSeriesLines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x41, VT_VARIANT, &_val);
}

#pragma implementation_key(4964)
inline _variant_t XL95::ChartGroup::GetHasUpDownBars ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x42, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4965)
inline void XL95::ChartGroup::PutHasUpDownBars ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x42, VT_VARIANT, &_val);
}

#pragma implementation_key(4966)
inline _variant_t XL95::ChartGroup::GetHiLoLines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4967)
inline void XL95::ChartGroup::PutHiLoLines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8f, VT_VARIANT, &_val);
}

#pragma implementation_key(4968)
inline _variant_t XL95::ChartGroup::GetOverlap ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x38, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4969)
inline void XL95::ChartGroup::PutOverlap ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x38, VT_VARIANT, &_val);
}

#pragma implementation_key(4970)
inline _variant_t XL95::ChartGroup::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4971)
inline void XL95::ChartGroup::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(4972)
inline _variant_t XL95::ChartGroup::GetRadarAxisLabels ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x90, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4973)
inline void XL95::ChartGroup::PutRadarAxisLabels ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x90, VT_VARIANT, &_val);
}

#pragma implementation_key(4974)
inline _variant_t XL95::ChartGroup::GetSeriesLines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x91, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4975)
inline void XL95::ChartGroup::PutSeriesLines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x91, VT_VARIANT, &_val);
}

#pragma implementation_key(4976)
inline _variant_t XL95::ChartGroup::GetSubType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4977)
inline void XL95::ChartGroup::PutSubType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6d, VT_VARIANT, &_val);
}

#pragma implementation_key(4978)
inline _variant_t XL95::ChartGroup::GetType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4979)
inline void XL95::ChartGroup::PutType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6c, VT_VARIANT, &_val);
}

#pragma implementation_key(4980)
inline _variant_t XL95::ChartGroup::GetUpBars ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4981)
inline void XL95::ChartGroup::PutUpBars ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8c, VT_VARIANT, &_val);
}

#pragma implementation_key(4982)
inline _variant_t XL95::ChartGroup::GetVaryByCategories ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4983)
inline void XL95::ChartGroup::PutVaryByCategories ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3c, VT_VARIANT, &_val);
}

//
// dispinterface ChartGroups wrapper method implementations
//

#pragma implementation_key(4984)
inline _variant_t XL95::ChartGroups::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4985)
inline _variant_t XL95::ChartGroups::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4986)
inline _variant_t XL95::ChartGroups::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(4987)
inline _variant_t XL95::ChartGroups::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4988)
inline void XL95::ChartGroups::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(4989)
inline _variant_t XL95::ChartGroups::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4990)
inline void XL95::ChartGroups::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(4991)
inline _variant_t XL95::ChartGroups::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4992)
inline void XL95::ChartGroups::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Axis wrapper method implementations
//

#pragma implementation_key(4993)
inline _variant_t XL95::Axis::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4994)
inline _variant_t XL95::Axis::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4995)
inline _variant_t XL95::Axis::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4996)
inline _variant_t XL95::Axis::GetAxisBetweenCategories ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4997)
inline void XL95::Axis::PutAxisBetweenCategories ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2d, VT_VARIANT, &_val);
}

#pragma implementation_key(4998)
inline _variant_t XL95::Axis::GetAxisGroup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4999)
inline void XL95::Axis::PutAxisGroup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2f, VT_VARIANT, &_val);
}

#pragma implementation_key(5000)
inline _variant_t XL95::Axis::GetAxisTitle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x52, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5001)
inline void XL95::Axis::PutAxisTitle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x52, VT_VARIANT, &_val);
}

#pragma implementation_key(5002)
inline _variant_t XL95::Axis::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5003)
inline void XL95::Axis::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(5004)
inline _variant_t XL95::Axis::GetCategoryNames ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x9c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5005)
inline void XL95::Axis::PutCategoryNames ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x9c, VT_VARIANT, &_val);
}

#pragma implementation_key(5006)
inline _variant_t XL95::Axis::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5007)
inline void XL95::Axis::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5008)
inline _variant_t XL95::Axis::GetCrosses ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5009)
inline void XL95::Axis::PutCrosses ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2a, VT_VARIANT, &_val);
}

#pragma implementation_key(5010)
inline _variant_t XL95::Axis::GetCrossesAt ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5011)
inline void XL95::Axis::PutCrossesAt ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2b, VT_VARIANT, &_val);
}

#pragma implementation_key(5012)
inline _variant_t XL95::Axis::GetHasMajorGridlines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x18, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5013)
inline void XL95::Axis::PutHasMajorGridlines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x18, VT_VARIANT, &_val);
}

#pragma implementation_key(5014)
inline _variant_t XL95::Axis::GetHasMinorGridlines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x19, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5015)
inline void XL95::Axis::PutHasMinorGridlines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x19, VT_VARIANT, &_val);
}

#pragma implementation_key(5016)
inline _variant_t XL95::Axis::GetHasTitle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x36, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5017)
inline void XL95::Axis::PutHasTitle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x36, VT_VARIANT, &_val);
}

#pragma implementation_key(5018)
inline _variant_t XL95::Axis::GetMajorGridlines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x59, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5019)
inline void XL95::Axis::PutMajorGridlines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x59, VT_VARIANT, &_val);
}

#pragma implementation_key(5020)
inline _variant_t XL95::Axis::GetMajorTickMark ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5021)
inline void XL95::Axis::PutMajorTickMark ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1a, VT_VARIANT, &_val);
}

#pragma implementation_key(5022)
inline _variant_t XL95::Axis::GetMajorUnit ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x25, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5023)
inline void XL95::Axis::PutMajorUnit ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x25, VT_VARIANT, &_val);
}

#pragma implementation_key(5024)
inline _variant_t XL95::Axis::GetMajorUnitIsAuto ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x26, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5025)
inline void XL95::Axis::PutMajorUnitIsAuto ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x26, VT_VARIANT, &_val);
}

#pragma implementation_key(5026)
inline _variant_t XL95::Axis::GetMaximumScale ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x23, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5027)
inline void XL95::Axis::PutMaximumScale ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x23, VT_VARIANT, &_val);
}

#pragma implementation_key(5028)
inline _variant_t XL95::Axis::GetMaximumScaleIsAuto ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x24, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5029)
inline void XL95::Axis::PutMaximumScaleIsAuto ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x24, VT_VARIANT, &_val);
}

#pragma implementation_key(5030)
inline _variant_t XL95::Axis::GetMinimumScale ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x21, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5031)
inline void XL95::Axis::PutMinimumScale ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x21, VT_VARIANT, &_val);
}

#pragma implementation_key(5032)
inline _variant_t XL95::Axis::GetMinimumScaleIsAuto ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x22, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5033)
inline void XL95::Axis::PutMinimumScaleIsAuto ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x22, VT_VARIANT, &_val);
}

#pragma implementation_key(5034)
inline _variant_t XL95::Axis::GetMinorGridlines ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x5a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5035)
inline void XL95::Axis::PutMinorGridlines ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x5a, VT_VARIANT, &_val);
}

#pragma implementation_key(5036)
inline _variant_t XL95::Axis::GetMinorTickMark ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5037)
inline void XL95::Axis::PutMinorTickMark ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1b, VT_VARIANT, &_val);
}

#pragma implementation_key(5038)
inline _variant_t XL95::Axis::GetMinorUnit ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5039)
inline void XL95::Axis::PutMinorUnit ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27, VT_VARIANT, &_val);
}

#pragma implementation_key(5040)
inline _variant_t XL95::Axis::GetMinorUnitIsAuto ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5041)
inline void XL95::Axis::PutMinorUnitIsAuto ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28, VT_VARIANT, &_val);
}

#pragma implementation_key(5042)
inline _variant_t XL95::Axis::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5043)
inline void XL95::Axis::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(5044)
inline _variant_t XL95::Axis::GetReversePlotOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5045)
inline void XL95::Axis::PutReversePlotOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2c, VT_VARIANT, &_val);
}

#pragma implementation_key(5046)
inline _variant_t XL95::Axis::GetScaleType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x29, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5047)
inline void XL95::Axis::PutScaleType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x29, VT_VARIANT, &_val);
}

#pragma implementation_key(5048)
inline _variant_t XL95::Axis::GetTickLabelPosition ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5049)
inline void XL95::Axis::PutTickLabelPosition ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1c, VT_VARIANT, &_val);
}

#pragma implementation_key(5050)
inline _variant_t XL95::Axis::GetTickLabels ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x5b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5051)
inline void XL95::Axis::PutTickLabels ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x5b, VT_VARIANT, &_val);
}

#pragma implementation_key(5052)
inline _variant_t XL95::Axis::GetTickLabelSpacing ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5053)
inline void XL95::Axis::PutTickLabelSpacing ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1d, VT_VARIANT, &_val);
}

#pragma implementation_key(5054)
inline _variant_t XL95::Axis::GetTickMarkSpacing ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5055)
inline void XL95::Axis::PutTickMarkSpacing ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1f, VT_VARIANT, &_val);
}

#pragma implementation_key(5056)
inline _variant_t XL95::Axis::GetType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5057)
inline void XL95::Axis::PutType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6c, VT_VARIANT, &_val);
}

//
// dispinterface Axes wrapper method implementations
//

#pragma implementation_key(5058)
inline _variant_t XL95::Axes::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5059)
inline _variant_t XL95::Axes::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5060)
inline _variant_t XL95::Axes::Item ( const _variant_t & Type, const _variant_t & AxisGroup ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c", &Type, &AxisGroup);
    return _variant_t(_result, false);
}

#pragma implementation_key(5061)
inline _variant_t XL95::Axes::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5062)
inline void XL95::Axes::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(5063)
inline _variant_t XL95::Axes::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5064)
inline void XL95::Axes::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5065)
inline _variant_t XL95::Axes::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5066)
inline void XL95::Axes::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface DataLabel wrapper method implementations
//

#pragma implementation_key(5067)
inline _variant_t XL95::DataLabel::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5068)
inline _variant_t XL95::DataLabel::Characters ( const _variant_t & Start, const _variant_t & Length ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x25b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Start, &Length);
    return _variant_t(_result, false);
}

#pragma implementation_key(5069)
inline _variant_t XL95::DataLabel::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5070)
inline _variant_t XL95::DataLabel::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5071)
inline _variant_t XL95::DataLabel::GetAutoText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x87, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5072)
inline void XL95::DataLabel::PutAutoText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x87, VT_VARIANT, &_val);
}

#pragma implementation_key(5073)
inline _variant_t XL95::DataLabel::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5074)
inline void XL95::DataLabel::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(5075)
inline _variant_t XL95::DataLabel::GetCaption ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5076)
inline void XL95::DataLabel::PutCaption ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8b, VT_VARIANT, &_val);
}

#pragma implementation_key(5077)
inline _variant_t XL95::DataLabel::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5078)
inline void XL95::DataLabel::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5079)
inline _variant_t XL95::DataLabel::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5080)
inline void XL95::DataLabel::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(5081)
inline _variant_t XL95::DataLabel::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5082)
inline void XL95::DataLabel::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(5083)
inline _variant_t XL95::DataLabel::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5084)
inline void XL95::DataLabel::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(5085)
inline _variant_t XL95::DataLabel::GetLeft ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5086)
inline void XL95::DataLabel::PutLeft ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7f, VT_VARIANT, &_val);
}

#pragma implementation_key(5087)
inline _variant_t XL95::DataLabel::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5088)
inline void XL95::DataLabel::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(5089)
inline _variant_t XL95::DataLabel::GetNumberFormat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5090)
inline void XL95::DataLabel::PutNumberFormat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc1, VT_VARIANT, &_val);
}

#pragma implementation_key(5091)
inline _variant_t XL95::DataLabel::GetNumberFormatLinked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5092)
inline void XL95::DataLabel::PutNumberFormatLinked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc2, VT_VARIANT, &_val);
}

#pragma implementation_key(5093)
inline _variant_t XL95::DataLabel::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5094)
inline void XL95::DataLabel::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(5095)
inline _variant_t XL95::DataLabel::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5096)
inline void XL95::DataLabel::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(5097)
inline _variant_t XL95::DataLabel::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5098)
inline void XL95::DataLabel::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(5099)
inline _variant_t XL95::DataLabel::GetShowLegendKey ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xab, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5100)
inline void XL95::DataLabel::PutShowLegendKey ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xab, VT_VARIANT, &_val);
}

#pragma implementation_key(5101)
inline _variant_t XL95::DataLabel::GetText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x8a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5102)
inline void XL95::DataLabel::PutText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x8a, VT_VARIANT, &_val);
}

#pragma implementation_key(5103)
inline _variant_t XL95::DataLabel::GetTop ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x7e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5104)
inline void XL95::DataLabel::PutTop ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x7e, VT_VARIANT, &_val);
}

#pragma implementation_key(5105)
inline _variant_t XL95::DataLabel::GetType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5106)
inline void XL95::DataLabel::PutType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6c, VT_VARIANT, &_val);
}

#pragma implementation_key(5107)
inline _variant_t XL95::DataLabel::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5108)
inline void XL95::DataLabel::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

//
// dispinterface DataLabels wrapper method implementations
//

#pragma implementation_key(5109)
inline _variant_t XL95::DataLabels::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5110)
inline _variant_t XL95::DataLabels::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5111)
inline _variant_t XL95::DataLabels::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5112)
inline _variant_t XL95::DataLabels::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(5113)
inline _variant_t XL95::DataLabels::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5114)
inline _variant_t XL95::DataLabels::GetAutoText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x87, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5115)
inline void XL95::DataLabels::PutAutoText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x87, VT_VARIANT, &_val);
}

#pragma implementation_key(5116)
inline _variant_t XL95::DataLabels::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5117)
inline void XL95::DataLabels::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(5118)
inline _variant_t XL95::DataLabels::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5119)
inline void XL95::DataLabels::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(5120)
inline _variant_t XL95::DataLabels::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5121)
inline void XL95::DataLabels::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5122)
inline _variant_t XL95::DataLabels::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5123)
inline void XL95::DataLabels::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(5124)
inline _variant_t XL95::DataLabels::GetHorizontalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x88, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5125)
inline void XL95::DataLabels::PutHorizontalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x88, VT_VARIANT, &_val);
}

#pragma implementation_key(5126)
inline _variant_t XL95::DataLabels::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5127)
inline void XL95::DataLabels::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(5128)
inline _variant_t XL95::DataLabels::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5129)
inline void XL95::DataLabels::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(5130)
inline _variant_t XL95::DataLabels::GetNumberFormat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5131)
inline void XL95::DataLabels::PutNumberFormat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc1, VT_VARIANT, &_val);
}

#pragma implementation_key(5132)
inline _variant_t XL95::DataLabels::GetNumberFormatLinked ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5133)
inline void XL95::DataLabels::PutNumberFormatLinked ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc2, VT_VARIANT, &_val);
}

#pragma implementation_key(5134)
inline _variant_t XL95::DataLabels::GetOrientation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x86, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5135)
inline void XL95::DataLabels::PutOrientation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x86, VT_VARIANT, &_val);
}

#pragma implementation_key(5136)
inline _variant_t XL95::DataLabels::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5137)
inline void XL95::DataLabels::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(5138)
inline _variant_t XL95::DataLabels::GetShadow ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x67, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5139)
inline void XL95::DataLabels::PutShadow ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x67, VT_VARIANT, &_val);
}

#pragma implementation_key(5140)
inline _variant_t XL95::DataLabels::GetShowLegendKey ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xab, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5141)
inline void XL95::DataLabels::PutShowLegendKey ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xab, VT_VARIANT, &_val);
}

#pragma implementation_key(5142)
inline _variant_t XL95::DataLabels::GetType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5143)
inline void XL95::DataLabels::PutType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6c, VT_VARIANT, &_val);
}

#pragma implementation_key(5144)
inline _variant_t XL95::DataLabels::GetVerticalAlignment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x89, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5145)
inline void XL95::DataLabels::PutVerticalAlignment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x89, VT_VARIANT, &_val);
}

//
// dispinterface Point wrapper method implementations
//

#pragma implementation_key(5146)
inline _variant_t XL95::Point::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5147)
inline _variant_t XL95::Point::ApplyDataLabels ( const _variant_t & Type, const _variant_t & LegendKey ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x97, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Type, &LegendKey);
    return _variant_t(_result, false);
}

#pragma implementation_key(5148)
inline _variant_t XL95::Point::ClearFormats ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5149)
inline _variant_t XL95::Point::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5150)
inline _variant_t XL95::Point::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5151)
inline _variant_t XL95::Point::Paste ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5152)
inline _variant_t XL95::Point::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5153)
inline _variant_t XL95::Point::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5154)
inline void XL95::Point::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(5155)
inline _variant_t XL95::Point::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5156)
inline void XL95::Point::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5157)
inline _variant_t XL95::Point::GetDataLabel ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x9e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5158)
inline void XL95::Point::PutDataLabel ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x9e, VT_VARIANT, &_val);
}

#pragma implementation_key(5159)
inline _variant_t XL95::Point::GetExplosion ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5160)
inline void XL95::Point::PutExplosion ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb6, VT_VARIANT, &_val);
}

#pragma implementation_key(5161)
inline _variant_t XL95::Point::GetHasDataLabel ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5162)
inline void XL95::Point::PutHasDataLabel ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4d, VT_VARIANT, &_val);
}

#pragma implementation_key(5163)
inline _variant_t XL95::Point::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5164)
inline void XL95::Point::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(5165)
inline _variant_t XL95::Point::GetInvertIfNegative ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x84, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5166)
inline void XL95::Point::PutInvertIfNegative ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x84, VT_VARIANT, &_val);
}

#pragma implementation_key(5167)
inline _variant_t XL95::Point::GetMarkerBackgroundColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x49, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5168)
inline void XL95::Point::PutMarkerBackgroundColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x49, VT_VARIANT, &_val);
}

#pragma implementation_key(5169)
inline _variant_t XL95::Point::GetMarkerBackgroundColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5170)
inline void XL95::Point::PutMarkerBackgroundColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4a, VT_VARIANT, &_val);
}

#pragma implementation_key(5171)
inline _variant_t XL95::Point::GetMarkerForegroundColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5172)
inline void XL95::Point::PutMarkerForegroundColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4b, VT_VARIANT, &_val);
}

#pragma implementation_key(5173)
inline _variant_t XL95::Point::GetMarkerForegroundColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5174)
inline void XL95::Point::PutMarkerForegroundColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4c, VT_VARIANT, &_val);
}

#pragma implementation_key(5175)
inline _variant_t XL95::Point::GetMarkerStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x48, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5176)
inline void XL95::Point::PutMarkerStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x48, VT_VARIANT, &_val);
}

#pragma implementation_key(5177)
inline _variant_t XL95::Point::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5178)
inline void XL95::Point::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(5179)
inline _variant_t XL95::Point::GetPictureType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xa1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5180)
inline void XL95::Point::PutPictureType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xa1, VT_VARIANT, &_val);
}

#pragma implementation_key(5181)
inline _variant_t XL95::Point::GetPictureUnit ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xa2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5182)
inline void XL95::Point::PutPictureUnit ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xa2, VT_VARIANT, &_val);
}

//
// dispinterface Points wrapper method implementations
//

#pragma implementation_key(5183)
inline _variant_t XL95::Points::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5184)
inline _variant_t XL95::Points::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5185)
inline _variant_t XL95::Points::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(5186)
inline _variant_t XL95::Points::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5187)
inline void XL95::Points::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(5188)
inline _variant_t XL95::Points::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5189)
inline void XL95::Points::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5190)
inline _variant_t XL95::Points::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5191)
inline void XL95::Points::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface Series wrapper method implementations
//

#pragma implementation_key(5192)
inline _variant_t XL95::Series::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5193)
inline _variant_t XL95::Series::ApplyDataLabels ( const _variant_t & Type, const _variant_t & LegendKey ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x97, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &Type, &LegendKey);
    return _variant_t(_result, false);
}

#pragma implementation_key(5194)
inline _variant_t XL95::Series::ClearFormats ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5195)
inline _variant_t XL95::Series::Copy ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x227, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5196)
inline _variant_t XL95::Series::DataLabels ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x9d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(5197)
inline _variant_t XL95::Series::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5198)
inline _variant_t XL95::Series::ErrorBar ( const _variant_t & Direction, const _variant_t & Include, const _variant_t & Type, const _variant_t & Amount, const _variant_t & MinusValues ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x98, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c\x000c\x080c\x080c", &Direction, &Include, &Type, &Amount, &MinusValues);
    return _variant_t(_result, false);
}

#pragma implementation_key(5199)
inline _variant_t XL95::Series::Paste ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5200)
inline _variant_t XL95::Series::Points ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x46, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(5201)
inline _variant_t XL95::Series::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5202)
inline _variant_t XL95::Series::Trendlines ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x9a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(5203)
inline _variant_t XL95::Series::GetAxisGroup ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5204)
inline void XL95::Series::PutAxisGroup ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2f, VT_VARIANT, &_val);
}

#pragma implementation_key(5205)
inline _variant_t XL95::Series::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5206)
inline void XL95::Series::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(5207)
inline _variant_t XL95::Series::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5208)
inline void XL95::Series::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5209)
inline _variant_t XL95::Series::GetErrorBars ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x9f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5210)
inline void XL95::Series::PutErrorBars ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x9f, VT_VARIANT, &_val);
}

#pragma implementation_key(5211)
inline _variant_t XL95::Series::GetExplosion ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5212)
inline void XL95::Series::PutExplosion ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb6, VT_VARIANT, &_val);
}

#pragma implementation_key(5213)
inline _variant_t XL95::Series::GetFormula ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x105, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5214)
inline void XL95::Series::PutFormula ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x105, VT_VARIANT, &_val);
}

#pragma implementation_key(5215)
inline _variant_t XL95::Series::GetFormulaLocal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x107, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5216)
inline void XL95::Series::PutFormulaLocal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x107, VT_VARIANT, &_val);
}

#pragma implementation_key(5217)
inline _variant_t XL95::Series::GetFormulaR1C1 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x108, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5218)
inline void XL95::Series::PutFormulaR1C1 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x108, VT_VARIANT, &_val);
}

#pragma implementation_key(5219)
inline _variant_t XL95::Series::GetFormulaR1C1Local ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x109, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5220)
inline void XL95::Series::PutFormulaR1C1Local ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x109, VT_VARIANT, &_val);
}

#pragma implementation_key(5221)
inline _variant_t XL95::Series::GetHasDataLabels ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5222)
inline void XL95::Series::PutHasDataLabels ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4e, VT_VARIANT, &_val);
}

#pragma implementation_key(5223)
inline _variant_t XL95::Series::GetHasErrorBars ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xa0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5224)
inline void XL95::Series::PutHasErrorBars ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xa0, VT_VARIANT, &_val);
}

#pragma implementation_key(5225)
inline _variant_t XL95::Series::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5226)
inline void XL95::Series::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(5227)
inline _variant_t XL95::Series::GetInvertIfNegative ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x84, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5228)
inline void XL95::Series::PutInvertIfNegative ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x84, VT_VARIANT, &_val);
}

#pragma implementation_key(5229)
inline _variant_t XL95::Series::GetMarkerBackgroundColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x49, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5230)
inline void XL95::Series::PutMarkerBackgroundColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x49, VT_VARIANT, &_val);
}

#pragma implementation_key(5231)
inline _variant_t XL95::Series::GetMarkerBackgroundColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5232)
inline void XL95::Series::PutMarkerBackgroundColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4a, VT_VARIANT, &_val);
}

#pragma implementation_key(5233)
inline _variant_t XL95::Series::GetMarkerForegroundColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5234)
inline void XL95::Series::PutMarkerForegroundColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4b, VT_VARIANT, &_val);
}

#pragma implementation_key(5235)
inline _variant_t XL95::Series::GetMarkerForegroundColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5236)
inline void XL95::Series::PutMarkerForegroundColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4c, VT_VARIANT, &_val);
}

#pragma implementation_key(5237)
inline _variant_t XL95::Series::GetMarkerStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x48, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5238)
inline void XL95::Series::PutMarkerStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x48, VT_VARIANT, &_val);
}

#pragma implementation_key(5239)
inline _variant_t XL95::Series::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5240)
inline void XL95::Series::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(5241)
inline _variant_t XL95::Series::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5242)
inline void XL95::Series::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(5243)
inline _variant_t XL95::Series::GetPictureType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xa1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5244)
inline void XL95::Series::PutPictureType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xa1, VT_VARIANT, &_val);
}

#pragma implementation_key(5245)
inline _variant_t XL95::Series::GetPictureUnit ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xa2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5246)
inline void XL95::Series::PutPictureUnit ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xa2, VT_VARIANT, &_val);
}

#pragma implementation_key(5247)
inline _variant_t XL95::Series::GetPlotOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xe4, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5248)
inline void XL95::Series::PutPlotOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xe4, VT_VARIANT, &_val);
}

#pragma implementation_key(5249)
inline _variant_t XL95::Series::GetSmooth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xa3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5250)
inline void XL95::Series::PutSmooth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xa3, VT_VARIANT, &_val);
}

#pragma implementation_key(5251)
inline _variant_t XL95::Series::GetType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5252)
inline void XL95::Series::PutType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6c, VT_VARIANT, &_val);
}

#pragma implementation_key(5253)
inline _variant_t XL95::Series::GetValues ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xa4, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5254)
inline void XL95::Series::PutValues ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xa4, VT_VARIANT, &_val);
}

#pragma implementation_key(5255)
inline _variant_t XL95::Series::GetXValues ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x457, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5256)
inline void XL95::Series::PutXValues ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x457, VT_VARIANT, &_val);
}

//
// dispinterface SeriesCollection wrapper method implementations
//

#pragma implementation_key(5257)
inline _variant_t XL95::SeriesCollection::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5258)
inline _variant_t XL95::SeriesCollection::Add ( const _variant_t & Source, const _variant_t & Rowcol, const _variant_t & SeriesLabels, const _variant_t & CategoryLabels, const _variant_t & Replace ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c\x080c\x080c", &Source, &Rowcol, &SeriesLabels, &CategoryLabels, &Replace);
    return _variant_t(_result, false);
}

#pragma implementation_key(5259)
inline _variant_t XL95::SeriesCollection::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5260)
inline _variant_t XL95::SeriesCollection::Extend ( const _variant_t & Source, const _variant_t & Rowcol, const _variant_t & CategoryLabels ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xe3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x080c\x080c", &Source, &Rowcol, &CategoryLabels);
    return _variant_t(_result, false);
}

#pragma implementation_key(5261)
inline _variant_t XL95::SeriesCollection::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(5262)
inline _variant_t XL95::SeriesCollection::Paste ( const _variant_t & Rowcol, const _variant_t & SeriesLabels, const _variant_t & CategoryLabels, const _variant_t & Replace, const _variant_t & NewSeries ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xd3, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &Rowcol, &SeriesLabels, &CategoryLabels, &Replace, &NewSeries);
    return _variant_t(_result, false);
}

#pragma implementation_key(5263)
inline _variant_t XL95::SeriesCollection::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5264)
inline void XL95::SeriesCollection::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(5265)
inline _variant_t XL95::SeriesCollection::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5266)
inline void XL95::SeriesCollection::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5267)
inline _variant_t XL95::SeriesCollection::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5268)
inline void XL95::SeriesCollection::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface LegendEntry wrapper method implementations
//

#pragma implementation_key(5269)
inline _variant_t XL95::LegendEntry::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5270)
inline _variant_t XL95::LegendEntry::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5271)
inline _variant_t XL95::LegendEntry::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5272)
inline _variant_t XL95::LegendEntry::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5273)
inline void XL95::LegendEntry::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5274)
inline _variant_t XL95::LegendEntry::GetFont ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x92, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5275)
inline void XL95::LegendEntry::PutFont ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x92, VT_VARIANT, &_val);
}

#pragma implementation_key(5276)
inline _variant_t XL95::LegendEntry::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5277)
inline void XL95::LegendEntry::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(5278)
inline _variant_t XL95::LegendEntry::GetLegendKey ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xae, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5279)
inline void XL95::LegendEntry::PutLegendKey ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xae, VT_VARIANT, &_val);
}

#pragma implementation_key(5280)
inline _variant_t XL95::LegendEntry::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5281)
inline void XL95::LegendEntry::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface LegendEntries wrapper method implementations
//

#pragma implementation_key(5282)
inline _variant_t XL95::LegendEntries::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5283)
inline _variant_t XL95::LegendEntries::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5284)
inline _variant_t XL95::LegendEntries::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(5285)
inline _variant_t XL95::LegendEntries::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5286)
inline void XL95::LegendEntries::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(5287)
inline _variant_t XL95::LegendEntries::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5288)
inline void XL95::LegendEntries::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5289)
inline _variant_t XL95::LegendEntries::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5290)
inline void XL95::LegendEntries::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface LegendKey wrapper method implementations
//

#pragma implementation_key(5291)
inline _variant_t XL95::LegendKey::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5292)
inline _variant_t XL95::LegendKey::ClearFormats ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5293)
inline _variant_t XL95::LegendKey::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5294)
inline _variant_t XL95::LegendKey::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5295)
inline _variant_t XL95::LegendKey::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5296)
inline void XL95::LegendKey::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(5297)
inline _variant_t XL95::LegendKey::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5298)
inline void XL95::LegendKey::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5299)
inline _variant_t XL95::LegendKey::GetInterior ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x81, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5300)
inline void XL95::LegendKey::PutInterior ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x81, VT_VARIANT, &_val);
}

#pragma implementation_key(5301)
inline _variant_t XL95::LegendKey::GetInvertIfNegative ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x84, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5302)
inline void XL95::LegendKey::PutInvertIfNegative ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x84, VT_VARIANT, &_val);
}

#pragma implementation_key(5303)
inline _variant_t XL95::LegendKey::GetMarkerBackgroundColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x49, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5304)
inline void XL95::LegendKey::PutMarkerBackgroundColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x49, VT_VARIANT, &_val);
}

#pragma implementation_key(5305)
inline _variant_t XL95::LegendKey::GetMarkerBackgroundColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5306)
inline void XL95::LegendKey::PutMarkerBackgroundColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4a, VT_VARIANT, &_val);
}

#pragma implementation_key(5307)
inline _variant_t XL95::LegendKey::GetMarkerForegroundColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5308)
inline void XL95::LegendKey::PutMarkerForegroundColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4b, VT_VARIANT, &_val);
}

#pragma implementation_key(5309)
inline _variant_t XL95::LegendKey::GetMarkerForegroundColorIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x4c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5310)
inline void XL95::LegendKey::PutMarkerForegroundColorIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x4c, VT_VARIANT, &_val);
}

#pragma implementation_key(5311)
inline _variant_t XL95::LegendKey::GetMarkerStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x48, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5312)
inline void XL95::LegendKey::PutMarkerStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x48, VT_VARIANT, &_val);
}

#pragma implementation_key(5313)
inline _variant_t XL95::LegendKey::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5314)
inline void XL95::LegendKey::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(5315)
inline _variant_t XL95::LegendKey::GetSmooth ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xa3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5316)
inline void XL95::LegendKey::PutSmooth ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xa3, VT_VARIANT, &_val);
}

//
// dispinterface Trendline wrapper method implementations
//

#pragma implementation_key(5317)
inline _variant_t XL95::Trendline::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5318)
inline _variant_t XL95::Trendline::ClearFormats ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5319)
inline _variant_t XL95::Trendline::Delete ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5320)
inline _variant_t XL95::Trendline::Select ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5321)
inline _variant_t XL95::Trendline::GetBackward ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5322)
inline void XL95::Trendline::PutBackward ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb9, VT_VARIANT, &_val);
}

#pragma implementation_key(5323)
inline _variant_t XL95::Trendline::GetBorder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x80, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5324)
inline void XL95::Trendline::PutBorder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x80, VT_VARIANT, &_val);
}

#pragma implementation_key(5325)
inline _variant_t XL95::Trendline::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5326)
inline void XL95::Trendline::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5327)
inline _variant_t XL95::Trendline::GetDataLabel ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x9e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5328)
inline void XL95::Trendline::PutDataLabel ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x9e, VT_VARIANT, &_val);
}

#pragma implementation_key(5329)
inline _variant_t XL95::Trendline::GetDisplayEquation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xbe, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5330)
inline void XL95::Trendline::PutDisplayEquation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xbe, VT_VARIANT, &_val);
}

#pragma implementation_key(5331)
inline _variant_t XL95::Trendline::GetDisplayRSquared ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xbd, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5332)
inline void XL95::Trendline::PutDisplayRSquared ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xbd, VT_VARIANT, &_val);
}

#pragma implementation_key(5333)
inline _variant_t XL95::Trendline::GetForward ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xbf, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5334)
inline void XL95::Trendline::PutForward ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xbf, VT_VARIANT, &_val);
}

#pragma implementation_key(5335)
inline _variant_t XL95::Trendline::GetIndex ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x1e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5336)
inline void XL95::Trendline::PutIndex ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x1e6, VT_VARIANT, &_val);
}

#pragma implementation_key(5337)
inline _variant_t XL95::Trendline::GetIntercept ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xba, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5338)
inline void XL95::Trendline::PutIntercept ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xba, VT_VARIANT, &_val);
}

#pragma implementation_key(5339)
inline _variant_t XL95::Trendline::GetInterceptIsAuto ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xbb, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5340)
inline void XL95::Trendline::PutInterceptIsAuto ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xbb, VT_VARIANT, &_val);
}

#pragma implementation_key(5341)
inline _variant_t XL95::Trendline::GetName ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5342)
inline void XL95::Trendline::PutName ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6e, VT_VARIANT, &_val);
}

#pragma implementation_key(5343)
inline _variant_t XL95::Trendline::GetNameIsAuto ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xbc, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5344)
inline void XL95::Trendline::PutNameIsAuto ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xbc, VT_VARIANT, &_val);
}

#pragma implementation_key(5345)
inline _variant_t XL95::Trendline::GetOrder ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xc0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5346)
inline void XL95::Trendline::PutOrder ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xc0, VT_VARIANT, &_val);
}

#pragma implementation_key(5347)
inline _variant_t XL95::Trendline::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5348)
inline void XL95::Trendline::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(5349)
inline _variant_t XL95::Trendline::GetPeriod ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0xb8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5350)
inline void XL95::Trendline::PutPeriod ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0xb8, VT_VARIANT, &_val);
}

#pragma implementation_key(5351)
inline _variant_t XL95::Trendline::GetType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x6c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5352)
inline void XL95::Trendline::PutType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x6c, VT_VARIANT, &_val);
}

//
// dispinterface Trendlines wrapper method implementations
//

#pragma implementation_key(5353)
inline _variant_t XL95::Trendlines::_NewEnum ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5354)
inline _variant_t XL95::Trendlines::Add ( const _variant_t & Type, const _variant_t & Order, const _variant_t & Period, const _variant_t & Forward, const _variant_t & Backward, const _variant_t & Intercept, const _variant_t & DisplayEquation, const _variant_t & DisplayRSquared, const _variant_t & Name ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Type, &Order, &Period, &Forward, &Backward, &Intercept, &DisplayEquation, &DisplayRSquared, &Name);
    return _variant_t(_result, false);
}

#pragma implementation_key(5355)
inline _variant_t XL95::Trendlines::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5356)
inline _variant_t XL95::Trendlines::Item ( const _variant_t & Index ) {
    VARIANT _result;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Index);
    return _variant_t(_result, false);
}

#pragma implementation_key(5357)
inline _variant_t XL95::Trendlines::GetCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x76, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5358)
inline void XL95::Trendlines::PutCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x76, VT_VARIANT, &_val);
}

#pragma implementation_key(5359)
inline _variant_t XL95::Trendlines::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5360)
inline void XL95::Trendlines::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5361)
inline _variant_t XL95::Trendlines::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5362)
inline void XL95::Trendlines::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

//
// dispinterface AutoCorrect wrapper method implementations
//

#pragma implementation_key(5363)
inline _variant_t XL95::AutoCorrect::AddReplacement ( const _variant_t & What, const _variant_t & Replacement ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x47a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x000c", &What, &Replacement);
    return _variant_t(_result, false);
}

#pragma implementation_key(5364)
inline _variant_t XL95::AutoCorrect::Application ( ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(5365)
inline _variant_t XL95::AutoCorrect::DeleteReplacement ( const _variant_t & What ) {
    VARIANT _result;
    _com_dispatch_method(this, 0x47b, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c", &What);
    return _variant_t(_result, false);
}

#pragma implementation_key(5366)
inline _variant_t XL95::AutoCorrect::GetCapitalizeNamesOfDays ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x47e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5367)
inline void XL95::AutoCorrect::PutCapitalizeNamesOfDays ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x47e, VT_VARIANT, &_val);
}

#pragma implementation_key(5368)
inline _variant_t XL95::AutoCorrect::GetCreator ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x95, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5369)
inline void XL95::AutoCorrect::PutCreator ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x95, VT_VARIANT, &_val);
}

#pragma implementation_key(5370)
inline _variant_t XL95::AutoCorrect::GetParent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x96, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5371)
inline void XL95::AutoCorrect::PutParent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x96, VT_VARIANT, &_val);
}

#pragma implementation_key(5372)
inline _variant_t XL95::AutoCorrect::GetReplacementList ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x47f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5373)
inline void XL95::AutoCorrect::PutReplacementList ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x47f, VT_VARIANT, &_val);
}

#pragma implementation_key(5374)
inline _variant_t XL95::AutoCorrect::GetReplaceText ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x47c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5375)
inline void XL95::AutoCorrect::PutReplaceText ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x47c, VT_VARIANT, &_val);
}

#pragma implementation_key(5376)
inline _variant_t XL95::AutoCorrect::GetTwoInitialCapitals ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x47d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5377)
inline void XL95::AutoCorrect::PutTwoInitialCapitals ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x47d, VT_VARIANT, &_val);
}
